{"ast":null,"code":"import V from '../V/index.mjs';\nimport { Element } from '../dia/Element.mjs';\nimport { Link as LinkBase } from '../dia/Link.mjs';\nimport { isPercentage, assign } from '../util/index.mjs';\nimport { attributes } from '../dia/attributes/index.mjs';\nimport { env } from '../env/index.mjs';\n\n// ELEMENTS\n\nexport const Rectangle = Element.define('standard.Rectangle', {\n  attrs: {\n    root: {\n      cursor: 'move'\n    },\n    body: {\n      width: 'calc(w)',\n      height: 'calc(h)',\n      strokeWidth: 2,\n      stroke: '#000000',\n      fill: '#FFFFFF'\n    },\n    label: {\n      textVerticalAnchor: 'middle',\n      textAnchor: 'middle',\n      x: 'calc(w/2)',\n      y: 'calc(h/2)',\n      fontSize: 14,\n      fill: '#333333'\n    }\n  }\n}, {\n  markup: [{\n    tagName: 'rect',\n    selector: 'body'\n  }, {\n    tagName: 'text',\n    selector: 'label'\n  }]\n});\nexport const Circle = Element.define('standard.Circle', {\n  attrs: {\n    root: {\n      cursor: 'move'\n    },\n    body: {\n      cx: 'calc(s/2)',\n      cy: 'calc(s/2)',\n      r: 'calc(s/2)',\n      strokeWidth: 2,\n      stroke: '#333333',\n      fill: '#FFFFFF'\n    },\n    label: {\n      textVerticalAnchor: 'middle',\n      textAnchor: 'middle',\n      x: 'calc(w/2)',\n      y: 'calc(h/2)',\n      fontSize: 14,\n      fill: '#333333'\n    }\n  }\n}, {\n  markup: [{\n    tagName: 'circle',\n    selector: 'body'\n  }, {\n    tagName: 'text',\n    selector: 'label'\n  }]\n});\nexport const Ellipse = Element.define('standard.Ellipse', {\n  attrs: {\n    root: {\n      cursor: 'move'\n    },\n    body: {\n      cx: 'calc(w/2)',\n      cy: 'calc(h/2)',\n      rx: 'calc(w/2)',\n      ry: 'calc(h/2)',\n      strokeWidth: 2,\n      stroke: '#333333',\n      fill: '#FFFFFF'\n    },\n    label: {\n      textVerticalAnchor: 'middle',\n      textAnchor: 'middle',\n      x: 'calc(w/2)',\n      y: 'calc(h/2)',\n      fontSize: 14,\n      fill: '#333333'\n    }\n  }\n}, {\n  markup: [{\n    tagName: 'ellipse',\n    selector: 'body'\n  }, {\n    tagName: 'text',\n    selector: 'label'\n  }]\n});\nexport const Path = Element.define('standard.Path', {\n  attrs: {\n    root: {\n      cursor: 'move'\n    },\n    body: {\n      d: 'M 0 0 H calc(w) V calc(h) H 0 Z',\n      strokeWidth: 2,\n      stroke: '#333333',\n      fill: '#FFFFFF'\n    },\n    label: {\n      textVerticalAnchor: 'middle',\n      textAnchor: 'middle',\n      x: 'calc(w/2)',\n      y: 'calc(h/2)',\n      fontSize: 14,\n      fill: '#333333'\n    }\n  }\n}, {\n  markup: [{\n    tagName: 'path',\n    selector: 'body'\n  }, {\n    tagName: 'text',\n    selector: 'label'\n  }]\n});\nexport const Polygon = Element.define('standard.Polygon', {\n  attrs: {\n    root: {\n      cursor: 'move'\n    },\n    body: {\n      points: '0 0 calc(w) 0 calc(w) calc(h) 0 calc(h)',\n      strokeWidth: 2,\n      stroke: '#333333',\n      fill: '#FFFFFF'\n    },\n    label: {\n      textVerticalAnchor: 'middle',\n      textAnchor: 'middle',\n      x: 'calc(w/2)',\n      y: 'calc(h/2)',\n      fontSize: 14,\n      fill: '#333333'\n    }\n  }\n}, {\n  markup: [{\n    tagName: 'polygon',\n    selector: 'body'\n  }, {\n    tagName: 'text',\n    selector: 'label'\n  }]\n});\nexport const Polyline = Element.define('standard.Polyline', {\n  attrs: {\n    root: {\n      cursor: 'move'\n    },\n    body: {\n      points: '0 0 calc(w) 0 calc(w) calc(h) 0 calc(h)',\n      strokeWidth: 2,\n      stroke: '#333333',\n      fill: '#FFFFFF'\n    },\n    label: {\n      textVerticalAnchor: 'middle',\n      textAnchor: 'middle',\n      x: 'calc(w/2)',\n      y: 'calc(h/2)',\n      fontSize: 14,\n      fill: '#333333'\n    }\n  }\n}, {\n  markup: [{\n    tagName: 'polyline',\n    selector: 'body'\n  }, {\n    tagName: 'text',\n    selector: 'label'\n  }]\n});\nexport const Image = Element.define('standard.Image', {\n  attrs: {\n    root: {\n      cursor: 'move'\n    },\n    image: {\n      width: 'calc(w)',\n      height: 'calc(h)'\n      // xlinkHref: '[URL]'\n    },\n    label: {\n      textVerticalAnchor: 'top',\n      textAnchor: 'middle',\n      x: 'calc(w/2)',\n      y: 'calc(h+10)',\n      fontSize: 14,\n      fill: '#333333'\n    }\n  }\n}, {\n  markup: [{\n    tagName: 'image',\n    selector: 'image'\n  }, {\n    tagName: 'text',\n    selector: 'label'\n  }]\n});\nexport const BorderedImage = Element.define('standard.BorderedImage', {\n  attrs: {\n    root: {\n      cursor: 'move'\n    },\n    border: {\n      width: 'calc(w)',\n      height: 'calc(h)',\n      stroke: '#333333',\n      strokeWidth: 2\n    },\n    background: {\n      width: 'calc(w-1)',\n      height: 'calc(h-1)',\n      x: 0.5,\n      y: 0.5,\n      fill: '#FFFFFF'\n    },\n    image: {\n      // xlinkHref: '[URL]'\n      width: 'calc(w-1)',\n      height: 'calc(h-1)',\n      x: 0.5,\n      y: 0.5\n    },\n    label: {\n      textVerticalAnchor: 'top',\n      textAnchor: 'middle',\n      x: 'calc(w/2)',\n      y: 'calc(h+10)',\n      fontSize: 14,\n      fill: '#333333'\n    }\n  }\n}, {\n  markup: [{\n    tagName: 'rect',\n    selector: 'background',\n    attributes: {\n      'stroke': 'none'\n    }\n  }, {\n    tagName: 'image',\n    selector: 'image'\n  }, {\n    tagName: 'rect',\n    selector: 'border',\n    attributes: {\n      'fill': 'none'\n    }\n  }, {\n    tagName: 'text',\n    selector: 'label'\n  }]\n});\nexport const EmbeddedImage = Element.define('standard.EmbeddedImage', {\n  attrs: {\n    root: {\n      cursor: 'move'\n    },\n    body: {\n      width: 'calc(w)',\n      height: 'calc(h)',\n      stroke: '#333333',\n      fill: '#FFFFFF',\n      strokeWidth: 2\n    },\n    image: {\n      // xlinkHref: '[URL]'\n      width: 'calc(0.3*w)',\n      height: 'calc(h-20)',\n      x: 10,\n      y: 10,\n      preserveAspectRatio: 'xMidYMin'\n    },\n    label: {\n      textVerticalAnchor: 'top',\n      textAnchor: 'left',\n      x: 'calc(0.3*w+20)',\n      // 10 + 10\n      y: 10,\n      fontSize: 14,\n      fill: '#333333'\n    }\n  }\n}, {\n  markup: [{\n    tagName: 'rect',\n    selector: 'body'\n  }, {\n    tagName: 'image',\n    selector: 'image'\n  }, {\n    tagName: 'text',\n    selector: 'label'\n  }]\n});\nexport const InscribedImage = Element.define('standard.InscribedImage', {\n  attrs: {\n    root: {\n      cursor: 'move'\n    },\n    border: {\n      rx: 'calc(w/2)',\n      ry: 'calc(h/2)',\n      cx: 'calc(w/2)',\n      cy: 'calc(h/2)',\n      stroke: '#333333',\n      strokeWidth: 2\n    },\n    background: {\n      rx: 'calc(w/2)',\n      ry: 'calc(h/2)',\n      cx: 'calc(w/2)',\n      cy: 'calc(h/2)',\n      fill: '#FFFFFF'\n    },\n    image: {\n      // The image corners touch the border when its size is Math.sqrt(2) / 2 = 0.707.. ~= 70%\n      width: 'calc(0.68*w)',\n      height: 'calc(0.68*h)',\n      // The image offset is calculated as (100% - 68%) / 2\n      x: 'calc(0.16*w)',\n      y: 'calc(0.16*h)',\n      preserveAspectRatio: 'xMidYMid'\n      // xlinkHref: '[URL]'\n    },\n    label: {\n      textVerticalAnchor: 'top',\n      textAnchor: 'middle',\n      x: 'calc(w/2)',\n      y: 'calc(h+10)',\n      fontSize: 14,\n      fill: '#333333'\n    }\n  }\n}, {\n  markup: [{\n    tagName: 'ellipse',\n    selector: 'background'\n  }, {\n    tagName: 'image',\n    selector: 'image'\n  }, {\n    tagName: 'ellipse',\n    selector: 'border',\n    attributes: {\n      'fill': 'none'\n    }\n  }, {\n    tagName: 'text',\n    selector: 'label'\n  }]\n});\nexport const HeaderedRectangle = Element.define('standard.HeaderedRectangle', {\n  attrs: {\n    root: {\n      cursor: 'move'\n    },\n    body: {\n      width: 'calc(w)',\n      height: 'calc(h)',\n      strokeWidth: 2,\n      stroke: '#000000',\n      fill: '#FFFFFF'\n    },\n    header: {\n      width: 'calc(w)',\n      height: 30,\n      strokeWidth: 2,\n      stroke: '#000000',\n      fill: '#FFFFFF'\n    },\n    headerText: {\n      textVerticalAnchor: 'middle',\n      textAnchor: 'middle',\n      x: 'calc(w/2)',\n      y: 15,\n      fontSize: 16,\n      fill: '#333333'\n    },\n    bodyText: {\n      textVerticalAnchor: 'middle',\n      textAnchor: 'middle',\n      x: 'calc(w/2)',\n      y: 'calc(h/2+15)',\n      fontSize: 14,\n      fill: '#333333'\n    }\n  }\n}, {\n  markup: [{\n    tagName: 'rect',\n    selector: 'body'\n  }, {\n    tagName: 'rect',\n    selector: 'header'\n  }, {\n    tagName: 'text',\n    selector: 'headerText'\n  }, {\n    tagName: 'text',\n    selector: 'bodyText'\n  }]\n});\nvar CYLINDER_TILT = 10;\nexport const Cylinder = Element.define('standard.Cylinder', {\n  attrs: {\n    root: {\n      cursor: 'move'\n    },\n    body: {\n      lateralArea: CYLINDER_TILT,\n      fill: '#FFFFFF',\n      stroke: '#333333',\n      strokeWidth: 2\n    },\n    top: {\n      cx: 'calc(w/2)',\n      cy: CYLINDER_TILT,\n      rx: 'calc(w/2)',\n      ry: CYLINDER_TILT,\n      fill: '#FFFFFF',\n      stroke: '#333333',\n      strokeWidth: 2\n    },\n    label: {\n      textVerticalAnchor: 'middle',\n      textAnchor: 'middle',\n      x: 'calc(w/2)',\n      y: 'calc(h+15)',\n      fontSize: 14,\n      fill: '#333333'\n    }\n  }\n}, {\n  markup: [{\n    tagName: 'path',\n    selector: 'body'\n  }, {\n    tagName: 'ellipse',\n    selector: 'top'\n  }, {\n    tagName: 'text',\n    selector: 'label'\n  }],\n  topRy: function (t, opt) {\n    // getter\n    if (t === undefined) return this.attr('body/lateralArea');\n\n    // setter\n    var bodyAttrs = {\n      lateralArea: t\n    };\n    var isPercentageSetter = isPercentage(t);\n    var ty = isPercentageSetter ? `calc(${parseFloat(t) / 100}*h)` : t;\n    var topAttrs = {\n      cy: ty,\n      ry: ty\n    };\n    return this.attr({\n      body: bodyAttrs,\n      top: topAttrs\n    }, opt);\n  }\n}, {\n  attributes: {\n    'lateral-area': {\n      set: function (t, refBBox) {\n        var isPercentageSetter = isPercentage(t);\n        if (isPercentageSetter) t = parseFloat(t) / 100;\n        var x = refBBox.x;\n        var y = refBBox.y;\n        var w = refBBox.width;\n        var h = refBBox.height;\n\n        // curve control point variables\n        var rx = w / 2;\n        var ry = isPercentageSetter ? h * t : t;\n        var kappa = V.KAPPA;\n        var cx = kappa * rx;\n        var cy = kappa * (isPercentageSetter ? h * t : t);\n\n        // shape variables\n        var xLeft = x;\n        var xCenter = x + w / 2;\n        var xRight = x + w;\n        var ySideTop = y + ry;\n        var yCurveTop = ySideTop - ry;\n        var ySideBottom = y + h - ry;\n        var yCurveBottom = y + h;\n\n        // return calculated shape\n        var data = ['M', xLeft, ySideTop, 'L', xLeft, ySideBottom, 'C', x, ySideBottom + cy, xCenter - cx, yCurveBottom, xCenter, yCurveBottom, 'C', xCenter + cx, yCurveBottom, xRight, ySideBottom + cy, xRight, ySideBottom, 'L', xRight, ySideTop, 'C', xRight, ySideTop - cy, xCenter + cx, yCurveTop, xCenter, yCurveTop, 'C', xCenter - cx, yCurveTop, xLeft, ySideTop - cy, xLeft, ySideTop, 'Z'];\n        return {\n          d: data.join(' ')\n        };\n      }\n    }\n  }\n});\nvar foLabelMarkup = {\n  tagName: 'foreignObject',\n  selector: 'foreignObject',\n  attributes: {\n    'overflow': 'hidden'\n  },\n  children: [{\n    tagName: 'div',\n    namespaceURI: 'http://www.w3.org/1999/xhtml',\n    selector: 'label',\n    style: {\n      width: '100%',\n      height: '100%',\n      position: 'static',\n      backgroundColor: 'transparent',\n      textAlign: 'center',\n      margin: 0,\n      padding: '0px 5px',\n      boxSizing: 'border-box',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }]\n};\nvar svgLabelMarkup = {\n  tagName: 'text',\n  selector: 'label',\n  attributes: {\n    'text-anchor': 'middle'\n  }\n};\nvar labelMarkup = env.test('svgforeignobject') ? foLabelMarkup : svgLabelMarkup;\nexport const TextBlock = Element.define('standard.TextBlock', {\n  attrs: {\n    root: {\n      cursor: 'move'\n    },\n    body: {\n      width: 'calc(w)',\n      height: 'calc(h)',\n      stroke: '#333333',\n      fill: '#ffffff',\n      strokeWidth: 2\n    },\n    foreignObject: {\n      width: 'calc(w)',\n      height: 'calc(h)'\n    },\n    label: {\n      style: {\n        fontSize: 14\n      }\n    }\n  }\n}, {\n  markup: [{\n    tagName: 'rect',\n    selector: 'body'\n  }, labelMarkup]\n}, {\n  attributes: {\n    text: {\n      set: function (text, refBBox, node, attrs) {\n        if (node instanceof HTMLElement) {\n          node.textContent = text;\n        } else {\n          // No foreign object\n          var style = attrs['style'] || {};\n          var wrapValue = {\n            text,\n            width: -5,\n            height: '100%'\n          };\n          var wrapAttrs = assign({\n            'text-vertical-anchor': 'middle'\n          }, style);\n          attributes['text-wrap'].set.call(this, wrapValue, refBBox, node, wrapAttrs);\n          return {\n            fill: style.color || null\n          };\n        }\n      },\n      position: function (text, refBBox, node) {\n        // No foreign object\n        if (node instanceof SVGElement) return refBBox.center();\n      }\n    }\n  }\n});\n\n// LINKS\n\nexport const Link = LinkBase.define('standard.Link', {\n  attrs: {\n    line: {\n      connection: true,\n      stroke: '#333333',\n      strokeWidth: 2,\n      strokeLinejoin: 'round',\n      targetMarker: {\n        'type': 'path',\n        'd': 'M 10 -5 0 0 10 5 z'\n      }\n    },\n    wrapper: {\n      connection: true,\n      strokeWidth: 10,\n      strokeLinejoin: 'round'\n    }\n  }\n}, {\n  markup: [{\n    tagName: 'path',\n    selector: 'wrapper',\n    attributes: {\n      'fill': 'none',\n      'cursor': 'pointer',\n      'stroke': 'transparent',\n      'stroke-linecap': 'round'\n    }\n  }, {\n    tagName: 'path',\n    selector: 'line',\n    attributes: {\n      'fill': 'none',\n      'pointer-events': 'none'\n    }\n  }]\n});\nexport const DoubleLink = LinkBase.define('standard.DoubleLink', {\n  attrs: {\n    line: {\n      connection: true,\n      stroke: '#DDDDDD',\n      strokeWidth: 4,\n      strokeLinejoin: 'round',\n      targetMarker: {\n        type: 'path',\n        stroke: '#000000',\n        d: 'M 10 -3 10 -10 -2 0 10 10 10 3'\n      }\n    },\n    outline: {\n      connection: true,\n      stroke: '#000000',\n      strokeWidth: 6,\n      strokeLinejoin: 'round'\n    }\n  }\n}, {\n  markup: [{\n    tagName: 'path',\n    selector: 'outline',\n    attributes: {\n      'fill': 'none',\n      'cursor': 'pointer'\n    }\n  }, {\n    tagName: 'path',\n    selector: 'line',\n    attributes: {\n      'fill': 'none',\n      'pointer-events': 'none'\n    }\n  }]\n});\nexport const ShadowLink = LinkBase.define('standard.ShadowLink', {\n  attrs: {\n    line: {\n      connection: true,\n      stroke: '#FF0000',\n      strokeWidth: 20,\n      strokeLinejoin: 'round',\n      targetMarker: {\n        'type': 'path',\n        'stroke': 'none',\n        'd': 'M 0 -10 -10 0 0 10 z'\n      },\n      sourceMarker: {\n        'type': 'path',\n        'stroke': 'none',\n        'd': 'M -10 -10 0 0 -10 10 0 10 0 -10 z'\n      }\n    },\n    shadow: {\n      connection: true,\n      transform: 'translate(3,6)',\n      stroke: '#000000',\n      strokeOpacity: 0.2,\n      strokeWidth: 20,\n      strokeLinejoin: 'round',\n      targetMarker: {\n        'type': 'path',\n        'd': 'M 0 -10 -10 0 0 10 z',\n        'stroke': 'none'\n      },\n      sourceMarker: {\n        'type': 'path',\n        'stroke': 'none',\n        'd': 'M -10 -10 0 0 -10 10 0 10 0 -10 z'\n      }\n    }\n  }\n}, {\n  markup: [{\n    tagName: 'path',\n    selector: 'shadow',\n    attributes: {\n      'fill': 'none',\n      'pointer-events': 'none'\n    }\n  }, {\n    tagName: 'path',\n    selector: 'line',\n    attributes: {\n      'fill': 'none',\n      'cursor': 'pointer'\n    }\n  }]\n});","map":{"version":3,"names":["V","Element","Link","LinkBase","isPercentage","assign","attributes","env","Rectangle","define","attrs","root","cursor","body","width","height","strokeWidth","stroke","fill","label","textVerticalAnchor","textAnchor","x","y","fontSize","markup","tagName","selector","Circle","cx","cy","r","Ellipse","rx","ry","Path","d","Polygon","points","Polyline","Image","image","BorderedImage","border","background","EmbeddedImage","preserveAspectRatio","InscribedImage","HeaderedRectangle","header","headerText","bodyText","CYLINDER_TILT","Cylinder","lateralArea","top","topRy","t","opt","undefined","attr","bodyAttrs","isPercentageSetter","ty","parseFloat","topAttrs","set","refBBox","w","h","kappa","KAPPA","xLeft","xCenter","xRight","ySideTop","yCurveTop","ySideBottom","yCurveBottom","data","join","foLabelMarkup","children","namespaceURI","style","position","backgroundColor","textAlign","margin","padding","boxSizing","display","alignItems","justifyContent","svgLabelMarkup","labelMarkup","test","TextBlock","foreignObject","text","node","HTMLElement","textContent","wrapValue","wrapAttrs","call","color","SVGElement","center","line","connection","strokeLinejoin","targetMarker","wrapper","DoubleLink","type","outline","ShadowLink","sourceMarker","shadow","transform","strokeOpacity"],"sources":["/Users/guankaiyuan/ReactTs/node_modules/.pnpm/@joint+core@4.0.1/node_modules/@joint/core/src/shapes/standard.mjs"],"sourcesContent":["import V from '../V/index.mjs';\nimport { Element } from '../dia/Element.mjs';\nimport { Link as LinkBase } from '../dia/Link.mjs';\nimport { isPercentage, assign } from '../util/index.mjs';\nimport { attributes } from '../dia/attributes/index.mjs';\nimport { env } from '../env/index.mjs';\n\n\n// ELEMENTS\n\nexport const Rectangle = Element.define('standard.Rectangle', {\n    attrs: {\n        root: {\n            cursor: 'move'\n        },\n        body: {\n            width: 'calc(w)',\n            height: 'calc(h)',\n            strokeWidth: 2,\n            stroke: '#000000',\n            fill: '#FFFFFF'\n        },\n        label: {\n            textVerticalAnchor: 'middle',\n            textAnchor: 'middle',\n            x: 'calc(w/2)',\n            y: 'calc(h/2)',\n            fontSize: 14,\n            fill: '#333333'\n        }\n    }\n}, {\n    markup: [{\n        tagName: 'rect',\n        selector: 'body',\n    }, {\n        tagName: 'text',\n        selector: 'label'\n    }]\n});\n\nexport const Circle = Element.define('standard.Circle', {\n    attrs: {\n        root: {\n            cursor: 'move'\n        },\n        body: {\n            cx: 'calc(s/2)',\n            cy: 'calc(s/2)',\n            r: 'calc(s/2)',\n            strokeWidth: 2,\n            stroke: '#333333',\n            fill: '#FFFFFF'\n        },\n        label: {\n            textVerticalAnchor: 'middle',\n            textAnchor: 'middle',\n            x: 'calc(w/2)',\n            y: 'calc(h/2)',\n            fontSize: 14,\n            fill: '#333333'\n        }\n    }\n}, {\n    markup: [{\n        tagName: 'circle',\n        selector: 'body'\n    }, {\n        tagName: 'text',\n        selector: 'label'\n    }]\n});\n\nexport const Ellipse = Element.define('standard.Ellipse', {\n    attrs: {\n        root: {\n            cursor: 'move'\n        },\n        body: {\n            cx: 'calc(w/2)',\n            cy: 'calc(h/2)',\n            rx: 'calc(w/2)',\n            ry: 'calc(h/2)',\n            strokeWidth: 2,\n            stroke: '#333333',\n            fill: '#FFFFFF'\n        },\n        label: {\n            textVerticalAnchor: 'middle',\n            textAnchor: 'middle',\n            x: 'calc(w/2)',\n            y: 'calc(h/2)',\n            fontSize: 14,\n            fill: '#333333'\n        }\n    }\n}, {\n    markup: [{\n        tagName: 'ellipse',\n        selector: 'body'\n    }, {\n        tagName: 'text',\n        selector: 'label'\n    }]\n});\n\nexport const Path = Element.define('standard.Path', {\n    attrs: {\n        root: {\n            cursor: 'move'\n        },\n        body: {\n            d: 'M 0 0 H calc(w) V calc(h) H 0 Z',\n            strokeWidth: 2,\n            stroke: '#333333',\n            fill: '#FFFFFF'\n        },\n        label: {\n            textVerticalAnchor: 'middle',\n            textAnchor: 'middle',\n            x: 'calc(w/2)',\n            y: 'calc(h/2)',\n            fontSize: 14,\n            fill: '#333333'\n        }\n    }\n}, {\n    markup: [{\n        tagName: 'path',\n        selector: 'body'\n    }, {\n        tagName: 'text',\n        selector: 'label'\n    }]\n});\n\nexport const Polygon = Element.define('standard.Polygon', {\n    attrs: {\n        root: {\n            cursor: 'move'\n        },\n        body: {\n            points: '0 0 calc(w) 0 calc(w) calc(h) 0 calc(h)',\n            strokeWidth: 2,\n            stroke: '#333333',\n            fill: '#FFFFFF'\n        },\n        label: {\n            textVerticalAnchor: 'middle',\n            textAnchor: 'middle',\n            x: 'calc(w/2)',\n            y: 'calc(h/2)',\n            fontSize: 14,\n            fill: '#333333'\n        }\n    }\n}, {\n    markup: [{\n        tagName: 'polygon',\n        selector: 'body'\n    }, {\n        tagName: 'text',\n        selector: 'label'\n    }]\n});\n\nexport const Polyline = Element.define('standard.Polyline', {\n    attrs: {\n        root: {\n            cursor: 'move'\n        },\n        body: {\n            points: '0 0 calc(w) 0 calc(w) calc(h) 0 calc(h)',\n            strokeWidth: 2,\n            stroke: '#333333',\n            fill: '#FFFFFF'\n        },\n        label: {\n            textVerticalAnchor: 'middle',\n            textAnchor: 'middle',\n            x: 'calc(w/2)',\n            y: 'calc(h/2)',\n            fontSize: 14,\n            fill: '#333333'\n        }\n    }\n}, {\n    markup: [{\n        tagName: 'polyline',\n        selector: 'body'\n    }, {\n        tagName: 'text',\n        selector: 'label'\n    }]\n});\n\nexport const Image = Element.define('standard.Image', {\n    attrs: {\n        root: {\n            cursor: 'move'\n        },\n        image: {\n            width: 'calc(w)',\n            height: 'calc(h)',\n            // xlinkHref: '[URL]'\n        },\n        label: {\n            textVerticalAnchor: 'top',\n            textAnchor: 'middle',\n            x: 'calc(w/2)',\n            y: 'calc(h+10)',\n            fontSize: 14,\n            fill: '#333333'\n        }\n    }\n}, {\n    markup: [{\n        tagName: 'image',\n        selector: 'image'\n    }, {\n        tagName: 'text',\n        selector: 'label'\n    }]\n});\n\nexport const BorderedImage = Element.define('standard.BorderedImage', {\n    attrs: {\n        root: {\n            cursor: 'move'\n        },\n        border: {\n            width: 'calc(w)',\n            height: 'calc(h)',\n            stroke: '#333333',\n            strokeWidth: 2\n        },\n        background: {\n            width: 'calc(w-1)',\n            height: 'calc(h-1)',\n            x: 0.5,\n            y: 0.5,\n            fill: '#FFFFFF'\n        },\n        image: {\n            // xlinkHref: '[URL]'\n            width: 'calc(w-1)',\n            height: 'calc(h-1)',\n            x: 0.5,\n            y: 0.5\n        },\n        label: {\n            textVerticalAnchor: 'top',\n            textAnchor: 'middle',\n            x: 'calc(w/2)',\n            y: 'calc(h+10)',\n            fontSize: 14,\n            fill: '#333333'\n        }\n    }\n}, {\n    markup: [{\n        tagName: 'rect',\n        selector: 'background',\n        attributes: {\n            'stroke': 'none'\n        }\n    }, {\n        tagName: 'image',\n        selector: 'image'\n    }, {\n        tagName: 'rect',\n        selector: 'border',\n        attributes: {\n            'fill': 'none'\n        }\n    }, {\n        tagName: 'text',\n        selector: 'label'\n    }]\n});\n\nexport const EmbeddedImage = Element.define('standard.EmbeddedImage', {\n    attrs: {\n        root: {\n            cursor: 'move'\n        },\n        body: {\n            width: 'calc(w)',\n            height: 'calc(h)',\n            stroke: '#333333',\n            fill: '#FFFFFF',\n            strokeWidth: 2\n        },\n        image: {\n            // xlinkHref: '[URL]'\n            width: 'calc(0.3*w)',\n            height: 'calc(h-20)',\n            x: 10,\n            y: 10,\n            preserveAspectRatio: 'xMidYMin'\n        },\n        label: {\n            textVerticalAnchor: 'top',\n            textAnchor: 'left',\n            x: 'calc(0.3*w+20)', // 10 + 10\n            y: 10,\n            fontSize: 14,\n            fill: '#333333'\n        }\n    }\n}, {\n    markup: [{\n        tagName: 'rect',\n        selector: 'body'\n    }, {\n        tagName: 'image',\n        selector: 'image'\n    }, {\n        tagName: 'text',\n        selector: 'label'\n    }]\n});\n\nexport const InscribedImage = Element.define('standard.InscribedImage', {\n    attrs: {\n        root: {\n            cursor: 'move'\n        },\n        border: {\n            rx: 'calc(w/2)',\n            ry: 'calc(h/2)',\n            cx: 'calc(w/2)',\n            cy: 'calc(h/2)',\n            stroke: '#333333',\n            strokeWidth: 2\n        },\n        background: {\n            rx: 'calc(w/2)',\n            ry: 'calc(h/2)',\n            cx: 'calc(w/2)',\n            cy: 'calc(h/2)',\n            fill: '#FFFFFF'\n        },\n        image: {\n            // The image corners touch the border when its size is Math.sqrt(2) / 2 = 0.707.. ~= 70%\n            width: 'calc(0.68*w)',\n            height: 'calc(0.68*h)',\n            // The image offset is calculated as (100% - 68%) / 2\n            x: 'calc(0.16*w)',\n            y: 'calc(0.16*h)',\n            preserveAspectRatio: 'xMidYMid'\n            // xlinkHref: '[URL]'\n        },\n        label: {\n            textVerticalAnchor: 'top',\n            textAnchor: 'middle',\n            x: 'calc(w/2)',\n            y: 'calc(h+10)',\n            fontSize: 14,\n            fill: '#333333'\n        }\n    }\n}, {\n    markup: [{\n        tagName: 'ellipse',\n        selector: 'background'\n    }, {\n        tagName: 'image',\n        selector: 'image'\n    }, {\n        tagName: 'ellipse',\n        selector: 'border',\n        attributes: {\n            'fill': 'none'\n        }\n    }, {\n        tagName: 'text',\n        selector: 'label'\n    }]\n});\n\nexport const HeaderedRectangle = Element.define('standard.HeaderedRectangle', {\n    attrs: {\n        root: {\n            cursor: 'move'\n        },\n        body: {\n            width: 'calc(w)',\n            height: 'calc(h)',\n            strokeWidth: 2,\n            stroke: '#000000',\n            fill: '#FFFFFF'\n        },\n        header: {\n            width: 'calc(w)',\n            height: 30,\n            strokeWidth: 2,\n            stroke: '#000000',\n            fill: '#FFFFFF'\n        },\n        headerText: {\n            textVerticalAnchor: 'middle',\n            textAnchor: 'middle',\n            x: 'calc(w/2)',\n            y: 15,\n            fontSize: 16,\n            fill: '#333333'\n        },\n        bodyText: {\n            textVerticalAnchor: 'middle',\n            textAnchor: 'middle',\n            x: 'calc(w/2)',\n            y: 'calc(h/2+15)',\n            fontSize: 14,\n            fill: '#333333'\n        }\n    }\n}, {\n    markup: [{\n        tagName: 'rect',\n        selector: 'body'\n    }, {\n        tagName: 'rect',\n        selector: 'header'\n    }, {\n        tagName: 'text',\n        selector: 'headerText'\n    }, {\n        tagName: 'text',\n        selector: 'bodyText'\n    }]\n});\n\nvar CYLINDER_TILT = 10;\n\nexport const Cylinder = Element.define('standard.Cylinder', {\n    attrs: {\n        root: {\n            cursor: 'move'\n        },\n        body: {\n            lateralArea: CYLINDER_TILT,\n            fill: '#FFFFFF',\n            stroke: '#333333',\n            strokeWidth: 2\n        },\n        top: {\n            cx: 'calc(w/2)',\n            cy: CYLINDER_TILT,\n            rx: 'calc(w/2)',\n            ry: CYLINDER_TILT,\n            fill: '#FFFFFF',\n            stroke: '#333333',\n            strokeWidth: 2\n        },\n        label: {\n            textVerticalAnchor: 'middle',\n            textAnchor: 'middle',\n            x: 'calc(w/2)',\n            y: 'calc(h+15)',\n            fontSize: 14,\n            fill: '#333333'\n        }\n    }\n}, {\n    markup: [{\n        tagName: 'path',\n        selector: 'body'\n    }, {\n        tagName: 'ellipse',\n        selector: 'top'\n    }, {\n        tagName: 'text',\n        selector: 'label'\n    }],\n\n    topRy: function(t, opt) {\n        // getter\n        if (t === undefined) return this.attr('body/lateralArea');\n\n        // setter\n        var bodyAttrs = { lateralArea: t };\n\n        var isPercentageSetter = isPercentage(t);\n        var ty = (isPercentageSetter) ? `calc(${parseFloat(t) / 100}*h)` : t;\n        var topAttrs = { cy: ty, ry: ty };\n\n        return this.attr({ body: bodyAttrs, top: topAttrs }, opt);\n    }\n\n}, {\n    attributes: {\n        'lateral-area': {\n            set: function(t, refBBox) {\n                var isPercentageSetter = isPercentage(t);\n                if (isPercentageSetter) t = parseFloat(t) / 100;\n\n                var x = refBBox.x;\n                var y = refBBox.y;\n                var w = refBBox.width;\n                var h = refBBox.height;\n\n                // curve control point variables\n                var rx = w / 2;\n                var ry = isPercentageSetter ? (h * t) : t;\n\n                var kappa = V.KAPPA;\n                var cx = kappa * rx;\n                var cy = kappa * (isPercentageSetter ? (h * t) : t);\n\n                // shape variables\n                var xLeft = x;\n                var xCenter = x + (w / 2);\n                var xRight = x + w;\n\n                var ySideTop = y + ry;\n                var yCurveTop = ySideTop - ry;\n                var ySideBottom = y + h - ry;\n                var yCurveBottom = y + h;\n\n                // return calculated shape\n                var data = [\n                    'M', xLeft, ySideTop,\n                    'L', xLeft, ySideBottom,\n                    'C', x, (ySideBottom + cy), (xCenter - cx), yCurveBottom, xCenter, yCurveBottom,\n                    'C', (xCenter + cx), yCurveBottom, xRight, (ySideBottom + cy), xRight, ySideBottom,\n                    'L', xRight, ySideTop,\n                    'C', xRight, (ySideTop - cy), (xCenter + cx), yCurveTop, xCenter, yCurveTop,\n                    'C', (xCenter - cx), yCurveTop, xLeft, (ySideTop - cy), xLeft, ySideTop,\n                    'Z'\n                ];\n                return { d: data.join(' ') };\n            }\n        }\n    }\n});\n\nvar foLabelMarkup = {\n    tagName: 'foreignObject',\n    selector: 'foreignObject',\n    attributes: {\n        'overflow': 'hidden'\n    },\n    children: [{\n        tagName: 'div',\n        namespaceURI: 'http://www.w3.org/1999/xhtml',\n        selector: 'label',\n        style: {\n            width: '100%',\n            height: '100%',\n            position: 'static',\n            backgroundColor: 'transparent',\n            textAlign: 'center',\n            margin: 0,\n            padding: '0px 5px',\n            boxSizing: 'border-box',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n        }\n    }]\n};\n\nvar svgLabelMarkup = {\n    tagName: 'text',\n    selector: 'label',\n    attributes: {\n        'text-anchor': 'middle'\n    }\n};\n\nvar labelMarkup = (env.test('svgforeignobject')) ? foLabelMarkup : svgLabelMarkup;\n\nexport const TextBlock = Element.define('standard.TextBlock', {\n    attrs: {\n        root: {\n            cursor: 'move'\n        },\n        body: {\n            width: 'calc(w)',\n            height: 'calc(h)',\n            stroke: '#333333',\n            fill: '#ffffff',\n            strokeWidth: 2\n        },\n        foreignObject: {\n            width: 'calc(w)',\n            height: 'calc(h)',\n        },\n        label: {\n            style: {\n                fontSize: 14\n            }\n        }\n    }\n}, {\n    markup: [{\n        tagName: 'rect',\n        selector: 'body'\n    }, labelMarkup]\n}, {\n    attributes: {\n        text: {\n            set: function(text, refBBox, node, attrs) {\n                if (node instanceof HTMLElement) {\n                    node.textContent = text;\n                } else {\n                    // No foreign object\n                    var style = attrs['style'] || {};\n                    var wrapValue = { text, width: -5, height: '100%' };\n                    var wrapAttrs = assign({ 'text-vertical-anchor': 'middle' }, style);\n                    attributes['text-wrap'].set.call(this, wrapValue, refBBox, node, wrapAttrs);\n                    return { fill: style.color || null };\n                }\n            },\n            position: function(text, refBBox, node) {\n                // No foreign object\n                if (node instanceof SVGElement) return refBBox.center();\n            }\n        }\n    }\n});\n\n// LINKS\n\nexport const Link = LinkBase.define('standard.Link', {\n    attrs: {\n        line: {\n            connection: true,\n            stroke: '#333333',\n            strokeWidth: 2,\n            strokeLinejoin: 'round',\n            targetMarker: {\n                'type': 'path',\n                'd': 'M 10 -5 0 0 10 5 z'\n            }\n        },\n        wrapper: {\n            connection: true,\n            strokeWidth: 10,\n            strokeLinejoin: 'round'\n        }\n    }\n}, {\n    markup: [{\n        tagName: 'path',\n        selector: 'wrapper',\n        attributes: {\n            'fill': 'none',\n            'cursor': 'pointer',\n            'stroke': 'transparent',\n            'stroke-linecap': 'round'\n        }\n    }, {\n        tagName: 'path',\n        selector: 'line',\n        attributes: {\n            'fill': 'none',\n            'pointer-events': 'none'\n        }\n    }]\n});\n\nexport const DoubleLink = LinkBase.define('standard.DoubleLink', {\n    attrs: {\n        line: {\n            connection: true,\n            stroke: '#DDDDDD',\n            strokeWidth: 4,\n            strokeLinejoin: 'round',\n            targetMarker: {\n                type: 'path',\n                stroke: '#000000',\n                d: 'M 10 -3 10 -10 -2 0 10 10 10 3'\n            }\n        },\n        outline: {\n            connection: true,\n            stroke: '#000000',\n            strokeWidth: 6,\n            strokeLinejoin: 'round'\n        }\n    }\n}, {\n    markup: [{\n        tagName: 'path',\n        selector: 'outline',\n        attributes: {\n            'fill': 'none',\n            'cursor': 'pointer'\n        }\n    }, {\n        tagName: 'path',\n        selector: 'line',\n        attributes: {\n            'fill': 'none',\n            'pointer-events': 'none'\n        }\n    }]\n});\n\nexport const ShadowLink = LinkBase.define('standard.ShadowLink', {\n    attrs: {\n        line: {\n            connection: true,\n            stroke: '#FF0000',\n            strokeWidth: 20,\n            strokeLinejoin: 'round',\n            targetMarker: {\n                'type': 'path',\n                'stroke': 'none',\n                'd': 'M 0 -10 -10 0 0 10 z'\n            },\n            sourceMarker: {\n                'type': 'path',\n                'stroke': 'none',\n                'd': 'M -10 -10 0 0 -10 10 0 10 0 -10 z'\n            }\n        },\n        shadow: {\n            connection: true,\n            transform: 'translate(3,6)',\n            stroke: '#000000',\n            strokeOpacity: 0.2,\n            strokeWidth: 20,\n            strokeLinejoin: 'round',\n            targetMarker: {\n                'type': 'path',\n                'd': 'M 0 -10 -10 0 0 10 z',\n                'stroke': 'none'\n            },\n            sourceMarker: {\n                'type': 'path',\n                'stroke': 'none',\n                'd': 'M -10 -10 0 0 -10 10 0 10 0 -10 z'\n            }\n        }\n    }\n}, {\n    markup: [{\n        tagName: 'path',\n        selector: 'shadow',\n        attributes: {\n            'fill': 'none',\n            'pointer-events': 'none'\n        }\n    }, {\n        tagName: 'path',\n        selector: 'line',\n        attributes: {\n            'fill': 'none',\n            'cursor': 'pointer'\n        }\n    }]\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}