{"ast":null,"code":"/*! JointJS+ v4.0.0 - HTML5 Diagramming Framework - TRIAL VERSION\n   版本声明和许可信息\n*/\n\nimport { dia, shapes, ui } from '@joint/plus'; // 导入 JointJS+ 中的 dia、shapes、ui 模块\n\nimport { enableVirtualRendering } from './features/virtual-rendering'; // 导入启用虚拟渲染的函数\nimport { toolbarConfig } from './config/toolbar.config'; // 导入工具栏配置\nimport { BACKGROUND_COLOR, SECONDARY_BACKGROUND_COLOR, GRID_SIZE, PADDING_L, PADDING_S } from '../theme'; // 导入主题颜色和间距常量\nimport './shapes/index'; // 导入图形形状定义\n\n// 创建并返回一组插件\nexport function createPlugins(scopeElement,\n// 作用域元素，通常为包含画布的 DOM 元素\npaperElement,\n// 画布元素\nstencilElement,\n// 模板元素\ntoolbarElement) {\n  // Graph 图形对象\n  const graph = new dia.Graph({}, {\n    cellNamespace: shapes\n  }); // 创建一个空的图形对象\n\n  // Paper 画布对象\n  const paper = new dia.Paper({\n    model: graph,\n    // 设置画布的模型为图形对象\n    async: true,\n    // 异步渲染\n    sorting: dia.Paper.sorting.APPROX,\n    // 排序方式\n    gridSize: GRID_SIZE,\n    // 网格大小\n    linkPinning: false,\n    // 连接是否固定\n    multiLinks: false,\n    // 是否允许多连接\n    snapLinks: true,\n    // 是否捕捉连接\n    moveThreshold: 5,\n    // 移动阈值\n    magnetThreshold: 'onleave',\n    // 磁力吸附阈值\n    background: {\n      color: BACKGROUND_COLOR\n    },\n    // 背景颜色\n    cellViewNamespace: shapes,\n    // 元素视图命名空间\n    interactive: {\n      labelMove: true,\n      // 是否允许标签移动\n      linkMove: false // 是否允许连接移动\n    },\n    defaultRouter: {\n      // 默认路由器配置\n      name: 'manhattan',\n      // 路由器名称\n      args: {\n        padding: {\n          bottom: PADDING_L,\n          vertical: PADDING_S,\n          horizontal: PADDING_S\n        },\n        // 路由器参数\n        step: GRID_SIZE // 路由器参数\n      }\n    },\n    defaultConnector: {\n      name: 'rounded'\n    },\n    // 默认连接器\n    defaultLink: () => new shapes.app.Link(),\n    // 默认连接对象的创建函数\n    validateConnection: (sourceView, sourceMagnet, targetView, targetMagnet) => {\n      // 验证连接是否合法\n      if (sourceView === targetView) return false; // 源视图与目标视图相同时，不合法\n      if (targetView.findAttribute('port-group', targetMagnet) !== 'in') return false; // 目标视图不是输入端口时，不合法\n      if (sourceView.findAttribute('port-group', sourceMagnet) !== 'out') return false; // 源视图不是输出端口时，不合法\n      return true; // 其他情况下，连接合法\n    }\n  });\n\n  // PaperScroller 插件（滚动和缩放）\n  const scroller = new ui.PaperScroller({\n    paper,\n    // 设置关联的画布对象\n    autoResizePaper: true,\n    // 自动调整画布大小\n    contentOptions: {\n      padding: 100,\n      allowNewOrigin: 'any',\n      allowNegativeBottomRight: true,\n      useModelGeometry: true\n    },\n    scrollWhileDragging: true,\n    // 拖动时滚动\n    cursor: 'grab',\n    // 光标样式\n    baseWidth: 1000,\n    // 基础宽度\n    baseHeight: 1000 // 基础高度\n  });\n  paperElement.appendChild(scroller.el); // 将滚动条元素添加到画布元素中\n  scroller.render().center(); // 渲染并居中显示\n\n  // 渲染用户看到的内容，保持渲染的单元格数量最小\n  enableVirtualRendering(scroller, {\n    threshold: 50\n  }); // 启用虚拟渲染\n\n  // Stencil 插件（元素调色板）\n  const stencil = new ui.Stencil({\n    paper: scroller,\n    // 设置关联的画布对象\n    width: 240,\n    // 宽度\n    scaleClones: true,\n    // 是否缩放副本\n    dropAnimation: true,\n    // 是否启用拖放动画\n    paperOptions: {\n      sorting: dia.Paper.sorting.NONE,\n      // 排序方式\n      background: {\n        color: SECONDARY_BACKGROUND_COLOR // 背景颜色\n      }\n    },\n    dragStartClone: element => {\n      // 拖动开始时的副本创建函数\n      const name = element.get('name'); // 获取元素名称\n      // @ts-ignore\n      const Shape = shapes.app[name]; // 获取元素形状类\n      if (!Shape) throw new Error(`Invalid stencil shape name: ${name}`); // 若未找到对应的形状类，则抛出错误\n      return Shape.fromStencilShape(element); // 返回从模板形状创建的元素\n    },\n    layout: {\n      columnWidth: 110,\n      // 列宽度\n      columns: 1,\n      // 列数\n      rowGap: PADDING_S,\n      // 行间距\n      rowHeight: 'auto',\n      // 行高度\n      marginY: PADDING_S,\n      // Y 方向的边距\n      marginX: -PADDING_L // X 方向的边距\n    }\n  });\n  stencilElement.appendChild(stencil.el); // 将模板元素添加到 DOM 中\n  stencil.render(); // 渲染模板\n\n  // Command Manager 插件（撤销 / 重做）\n  const history = new dia.CommandManager({\n    graph // 设置关联的图形对象\n  });\n\n  // Toolbar 插件\n  const toolbar = new ui.Toolbar({\n    tools: toolbarConfig.tools,\n    // 工具配置\n    autoToggle: true,\n    // 自动切换\n    references: {\n      paperScroller: scroller,\n      // 画布滚动条对象\n      commandManager: history // 命令管理器对象\n    }\n  });\n  toolbarElement.appendChild(toolbar.el); // 将工具栏元素添加到 DOM 中\n  toolbar.render(); // 渲染工具栏\n\n  // Tooltip 插件\n  const tooltip = new ui.Tooltip({\n    rootTarget: scopeElement,\n    // 根目标元素\n    container: scopeElement,\n    // 容器\n    target: '[data-tooltip]',\n    // 目标选择器\n    direction: ui.Tooltip.TooltipArrowPosition.Auto,\n    // 提示框箭头方向\n    padding: PADDING_S,\n    // 内边距\n    animation: true // 动画效果\n  });\n\n  // Keyboard 插件\n  const keyboard = new ui.Keyboard(); // 创建键盘对象\n\n  // 返回所有插件对象\n  return {\n    graph,\n    paper,\n    scroller,\n    stencil,\n    toolbar,\n    tooltip,\n    keyboard,\n    history\n  };\n}","map":{"version":3,"names":["dia","shapes","ui","enableVirtualRendering","toolbarConfig","BACKGROUND_COLOR","SECONDARY_BACKGROUND_COLOR","GRID_SIZE","PADDING_L","PADDING_S","createPlugins","scopeElement","paperElement","stencilElement","toolbarElement","graph","Graph","cellNamespace","paper","Paper","model","async","sorting","APPROX","gridSize","linkPinning","multiLinks","snapLinks","moveThreshold","magnetThreshold","background","color","cellViewNamespace","interactive","labelMove","linkMove","defaultRouter","name","args","padding","bottom","vertical","horizontal","step","defaultConnector","defaultLink","app","Link","validateConnection","sourceView","sourceMagnet","targetView","targetMagnet","findAttribute","scroller","PaperScroller","autoResizePaper","contentOptions","allowNewOrigin","allowNegativeBottomRight","useModelGeometry","scrollWhileDragging","cursor","baseWidth","baseHeight","appendChild","el","render","center","threshold","stencil","Stencil","width","scaleClones","dropAnimation","paperOptions","NONE","dragStartClone","element","get","Shape","Error","fromStencilShape","layout","columnWidth","columns","rowGap","rowHeight","marginY","marginX","history","CommandManager","toolbar","Toolbar","tools","autoToggle","references","paperScroller","commandManager","tooltip","Tooltip","rootTarget","container","target","direction","TooltipArrowPosition","Auto","animation","keyboard","Keyboard"],"sources":["/Users/guankaiyuan/ReactTs/src/joint-plus/plugins.ts"],"sourcesContent":["/*! JointJS+ v4.0.0 - HTML5 Diagramming Framework - TRIAL VERSION\n   版本声明和许可信息\n*/\n\nimport { dia, shapes, ui } from '@joint/plus'; // 导入 JointJS+ 中的 dia、shapes、ui 模块\n\nimport { enableVirtualRendering } from './features/virtual-rendering'; // 导入启用虚拟渲染的函数\nimport { toolbarConfig } from './config/toolbar.config'; // 导入工具栏配置\nimport { BACKGROUND_COLOR, SECONDARY_BACKGROUND_COLOR, GRID_SIZE, PADDING_L, PADDING_S } from '../theme'; // 导入主题颜色和间距常量\nimport './shapes/index'; // 导入图形形状定义\n\n// 创建并返回一组插件\nexport function createPlugins(\n    scopeElement: Element, // 作用域元素，通常为包含画布的 DOM 元素\n    paperElement: Element, // 画布元素\n    stencilElement: Element, // 模板元素\n    toolbarElement: Element // 工具栏元素\n) {\n    // Graph 图形对象\n    const graph = new dia.Graph({}, { cellNamespace: shapes }); // 创建一个空的图形对象\n\n    // Paper 画布对象\n    const paper = new dia.Paper({\n        model: graph, // 设置画布的模型为图形对象\n        async: true, // 异步渲染\n        sorting: dia.Paper.sorting.APPROX, // 排序方式\n        gridSize: GRID_SIZE, // 网格大小\n        linkPinning: false, // 连接是否固定\n        multiLinks: false, // 是否允许多连接\n        snapLinks: true, // 是否捕捉连接\n        moveThreshold: 5, // 移动阈值\n        magnetThreshold: 'onleave', // 磁力吸附阈值\n        background: { color: BACKGROUND_COLOR }, // 背景颜色\n        cellViewNamespace: shapes, // 元素视图命名空间\n        interactive: {\n            labelMove: true, // 是否允许标签移动\n            linkMove: false // 是否允许连接移动\n        },\n        defaultRouter: { // 默认路由器配置\n            name: 'manhattan', // 路由器名称\n            args: {\n                padding: { bottom: PADDING_L, vertical: PADDING_S, horizontal: PADDING_S }, // 路由器参数\n                step: GRID_SIZE // 路由器参数\n            }\n        },\n        defaultConnector: { name: 'rounded' }, // 默认连接器\n        defaultLink: () => new shapes.app.Link(), // 默认连接对象的创建函数\n        validateConnection: ( // 连接验证函数\n            sourceView: dia.CellView,\n            sourceMagnet: SVGElement,\n            targetView: dia.CellView,\n            targetMagnet: SVGElement\n        ) => {\n            // 验证连接是否合法\n            if (sourceView === targetView) return false; // 源视图与目标视图相同时，不合法\n            if (targetView.findAttribute('port-group', targetMagnet) !== 'in') return false; // 目标视图不是输入端口时，不合法\n            if (sourceView.findAttribute('port-group', sourceMagnet) !== 'out') return false; // 源视图不是输出端口时，不合法\n            return true; // 其他情况下，连接合法\n        }\n    });\n\n    // PaperScroller 插件（滚动和缩放）\n    const scroller = new ui.PaperScroller({\n        paper, // 设置关联的画布对象\n        autoResizePaper: true, // 自动调整画布大小\n        contentOptions: {\n            padding: 100,\n            allowNewOrigin: 'any',\n            allowNegativeBottomRight: true,\n            useModelGeometry: true\n        },\n        scrollWhileDragging: true, // 拖动时滚动\n        cursor: 'grab', // 光标样式\n        baseWidth: 1000, // 基础宽度\n        baseHeight: 1000 // 基础高度\n    });\n    paperElement.appendChild(scroller.el); // 将滚动条元素添加到画布元素中\n    scroller.render().center(); // 渲染并居中显示\n\n    // 渲染用户看到的内容，保持渲染的单元格数量最小\n    enableVirtualRendering(scroller, { threshold: 50 }); // 启用虚拟渲染\n\n    // Stencil 插件（元素调色板）\n    const stencil = new ui.Stencil({\n        paper: scroller, // 设置关联的画布对象\n        width: 240, // 宽度\n        scaleClones: true, // 是否缩放副本\n        dropAnimation: true, // 是否启用拖放动画\n        paperOptions: {\n            sorting: dia.Paper.sorting.NONE, // 排序方式\n            background: {\n                color: SECONDARY_BACKGROUND_COLOR // 背景颜色\n            }\n        },\n        dragStartClone: (element: dia.Element) => { // 拖动开始时的副本创建函数\n            const name = element.get('name'); // 获取元素名称\n            // @ts-ignore\n            const Shape = shapes.app[name]; // 获取元素形状类\n            if (!Shape) throw new Error(`Invalid stencil shape name: ${name}`); // 若未找到对应的形状类，则抛出错误\n            return Shape.fromStencilShape(element); // 返回从模板形状创建的元素\n        },\n        layout: {\n            columnWidth: 110, // 列宽度\n            columns: 1, // 列数\n            rowGap: PADDING_S, // 行间距\n            rowHeight: 'auto', // 行高度\n            marginY: PADDING_S, // Y 方向的边距\n            marginX: -PADDING_L // X 方向的边距\n        }\n    });\n    stencilElement.appendChild(stencil.el); // 将模板元素添加到 DOM 中\n    stencil.render(); // 渲染模板\n\n    // Command Manager 插件（撤销 / 重做）\n    const history = new dia.CommandManager({\n        graph // 设置关联的图形对象\n    });\n\n    // Toolbar 插件\n    const toolbar = new ui.Toolbar({\n        tools: toolbarConfig.tools, // 工具配置\n        autoToggle: true, // 自动切换\n        references: {\n            paperScroller: scroller, // 画布滚动条对象\n            commandManager: history // 命令管理器对象\n        }\n    });\n    toolbarElement.appendChild(toolbar.el); // 将工具栏元素添加到 DOM 中\n    toolbar.render(); // 渲染工具栏\n\n    // Tooltip 插件\n    const tooltip = new ui.Tooltip({\n        rootTarget: scopeElement, // 根目标元素\n        container: scopeElement, // 容器\n        target: '[data-tooltip]', // 目标选择器\n        direction: ui.Tooltip.TooltipArrowPosition.Auto, // 提示框箭头方向\n        padding: PADDING_S, // 内边距\n        animation: true // 动画效果\n    });\n\n    // Keyboard 插件\n    const keyboard = new ui.Keyboard(); // 创建键盘对象\n\n    // 返回所有插件对象\n    return { graph, paper, scroller, stencil, toolbar, tooltip, keyboard, history };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}