{"ast":null,"code":"import V from '../V/index.mjs';\nexport function svg(strings, ...expressions) {\n  const svgParts = [];\n  strings.forEach((part, index) => {\n    svgParts.push(part);\n    if (index in expressions) {\n      svgParts.push(expressions[index]);\n    }\n  });\n  const markup = parseFromSVGString(svgParts.join(''));\n  return markup;\n}\nfunction parseFromSVGString(str) {\n  const parser = new DOMParser();\n  const markupString = `<svg>${str.trim()}</svg>`;\n  const xmldocument = parser.parseFromString(markupString.replace(/@/g, ''), 'application/xml');\n  if (xmldocument.getElementsByTagName('parsererror')[0]) {\n    throw new Error('Invalid SVG markup');\n  }\n  const document = parser.parseFromString(markupString, 'text/html');\n  const svg = document.querySelector('svg');\n  return build(svg);\n}\nfunction buildNode(node) {\n  const markupNode = {};\n  const {\n    tagName,\n    attributes,\n    namespaceURI,\n    style,\n    childNodes\n  } = node;\n  markupNode.namespaceURI = namespaceURI;\n  markupNode.tagName = namespaceURI === V.namespace.xhtml\n  // XHTML documents must use lower case for all HTML element and attribute names.\n  // The tagName property returns upper case value for HTML elements.\n  // e.g. <DIV> vs.<div/>\n  ? tagName.toLowerCase() : tagName;\n  const stylesObject = {};\n  for (var i = style.length; i--;) {\n    var nameString = style[i];\n    stylesObject[nameString] = style.getPropertyValue(nameString);\n  }\n  markupNode.style = stylesObject;\n\n  // selector fallbacks to tagName\n  const selectorAttribute = attributes.getNamedItem('@selector');\n  if (selectorAttribute) {\n    markupNode.selector = selectorAttribute.value;\n    attributes.removeNamedItem('@selector');\n  }\n  const groupSelectorAttribute = attributes.getNamedItem('@group-selector');\n  if (groupSelectorAttribute) {\n    const groupSelectors = groupSelectorAttribute.value.split(',');\n    markupNode.groupSelector = groupSelectors.map(s => s.trim());\n    attributes.removeNamedItem('@group-selector');\n  }\n  const className = attributes.getNamedItem('class');\n  if (className) {\n    markupNode.className = className.value;\n  }\n  const children = [];\n  childNodes.forEach(node => {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        {\n          const trimmedText = node.data.replace(/\\s\\s+/g, ' ');\n          if (trimmedText.trim()) {\n            children.push(trimmedText);\n          }\n          break;\n        }\n      case Node.ELEMENT_NODE:\n        {\n          children.push(buildNode(node));\n          break;\n        }\n      default:\n        break;\n    }\n  });\n  if (children.length) {\n    markupNode.children = children;\n  }\n  const nodeAttrs = {};\n  Array.from(attributes).forEach(nodeAttribute => {\n    const {\n      name,\n      value\n    } = nodeAttribute;\n    nodeAttrs[name] = value;\n  });\n  if (Object.keys(nodeAttrs).length > 0) {\n    markupNode.attributes = nodeAttrs;\n  }\n  return markupNode;\n}\nfunction build(root) {\n  const markup = [];\n  Array.from(root.children).forEach(node => {\n    markup.push(buildNode(node));\n  });\n  return markup;\n}","map":{"version":3,"names":["V","svg","strings","expressions","svgParts","forEach","part","index","push","markup","parseFromSVGString","join","str","parser","DOMParser","markupString","trim","xmldocument","parseFromString","replace","getElementsByTagName","Error","document","querySelector","build","buildNode","node","markupNode","tagName","attributes","namespaceURI","style","childNodes","namespace","xhtml","toLowerCase","stylesObject","i","length","nameString","getPropertyValue","selectorAttribute","getNamedItem","selector","value","removeNamedItem","groupSelectorAttribute","groupSelectors","split","groupSelector","map","s","className","children","nodeType","Node","TEXT_NODE","trimmedText","data","ELEMENT_NODE","nodeAttrs","Array","from","nodeAttribute","name","Object","keys","root"],"sources":["/Users/guankaiyuan/ReactTs/node_modules/.pnpm/@joint+core@4.0.1/node_modules/@joint/core/src/util/svgTagTemplate.mjs"],"sourcesContent":["import V from '../V/index.mjs';\n\nexport function svg(strings, ...expressions) {\n    const svgParts = [];\n    strings.forEach((part, index) => {\n        svgParts.push(part);\n        if (index in expressions) {\n            svgParts.push(expressions[index]);\n        }\n    });\n    const markup = parseFromSVGString(svgParts.join(''));\n    return markup;\n}\n\nfunction parseFromSVGString(str) {\n    const parser = new DOMParser();\n    const markupString = `<svg>${str.trim()}</svg>`;\n    const xmldocument = parser.parseFromString(markupString.replace(/@/g, ''), 'application/xml');\n    if (xmldocument.getElementsByTagName('parsererror')[0]) {\n        throw new Error('Invalid SVG markup');\n    }\n    const document = parser.parseFromString(markupString, 'text/html');\n    const svg = document.querySelector('svg');\n    return build(svg);\n}\n\nfunction buildNode(node) {\n    const markupNode = {};\n    const { tagName, attributes, namespaceURI, style, childNodes } = node;\n\n    markupNode.namespaceURI = namespaceURI;\n    markupNode.tagName = (namespaceURI === V.namespace.xhtml)\n        // XHTML documents must use lower case for all HTML element and attribute names.\n        // The tagName property returns upper case value for HTML elements.\n        // e.g. <DIV> vs.<div/>\n        ? tagName.toLowerCase()\n        : tagName;\n\n    const stylesObject = {};\n    for (var i = style.length; i--;) {\n        var nameString = style[i];\n        stylesObject[nameString] = style.getPropertyValue(nameString);\n    }\n    markupNode.style = stylesObject;\n\n    // selector fallbacks to tagName\n    const selectorAttribute = attributes.getNamedItem('@selector');\n    if (selectorAttribute) {\n        markupNode.selector = selectorAttribute.value;\n        attributes.removeNamedItem('@selector');\n    }\n\n    const groupSelectorAttribute = attributes.getNamedItem('@group-selector');\n    if (groupSelectorAttribute) {\n        const groupSelectors = groupSelectorAttribute.value.split(',');\n        markupNode.groupSelector = groupSelectors.map(s => s.trim());\n\n        attributes.removeNamedItem('@group-selector');\n    }\n\n    const className = attributes.getNamedItem('class');\n    if (className) {\n        markupNode.className = className.value;\n    }\n\n    const children = [];\n    childNodes.forEach(node => {\n        switch (node.nodeType) {\n            case Node.TEXT_NODE: {\n                const trimmedText = node.data.replace(/\\s\\s+/g, ' ');\n                if (trimmedText.trim()) {\n                    children.push(trimmedText);\n                }\n                break;\n            }\n            case Node.ELEMENT_NODE: {\n                children.push(buildNode(node));\n                break;\n            }\n            default:\n                break;\n        }\n    });\n    if (children.length) {\n        markupNode.children = children;\n    }\n\n    const nodeAttrs = {};\n\n    Array.from(attributes).forEach(nodeAttribute => {\n        const { name, value } = nodeAttribute;\n        nodeAttrs[name] = value;\n    });\n\n    if (Object.keys(nodeAttrs).length > 0) {\n        markupNode.attributes = nodeAttrs;\n    }\n\n    return markupNode;\n}\n\nfunction build(root) {\n    const markup = [];\n\n    Array.from(root.children).forEach(node => {\n        markup.push(buildNode(node));\n    });\n\n    return markup;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}