{"ast":null,"code":"import { Path, Polyline } from '../../g/index.mjs';\nimport $ from '../../mvc/Dom/index.mjs';\nimport V from '../../V/index.mjs';\nfunction shapeWrapper(shapeConstructor, opt) {\n  var cacheName = 'joint-shape';\n  var resetOffset = opt && opt.resetOffset;\n  return function (value, refBBox, node) {\n    var cache = $.data.get(node, cacheName);\n    if (!cache || cache.value !== value) {\n      // only recalculate if value has changed\n      var cachedShape = shapeConstructor(value);\n      cache = {\n        value: value,\n        shape: cachedShape,\n        shapeBBox: cachedShape.bbox()\n      };\n      $.data.set(node, cacheName, cache);\n    }\n    var shape = cache.shape.clone();\n    var shapeBBox = cache.shapeBBox.clone();\n    var shapeOrigin = shapeBBox.origin();\n    var refOrigin = refBBox.origin();\n    shapeBBox.x = refOrigin.x;\n    shapeBBox.y = refOrigin.y;\n    var fitScale = refBBox.maxRectScaleToFit(shapeBBox, refOrigin);\n    // `maxRectScaleToFit` can give Infinity if width or height is 0\n    var sx = shapeBBox.width === 0 || refBBox.width === 0 ? 1 : fitScale.sx;\n    var sy = shapeBBox.height === 0 || refBBox.height === 0 ? 1 : fitScale.sy;\n    shape.scale(sx, sy, shapeOrigin);\n    if (resetOffset) {\n      shape.translate(-shapeOrigin.x, -shapeOrigin.y);\n    }\n    return shape;\n  };\n}\n\n// `d` attribute for SVGPaths\nfunction dWrapper(opt) {\n  function pathConstructor(value) {\n    return new Path(V.normalizePathData(value));\n  }\n  var shape = shapeWrapper(pathConstructor, opt);\n  return function (value, refBBox, node) {\n    var path = shape(value, refBBox, node);\n    return {\n      d: path.serialize()\n    };\n  };\n}\n\n// `points` attribute for SVGPolylines and SVGPolygons\nfunction pointsWrapper(opt) {\n  var shape = shapeWrapper(Polyline, opt);\n  return function (value, refBBox, node) {\n    var polyline = shape(value, refBBox, node);\n    return {\n      points: polyline.serialize()\n    };\n  };\n}\nconst shapeAttributesNS = {\n  'ref-d-reset-offset': {\n    set: dWrapper({\n      resetOffset: true\n    })\n  },\n  'ref-d-keep-offset': {\n    set: dWrapper({\n      resetOffset: false\n    })\n  },\n  'ref-points-reset-offset': {\n    set: pointsWrapper({\n      resetOffset: true\n    })\n  },\n  'ref-points-keep-offset': {\n    set: pointsWrapper({\n      resetOffset: false\n    })\n  }\n};\n\n// Aliases\nshapeAttributesNS['ref-d'] = shapeAttributesNS['ref-d-reset-offset'];\nshapeAttributesNS['ref-points'] = shapeAttributesNS['ref-points-reset-offset'];\nexport default shapeAttributesNS;","map":{"version":3,"names":["Path","Polyline","$","V","shapeWrapper","shapeConstructor","opt","cacheName","resetOffset","value","refBBox","node","cache","data","get","cachedShape","shape","shapeBBox","bbox","set","clone","shapeOrigin","origin","refOrigin","x","y","fitScale","maxRectScaleToFit","sx","width","sy","height","scale","translate","dWrapper","pathConstructor","normalizePathData","path","d","serialize","pointsWrapper","polyline","points","shapeAttributesNS"],"sources":["/Users/guankaiyuan/ReactTs/node_modules/.pnpm/@joint+core@4.0.1/node_modules/@joint/core/src/dia/attributes/shape.mjs"],"sourcesContent":["import { Path, Polyline } from '../../g/index.mjs';\nimport $ from '../../mvc/Dom/index.mjs';\nimport V from '../../V/index.mjs';\n\nfunction shapeWrapper(shapeConstructor, opt) {\n    var cacheName = 'joint-shape';\n    var resetOffset = opt && opt.resetOffset;\n    return function(value, refBBox, node) {\n        var cache = $.data.get(node, cacheName);\n        if (!cache || cache.value !== value) {\n            // only recalculate if value has changed\n            var cachedShape = shapeConstructor(value);\n            cache = {\n                value: value,\n                shape: cachedShape,\n                shapeBBox: cachedShape.bbox()\n            };\n            $.data.set(node, cacheName, cache);\n        }\n\n        var shape = cache.shape.clone();\n        var shapeBBox = cache.shapeBBox.clone();\n        var shapeOrigin = shapeBBox.origin();\n        var refOrigin = refBBox.origin();\n\n        shapeBBox.x = refOrigin.x;\n        shapeBBox.y = refOrigin.y;\n\n        var fitScale = refBBox.maxRectScaleToFit(shapeBBox, refOrigin);\n        // `maxRectScaleToFit` can give Infinity if width or height is 0\n        var sx = (shapeBBox.width === 0 || refBBox.width === 0) ? 1 : fitScale.sx;\n        var sy = (shapeBBox.height === 0 || refBBox.height === 0) ? 1 : fitScale.sy;\n\n        shape.scale(sx, sy, shapeOrigin);\n        if (resetOffset) {\n            shape.translate(-shapeOrigin.x, -shapeOrigin.y);\n        }\n\n        return shape;\n    };\n}\n\n// `d` attribute for SVGPaths\nfunction dWrapper(opt) {\n    function pathConstructor(value) {\n        return new Path(V.normalizePathData(value));\n    }\n\n    var shape = shapeWrapper(pathConstructor, opt);\n    return function(value, refBBox, node) {\n        var path = shape(value, refBBox, node);\n        return {\n            d: path.serialize()\n        };\n    };\n}\n\n// `points` attribute for SVGPolylines and SVGPolygons\nfunction pointsWrapper(opt) {\n    var shape = shapeWrapper(Polyline, opt);\n    return function(value, refBBox, node) {\n        var polyline = shape(value, refBBox, node);\n        return {\n            points: polyline.serialize()\n        };\n    };\n}\n\nconst shapeAttributesNS = {\n\n    'ref-d-reset-offset': {\n        set: dWrapper({ resetOffset: true })\n    },\n\n    'ref-d-keep-offset': {\n        set: dWrapper({ resetOffset: false })\n    },\n\n    'ref-points-reset-offset': {\n        set: pointsWrapper({ resetOffset: true })\n    },\n\n    'ref-points-keep-offset': {\n        set: pointsWrapper({ resetOffset: false })\n    },\n};\n\n// Aliases\nshapeAttributesNS['ref-d'] = shapeAttributesNS['ref-d-reset-offset'];\nshapeAttributesNS['ref-points'] = shapeAttributesNS['ref-points-reset-offset'];\n\nexport default shapeAttributesNS;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}