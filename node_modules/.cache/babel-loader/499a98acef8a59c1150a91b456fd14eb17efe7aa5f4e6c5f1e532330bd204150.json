{"ast":null,"code":"import { Cell } from './Cell.mjs';\nimport { clone, isPlainObject, isFunction, isString, isNumber } from '../util/index.mjs';\nimport { Point, Polyline } from '../g/index.mjs';\n\n// Link base model.\n// --------------------------\n\nexport const Link = Cell.extend({\n  // may be overwritten by user to change default label (its markup, size, attrs, position)\n  defaultLabel: undefined,\n  // deprecated\n  // may be overwritten by user to change default label markup\n  // lower priority than defaultLabel.markup\n  labelMarkup: undefined,\n  // private\n  _builtins: {\n    defaultLabel: {\n      // builtin default markup:\n      // used if neither defaultLabel.markup\n      // nor label.markup is set\n      markup: [{\n        tagName: 'rect',\n        selector: 'rect' // faster than tagName CSS selector\n      }, {\n        tagName: 'text',\n        selector: 'text' // faster than tagName CSS selector\n      }],\n      // builtin default attributes:\n      // applied only if builtin default markup is used\n      attrs: {\n        text: {\n          fill: '#000000',\n          fontSize: 14,\n          textAnchor: 'middle',\n          textVerticalAnchor: 'middle',\n          pointerEvents: 'none'\n        },\n        rect: {\n          ref: 'text',\n          fill: '#ffffff',\n          rx: 3,\n          ry: 3,\n          x: 'calc(x)',\n          y: 'calc(y)',\n          width: 'calc(w)',\n          height: 'calc(h)'\n        }\n      },\n      // builtin default position:\n      // used if neither defaultLabel.position\n      // nor label.position is set\n      position: {\n        distance: 0.5\n      }\n    }\n  },\n  defaults: {\n    source: {},\n    target: {}\n  },\n  isLink: function () {\n    return true;\n  },\n  disconnect: function (opt) {\n    return this.set({\n      source: {\n        x: 0,\n        y: 0\n      },\n      target: {\n        x: 0,\n        y: 0\n      }\n    }, opt);\n  },\n  source: function (source, args, opt) {\n    // getter\n    if (source === undefined) {\n      return clone(this.get('source'));\n    }\n\n    // setter\n    var setSource;\n    var setOpt;\n\n    // `source` is a cell\n    // take only its `id` and combine with `args`\n    var isCellProvided = source instanceof Cell;\n    if (isCellProvided) {\n      // three arguments\n      setSource = clone(args) || {};\n      setSource.id = source.id;\n      setOpt = opt;\n      return this.set('source', setSource, setOpt);\n    }\n\n    // `source` is a point-like object\n    // for example, a g.Point\n    // take only its `x` and `y` and combine with `args`\n    var isPointProvided = !isPlainObject(source);\n    if (isPointProvided) {\n      // three arguments\n      setSource = clone(args) || {};\n      setSource.x = source.x;\n      setSource.y = source.y;\n      setOpt = opt;\n      return this.set('source', setSource, setOpt);\n    }\n\n    // `source` is an object\n    // no checking\n    // two arguments\n    setSource = source;\n    setOpt = args;\n    return this.set('source', setSource, setOpt);\n  },\n  target: function (target, args, opt) {\n    // getter\n    if (target === undefined) {\n      return clone(this.get('target'));\n    }\n\n    // setter\n    var setTarget;\n    var setOpt;\n\n    // `target` is a cell\n    // take only its `id` argument and combine with `args`\n    var isCellProvided = target instanceof Cell;\n    if (isCellProvided) {\n      // three arguments\n      setTarget = clone(args) || {};\n      setTarget.id = target.id;\n      setOpt = opt;\n      return this.set('target', setTarget, setOpt);\n    }\n\n    // `target` is a point-like object\n    // for example, a g.Point\n    // take only its `x` and `y` and combine with `args`\n    var isPointProvided = !isPlainObject(target);\n    if (isPointProvided) {\n      // three arguments\n      setTarget = clone(args) || {};\n      setTarget.x = target.x;\n      setTarget.y = target.y;\n      setOpt = opt;\n      return this.set('target', setTarget, setOpt);\n    }\n\n    // `target` is an object\n    // no checking\n    // two arguments\n    setTarget = target;\n    setOpt = args;\n    return this.set('target', setTarget, setOpt);\n  },\n  router: function (name, args, opt) {\n    // getter\n    if (name === undefined) {\n      var router = this.get('router');\n      if (!router) {\n        return null;\n      }\n      if (typeof router === 'object') return clone(router);\n      return router; // e.g. a function\n    }\n\n    // setter\n    var isRouterProvided = typeof name === 'object' || typeof name === 'function';\n    var localRouter = isRouterProvided ? name : {\n      name: name,\n      args: args\n    };\n    var localOpt = isRouterProvided ? args : opt;\n    return this.set('router', localRouter, localOpt);\n  },\n  connector: function (name, args, opt) {\n    // getter\n    if (name === undefined) {\n      var connector = this.get('connector');\n      if (!connector) {\n        return null;\n      }\n      if (typeof connector === 'object') return clone(connector);\n      return connector; // e.g. a function\n    }\n\n    // setter\n    var isConnectorProvided = typeof name === 'object' || typeof name === 'function';\n    var localConnector = isConnectorProvided ? name : {\n      name: name,\n      args: args\n    };\n    var localOpt = isConnectorProvided ? args : opt;\n    return this.set('connector', localConnector, localOpt);\n  },\n  // Labels API\n\n  // A convenient way to set labels. Currently set values will be mixined with `value` if used as a setter.\n  label: function (idx, label, opt) {\n    var labels = this.labels();\n    idx = isFinite(idx) && idx !== null ? idx | 0 : 0;\n    if (idx < 0) idx = labels.length + idx;\n\n    // getter\n    if (arguments.length <= 1) return this.prop(['labels', idx]);\n    // setter\n    return this.prop(['labels', idx], label, opt);\n  },\n  labels: function (labels, opt) {\n    // getter\n    if (arguments.length === 0) {\n      labels = this.get('labels');\n      if (!Array.isArray(labels)) return [];\n      return labels.slice();\n    }\n    // setter\n    if (!Array.isArray(labels)) labels = [];\n    return this.set('labels', labels, opt);\n  },\n  hasLabels: function () {\n    const {\n      labels\n    } = this.attributes;\n    return Array.isArray(labels) && labels.length > 0;\n  },\n  insertLabel: function (idx, label, opt) {\n    if (!label) throw new Error('dia.Link: no label provided');\n    var labels = this.labels();\n    var n = labels.length;\n    idx = isFinite(idx) && idx !== null ? idx | 0 : n;\n    if (idx < 0) idx = n + idx + 1;\n    labels.splice(idx, 0, label);\n    return this.labels(labels, opt);\n  },\n  // convenience function\n  // add label to end of labels array\n  appendLabel: function (label, opt) {\n    return this.insertLabel(-1, label, opt);\n  },\n  removeLabel: function (idx, opt) {\n    var labels = this.labels();\n    idx = isFinite(idx) && idx !== null ? idx | 0 : -1;\n    labels.splice(idx, 1);\n    return this.labels(labels, opt);\n  },\n  // Vertices API\n\n  vertex: function (idx, vertex, opt) {\n    var vertices = this.vertices();\n    idx = isFinite(idx) && idx !== null ? idx | 0 : 0;\n    if (idx < 0) idx = vertices.length + idx;\n\n    // getter\n    if (arguments.length <= 1) return this.prop(['vertices', idx]);\n\n    // setter\n    var setVertex = this._normalizeVertex(vertex);\n    return this.prop(['vertices', idx], setVertex, opt);\n  },\n  vertices: function (vertices, opt) {\n    // getter\n    if (arguments.length === 0) {\n      vertices = this.get('vertices');\n      if (!Array.isArray(vertices)) return [];\n      return vertices.slice();\n    }\n\n    // setter\n    if (!Array.isArray(vertices)) vertices = [];\n    var setVertices = [];\n    for (var i = 0; i < vertices.length; i++) {\n      var vertex = vertices[i];\n      var setVertex = this._normalizeVertex(vertex);\n      setVertices.push(setVertex);\n    }\n    return this.set('vertices', setVertices, opt);\n  },\n  insertVertex: function (idx, vertex, opt) {\n    if (!vertex) throw new Error('dia.Link: no vertex provided');\n    var vertices = this.vertices();\n    var n = vertices.length;\n    idx = isFinite(idx) && idx !== null ? idx | 0 : n;\n    if (idx < 0) idx = n + idx + 1;\n    var setVertex = this._normalizeVertex(vertex);\n    vertices.splice(idx, 0, setVertex);\n    return this.vertices(vertices, opt);\n  },\n  removeVertex: function (idx, opt) {\n    var vertices = this.vertices();\n    idx = isFinite(idx) && idx !== null ? idx | 0 : -1;\n    vertices.splice(idx, 1);\n    return this.vertices(vertices, opt);\n  },\n  _normalizeVertex: function (vertex) {\n    // is vertex a point-like object?\n    // for example, a g.Point\n    var isPointProvided = !isPlainObject(vertex);\n    if (isPointProvided) return {\n      x: vertex.x,\n      y: vertex.y\n    };\n\n    // else: return vertex unchanged\n    return vertex;\n  },\n  // Transformations\n\n  translate: function (tx, ty, opt) {\n    // enrich the option object\n    opt = opt || {};\n    opt.translateBy = opt.translateBy || this.id;\n    opt.tx = tx;\n    opt.ty = ty;\n    return this.applyToPoints(function (p) {\n      return {\n        x: (p.x || 0) + tx,\n        y: (p.y || 0) + ty\n      };\n    }, opt);\n  },\n  scale: function (sx, sy, origin, opt) {\n    return this.applyToPoints(function (p) {\n      return Point(p).scale(sx, sy, origin).toJSON();\n    }, opt);\n  },\n  applyToPoints: function (fn, opt) {\n    if (!isFunction(fn)) {\n      throw new TypeError('dia.Link: applyToPoints expects its first parameter to be a function.');\n    }\n    var attrs = {};\n    var {\n      source,\n      target\n    } = this.attributes;\n    if (!source.id) {\n      attrs.source = fn(source);\n    }\n    if (!target.id) {\n      attrs.target = fn(target);\n    }\n    var vertices = this.vertices();\n    if (vertices.length > 0) {\n      attrs.vertices = vertices.map(fn);\n    }\n    return this.set(attrs, opt);\n  },\n  getSourcePoint: function () {\n    var sourceCell = this.getSourceCell();\n    if (!sourceCell) return new Point(this.source());\n    return sourceCell.getPointFromConnectedLink(this, 'source');\n  },\n  getTargetPoint: function () {\n    var targetCell = this.getTargetCell();\n    if (!targetCell) return new Point(this.target());\n    return targetCell.getPointFromConnectedLink(this, 'target');\n  },\n  getPointFromConnectedLink: function /* link, endType */\n  () {\n    return this.getPolyline().pointAt(0.5);\n  },\n  getPolyline: function () {\n    const points = [this.getSourcePoint(), ...this.vertices().map(Point), this.getTargetPoint()];\n    return new Polyline(points);\n  },\n  getBBox: function () {\n    return this.getPolyline().bbox();\n  },\n  reparent: function (opt) {\n    var newParent;\n    if (this.graph) {\n      var source = this.getSourceElement();\n      var target = this.getTargetElement();\n      var prevParent = this.getParentCell();\n      if (source && target) {\n        if (source === target || source.isEmbeddedIn(target)) {\n          newParent = target;\n        } else if (target.isEmbeddedIn(source)) {\n          newParent = source;\n        } else {\n          newParent = this.graph.getCommonAncestor(source, target);\n        }\n      }\n      if (prevParent && (!newParent || newParent.id !== prevParent.id)) {\n        // Unembed the link if source and target has no common ancestor\n        // or common ancestor changed\n        prevParent.unembed(this, opt);\n      }\n      if (newParent) {\n        newParent.embed(this, opt);\n      }\n    }\n    return newParent;\n  },\n  hasLoop: function (opt) {\n    opt = opt || {};\n    var {\n      source,\n      target\n    } = this.attributes;\n    var sourceId = source.id;\n    var targetId = target.id;\n    if (!sourceId || !targetId) {\n      // Link \"pinned\" to the paper does not have a loop.\n      return false;\n    }\n    var loop = sourceId === targetId;\n\n    // Note that there in the deep mode a link can have a loop,\n    // even if it connects only a parent and its embed.\n    // A loop \"target equals source\" is valid in both shallow and deep mode.\n    if (!loop && opt.deep && this.graph) {\n      var sourceElement = this.getSourceCell();\n      var targetElement = this.getTargetCell();\n      loop = sourceElement.isEmbeddedIn(targetElement) || targetElement.isEmbeddedIn(sourceElement);\n    }\n    return loop;\n  },\n  // unlike source(), this method returns null if source is a point\n  getSourceCell: function () {\n    const {\n      graph,\n      attributes\n    } = this;\n    var source = attributes.source;\n    return source && source.id && graph && graph.getCell(source.id) || null;\n  },\n  getSourceElement: function () {\n    var cell = this;\n    var visited = {};\n    do {\n      if (visited[cell.id]) return null;\n      visited[cell.id] = true;\n      cell = cell.getSourceCell();\n    } while (cell && cell.isLink());\n    return cell;\n  },\n  // unlike target(), this method returns null if target is a point\n  getTargetCell: function () {\n    const {\n      graph,\n      attributes\n    } = this;\n    var target = attributes.target;\n    return target && target.id && graph && graph.getCell(target.id) || null;\n  },\n  getTargetElement: function () {\n    var cell = this;\n    var visited = {};\n    do {\n      if (visited[cell.id]) return null;\n      visited[cell.id] = true;\n      cell = cell.getTargetCell();\n    } while (cell && cell.isLink());\n    return cell;\n  },\n  // Returns the common ancestor for the source element,\n  // target element and the link itself.\n  getRelationshipAncestor: function () {\n    var connectionAncestor;\n    if (this.graph) {\n      var cells = [this, this.getSourceElement(),\n      // null if source is a point\n      this.getTargetElement() // null if target is a point\n      ].filter(function (item) {\n        return !!item;\n      });\n      connectionAncestor = this.graph.getCommonAncestor.apply(this.graph, cells);\n    }\n    return connectionAncestor || null;\n  },\n  // Is source, target and the link itself embedded in a given cell?\n  isRelationshipEmbeddedIn: function (cell) {\n    var cellId = isString(cell) || isNumber(cell) ? cell : cell.id;\n    var ancestor = this.getRelationshipAncestor();\n    return !!ancestor && (ancestor.id === cellId || ancestor.isEmbeddedIn(cellId));\n  },\n  // Get resolved default label.\n  _getDefaultLabel: function () {\n    var defaultLabel = this.get('defaultLabel') || this.defaultLabel || {};\n    var label = {};\n    label.markup = defaultLabel.markup || this.get('labelMarkup') || this.labelMarkup;\n    label.position = defaultLabel.position;\n    label.attrs = defaultLabel.attrs;\n    label.size = defaultLabel.size;\n    return label;\n  }\n}, {\n  endsEqual: function (a, b) {\n    var portsEqual = a.port === b.port || !a.port && !b.port;\n    return a.id === b.id && portsEqual;\n  }\n});","map":{"version":3,"names":["Cell","clone","isPlainObject","isFunction","isString","isNumber","Point","Polyline","Link","extend","defaultLabel","undefined","labelMarkup","_builtins","markup","tagName","selector","attrs","text","fill","fontSize","textAnchor","textVerticalAnchor","pointerEvents","rect","ref","rx","ry","x","y","width","height","position","distance","defaults","source","target","isLink","disconnect","opt","set","args","get","setSource","setOpt","isCellProvided","id","isPointProvided","setTarget","router","name","isRouterProvided","localRouter","localOpt","connector","isConnectorProvided","localConnector","label","idx","labels","isFinite","length","arguments","prop","Array","isArray","slice","hasLabels","attributes","insertLabel","Error","n","splice","appendLabel","removeLabel","vertex","vertices","setVertex","_normalizeVertex","setVertices","i","push","insertVertex","removeVertex","translate","tx","ty","translateBy","applyToPoints","p","scale","sx","sy","origin","toJSON","fn","TypeError","map","getSourcePoint","sourceCell","getSourceCell","getPointFromConnectedLink","getTargetPoint","targetCell","getTargetCell","getPolyline","pointAt","points","getBBox","bbox","reparent","newParent","graph","getSourceElement","getTargetElement","prevParent","getParentCell","isEmbeddedIn","getCommonAncestor","unembed","embed","hasLoop","sourceId","targetId","loop","deep","sourceElement","targetElement","getCell","cell","visited","getRelationshipAncestor","connectionAncestor","cells","filter","item","apply","isRelationshipEmbeddedIn","cellId","ancestor","_getDefaultLabel","size","endsEqual","a","b","portsEqual","port"],"sources":["/Users/guankaiyuan/ReactTs/node_modules/.pnpm/@joint+core@4.0.1/node_modules/@joint/core/src/dia/Link.mjs"],"sourcesContent":["import { Cell } from './Cell.mjs';\nimport { clone, isPlainObject, isFunction, isString, isNumber } from '../util/index.mjs';\nimport { Point, Polyline } from '../g/index.mjs';\n\n// Link base model.\n// --------------------------\n\nexport const Link = Cell.extend({\n\n    // may be overwritten by user to change default label (its markup, size, attrs, position)\n    defaultLabel: undefined,\n\n    // deprecated\n    // may be overwritten by user to change default label markup\n    // lower priority than defaultLabel.markup\n    labelMarkup: undefined,\n\n    // private\n    _builtins: {\n        defaultLabel: {\n            // builtin default markup:\n            // used if neither defaultLabel.markup\n            // nor label.markup is set\n            markup: [\n                {\n                    tagName: 'rect',\n                    selector: 'rect' // faster than tagName CSS selector\n                }, {\n                    tagName: 'text',\n                    selector: 'text' // faster than tagName CSS selector\n                }\n            ],\n            // builtin default attributes:\n            // applied only if builtin default markup is used\n            attrs: {\n                text: {\n                    fill: '#000000',\n                    fontSize: 14,\n                    textAnchor: 'middle',\n                    textVerticalAnchor: 'middle',\n                    pointerEvents: 'none'\n                },\n                rect: {\n                    ref: 'text',\n                    fill: '#ffffff',\n                    rx: 3,\n                    ry: 3,\n                    x: 'calc(x)',\n                    y: 'calc(y)',\n                    width: 'calc(w)',\n                    height: 'calc(h)'\n                }\n            },\n            // builtin default position:\n            // used if neither defaultLabel.position\n            // nor label.position is set\n            position: {\n                distance: 0.5\n            }\n        }\n    },\n\n    defaults: {\n        source: {},\n        target: {}\n    },\n\n    isLink: function() {\n\n        return true;\n    },\n\n    disconnect: function(opt) {\n\n        return this.set({\n            source: { x: 0, y: 0 },\n            target: { x: 0, y: 0 }\n        }, opt);\n    },\n\n    source: function(source, args, opt) {\n\n        // getter\n        if (source === undefined) {\n            return clone(this.get('source'));\n        }\n\n        // setter\n        var setSource;\n        var setOpt;\n\n        // `source` is a cell\n        // take only its `id` and combine with `args`\n        var isCellProvided = source instanceof Cell;\n        if (isCellProvided) { // three arguments\n            setSource = clone(args) || {};\n            setSource.id = source.id;\n            setOpt = opt;\n            return this.set('source', setSource, setOpt);\n        }\n\n        // `source` is a point-like object\n        // for example, a g.Point\n        // take only its `x` and `y` and combine with `args`\n        var isPointProvided = !isPlainObject(source);\n        if (isPointProvided) { // three arguments\n            setSource = clone(args) || {};\n            setSource.x = source.x;\n            setSource.y = source.y;\n            setOpt = opt;\n            return this.set('source', setSource, setOpt);\n        }\n\n        // `source` is an object\n        // no checking\n        // two arguments\n        setSource = source;\n        setOpt = args;\n        return this.set('source', setSource, setOpt);\n    },\n\n    target: function(target, args, opt) {\n\n        // getter\n        if (target === undefined) {\n            return clone(this.get('target'));\n        }\n\n        // setter\n        var setTarget;\n        var setOpt;\n\n        // `target` is a cell\n        // take only its `id` argument and combine with `args`\n        var isCellProvided = target instanceof Cell;\n        if (isCellProvided) { // three arguments\n            setTarget = clone(args) || {};\n            setTarget.id = target.id;\n            setOpt = opt;\n            return this.set('target', setTarget, setOpt);\n        }\n\n        // `target` is a point-like object\n        // for example, a g.Point\n        // take only its `x` and `y` and combine with `args`\n        var isPointProvided = !isPlainObject(target);\n        if (isPointProvided) { // three arguments\n            setTarget = clone(args) || {};\n            setTarget.x = target.x;\n            setTarget.y = target.y;\n            setOpt = opt;\n            return this.set('target', setTarget, setOpt);\n        }\n\n        // `target` is an object\n        // no checking\n        // two arguments\n        setTarget = target;\n        setOpt = args;\n        return this.set('target', setTarget, setOpt);\n    },\n\n    router: function(name, args, opt) {\n\n        // getter\n        if (name === undefined) {\n            var router = this.get('router');\n            if (!router) {\n                return null;\n            }\n            if (typeof router === 'object') return clone(router);\n            return router; // e.g. a function\n        }\n\n        // setter\n        var isRouterProvided = ((typeof name === 'object') || (typeof name === 'function'));\n        var localRouter = isRouterProvided ? name : { name: name, args: args };\n        var localOpt = isRouterProvided ? args : opt;\n\n        return this.set('router', localRouter, localOpt);\n    },\n\n    connector: function(name, args, opt) {\n\n        // getter\n        if (name === undefined) {\n            var connector = this.get('connector');\n            if (!connector) {\n                return null;\n            }\n            if (typeof connector === 'object') return clone(connector);\n            return connector; // e.g. a function\n        }\n\n        // setter\n        var isConnectorProvided = ((typeof name === 'object' || typeof name === 'function'));\n        var localConnector = isConnectorProvided ? name : { name: name, args: args };\n        var localOpt = isConnectorProvided ? args : opt;\n\n        return this.set('connector', localConnector, localOpt);\n    },\n\n    // Labels API\n\n    // A convenient way to set labels. Currently set values will be mixined with `value` if used as a setter.\n    label: function(idx, label, opt) {\n\n        var labels = this.labels();\n\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : 0;\n        if (idx < 0) idx = labels.length + idx;\n\n        // getter\n        if (arguments.length <= 1) return this.prop(['labels', idx]);\n        // setter\n        return this.prop(['labels', idx], label, opt);\n    },\n\n    labels: function(labels, opt) {\n\n        // getter\n        if (arguments.length === 0) {\n            labels = this.get('labels');\n            if (!Array.isArray(labels)) return [];\n            return labels.slice();\n        }\n        // setter\n        if (!Array.isArray(labels)) labels = [];\n        return this.set('labels', labels, opt);\n    },\n\n    hasLabels: function() {\n        const { labels } = this.attributes;\n        return Array.isArray(labels) && labels.length > 0;\n    },\n\n    insertLabel: function(idx, label, opt) {\n\n        if (!label) throw new Error('dia.Link: no label provided');\n\n        var labels = this.labels();\n        var n = labels.length;\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : n;\n        if (idx < 0) idx = n + idx + 1;\n\n        labels.splice(idx, 0, label);\n        return this.labels(labels, opt);\n    },\n\n    // convenience function\n    // add label to end of labels array\n    appendLabel: function(label, opt) {\n\n        return this.insertLabel(-1, label, opt);\n    },\n\n    removeLabel: function(idx, opt) {\n\n        var labels = this.labels();\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : -1;\n\n        labels.splice(idx, 1);\n        return this.labels(labels, opt);\n    },\n\n    // Vertices API\n\n    vertex: function(idx, vertex, opt) {\n\n        var vertices = this.vertices();\n\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : 0;\n        if (idx < 0) idx = vertices.length + idx;\n\n        // getter\n        if (arguments.length <= 1) return this.prop(['vertices', idx]);\n\n        // setter\n        var setVertex = this._normalizeVertex(vertex);\n        return this.prop(['vertices', idx], setVertex, opt);\n    },\n\n    vertices: function(vertices, opt) {\n\n        // getter\n        if (arguments.length === 0) {\n            vertices = this.get('vertices');\n            if (!Array.isArray(vertices)) return [];\n            return vertices.slice();\n        }\n\n        // setter\n        if (!Array.isArray(vertices)) vertices = [];\n        var setVertices = [];\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            var setVertex = this._normalizeVertex(vertex);\n            setVertices.push(setVertex);\n        }\n        return this.set('vertices', setVertices, opt);\n    },\n\n    insertVertex: function(idx, vertex, opt) {\n\n        if (!vertex) throw new Error('dia.Link: no vertex provided');\n\n        var vertices = this.vertices();\n        var n = vertices.length;\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : n;\n        if (idx < 0) idx = n + idx + 1;\n\n        var setVertex = this._normalizeVertex(vertex);\n        vertices.splice(idx, 0, setVertex);\n        return this.vertices(vertices, opt);\n    },\n\n    removeVertex: function(idx, opt) {\n\n        var vertices = this.vertices();\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : -1;\n\n        vertices.splice(idx, 1);\n        return this.vertices(vertices, opt);\n    },\n\n    _normalizeVertex: function(vertex) {\n\n        // is vertex a point-like object?\n        // for example, a g.Point\n        var isPointProvided = !isPlainObject(vertex);\n        if (isPointProvided) return { x: vertex.x, y: vertex.y };\n\n        // else: return vertex unchanged\n        return vertex;\n    },\n\n    // Transformations\n\n    translate: function(tx, ty, opt) {\n\n        // enrich the option object\n        opt = opt || {};\n        opt.translateBy = opt.translateBy || this.id;\n        opt.tx = tx;\n        opt.ty = ty;\n\n        return this.applyToPoints(function(p) {\n            return { x: (p.x || 0) + tx, y: (p.y || 0) + ty };\n        }, opt);\n    },\n\n    scale: function(sx, sy, origin, opt) {\n\n        return this.applyToPoints(function(p) {\n            return Point(p).scale(sx, sy, origin).toJSON();\n        }, opt);\n    },\n\n    applyToPoints: function(fn, opt) {\n\n        if (!isFunction(fn)) {\n            throw new TypeError('dia.Link: applyToPoints expects its first parameter to be a function.');\n        }\n\n        var attrs = {};\n\n        var { source, target } = this.attributes;\n        if (!source.id) {\n            attrs.source = fn(source);\n        }\n        if (!target.id) {\n            attrs.target = fn(target);\n        }\n\n        var vertices = this.vertices();\n        if (vertices.length > 0) {\n            attrs.vertices = vertices.map(fn);\n        }\n\n        return this.set(attrs, opt);\n    },\n\n    getSourcePoint: function() {\n        var sourceCell = this.getSourceCell();\n        if (!sourceCell) return new Point(this.source());\n        return sourceCell.getPointFromConnectedLink(this, 'source');\n    },\n\n    getTargetPoint: function() {\n        var targetCell = this.getTargetCell();\n        if (!targetCell) return new Point(this.target());\n        return targetCell.getPointFromConnectedLink(this, 'target');\n    },\n\n    getPointFromConnectedLink: function(/* link, endType */) {\n        return this.getPolyline().pointAt(0.5);\n    },\n\n    getPolyline: function() {\n        const points = [\n            this.getSourcePoint(),\n            ...this.vertices().map(Point),\n            this.getTargetPoint()\n        ];\n        return new Polyline(points);\n    },\n\n    getBBox: function() {\n        return this.getPolyline().bbox();\n    },\n\n    reparent: function(opt) {\n\n        var newParent;\n\n        if (this.graph) {\n\n            var source = this.getSourceElement();\n            var target = this.getTargetElement();\n            var prevParent = this.getParentCell();\n\n            if (source && target) {\n                if (source === target || source.isEmbeddedIn(target)) {\n                    newParent = target;\n                } else if (target.isEmbeddedIn(source)) {\n                    newParent = source;\n                } else {\n                    newParent = this.graph.getCommonAncestor(source, target);\n                }\n            }\n\n            if (prevParent && (!newParent || newParent.id !== prevParent.id)) {\n                // Unembed the link if source and target has no common ancestor\n                // or common ancestor changed\n                prevParent.unembed(this, opt);\n            }\n\n            if (newParent) {\n                newParent.embed(this, opt);\n            }\n        }\n\n        return newParent;\n    },\n\n    hasLoop: function(opt) {\n\n        opt = opt || {};\n\n        var { source, target } = this.attributes;\n        var sourceId = source.id;\n        var targetId = target.id;\n\n        if (!sourceId || !targetId) {\n            // Link \"pinned\" to the paper does not have a loop.\n            return false;\n        }\n\n        var loop = sourceId === targetId;\n\n        // Note that there in the deep mode a link can have a loop,\n        // even if it connects only a parent and its embed.\n        // A loop \"target equals source\" is valid in both shallow and deep mode.\n        if (!loop && opt.deep && this.graph) {\n\n            var sourceElement = this.getSourceCell();\n            var targetElement = this.getTargetCell();\n\n            loop = sourceElement.isEmbeddedIn(targetElement) || targetElement.isEmbeddedIn(sourceElement);\n        }\n\n        return loop;\n    },\n\n    // unlike source(), this method returns null if source is a point\n    getSourceCell: function() {\n\n        const { graph, attributes } = this;\n        var source = attributes.source;\n        return (source && source.id && graph && graph.getCell(source.id)) || null;\n    },\n\n    getSourceElement: function() {\n        var cell = this;\n        var visited = {};\n        do {\n            if (visited[cell.id]) return null;\n            visited[cell.id] = true;\n            cell = cell.getSourceCell();\n        } while (cell && cell.isLink());\n        return cell;\n    },\n\n    // unlike target(), this method returns null if target is a point\n    getTargetCell: function() {\n\n        const { graph, attributes } = this;\n        var target = attributes.target;\n        return (target && target.id && graph && graph.getCell(target.id)) || null;\n    },\n\n    getTargetElement: function() {\n        var cell = this;\n        var visited = {};\n        do {\n            if (visited[cell.id]) return null;\n            visited[cell.id] = true;\n            cell = cell.getTargetCell();\n        } while (cell && cell.isLink());\n        return cell;\n    },\n\n    // Returns the common ancestor for the source element,\n    // target element and the link itself.\n    getRelationshipAncestor: function() {\n\n        var connectionAncestor;\n\n        if (this.graph) {\n\n            var cells = [\n                this,\n                this.getSourceElement(), // null if source is a point\n                this.getTargetElement() // null if target is a point\n            ].filter(function(item) {\n                return !!item;\n            });\n\n            connectionAncestor = this.graph.getCommonAncestor.apply(this.graph, cells);\n        }\n\n        return connectionAncestor || null;\n    },\n\n    // Is source, target and the link itself embedded in a given cell?\n    isRelationshipEmbeddedIn: function(cell) {\n\n        var cellId = (isString(cell) || isNumber(cell)) ? cell : cell.id;\n        var ancestor = this.getRelationshipAncestor();\n\n        return !!ancestor && (ancestor.id === cellId || ancestor.isEmbeddedIn(cellId));\n    },\n\n    // Get resolved default label.\n    _getDefaultLabel: function() {\n\n        var defaultLabel = this.get('defaultLabel') || this.defaultLabel || {};\n\n        var label = {};\n        label.markup = defaultLabel.markup || this.get('labelMarkup') || this.labelMarkup;\n        label.position = defaultLabel.position;\n        label.attrs = defaultLabel.attrs;\n        label.size = defaultLabel.size;\n\n        return label;\n    }\n}, {\n\n    endsEqual: function(a, b) {\n\n        var portsEqual = a.port === b.port || !a.port && !b.port;\n        return a.id === b.id && portsEqual;\n    }\n});\n\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,YAAY;AACjC,SAASC,KAAK,EAAEC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,mBAAmB;AACxF,SAASC,KAAK,EAAEC,QAAQ,QAAQ,gBAAgB;;AAEhD;AACA;;AAEA,OAAO,MAAMC,IAAI,GAAGR,IAAI,CAACS,MAAM,CAAC;EAE5B;EACAC,YAAY,EAAEC,SAAS;EAEvB;EACA;EACA;EACAC,WAAW,EAAED,SAAS;EAEtB;EACAE,SAAS,EAAE;IACPH,YAAY,EAAE;MACV;MACA;MACA;MACAI,MAAM,EAAE,CACJ;QACIC,OAAO,EAAE,MAAM;QACfC,QAAQ,EAAE,MAAM,CAAC;MACrB,CAAC,EAAE;QACCD,OAAO,EAAE,MAAM;QACfC,QAAQ,EAAE,MAAM,CAAC;MACrB,CAAC,CACJ;MACD;MACA;MACAC,KAAK,EAAE;QACHC,IAAI,EAAE;UACFC,IAAI,EAAE,SAAS;UACfC,QAAQ,EAAE,EAAE;UACZC,UAAU,EAAE,QAAQ;UACpBC,kBAAkB,EAAE,QAAQ;UAC5BC,aAAa,EAAE;QACnB,CAAC;QACDC,IAAI,EAAE;UACFC,GAAG,EAAE,MAAM;UACXN,IAAI,EAAE,SAAS;UACfO,EAAE,EAAE,CAAC;UACLC,EAAE,EAAE,CAAC;UACLC,CAAC,EAAE,SAAS;UACZC,CAAC,EAAE,SAAS;UACZC,KAAK,EAAE,SAAS;UAChBC,MAAM,EAAE;QACZ;MACJ,CAAC;MACD;MACA;MACA;MACAC,QAAQ,EAAE;QACNC,QAAQ,EAAE;MACd;IACJ;EACJ,CAAC;EAEDC,QAAQ,EAAE;IACNC,MAAM,EAAE,CAAC,CAAC;IACVC,MAAM,EAAE,CAAC;EACb,CAAC;EAEDC,MAAM,EAAE,SAAAA,CAAA,EAAW;IAEf,OAAO,IAAI;EACf,CAAC;EAEDC,UAAU,EAAE,SAAAA,CAASC,GAAG,EAAE;IAEtB,OAAO,IAAI,CAACC,GAAG,CAAC;MACZL,MAAM,EAAE;QAAEP,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAC;MACtBO,MAAM,EAAE;QAAER,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE;IACzB,CAAC,EAAEU,GAAG,CAAC;EACX,CAAC;EAEDJ,MAAM,EAAE,SAAAA,CAASA,MAAM,EAAEM,IAAI,EAAEF,GAAG,EAAE;IAEhC;IACA,IAAIJ,MAAM,KAAKxB,SAAS,EAAE;MACtB,OAAOV,KAAK,CAAC,IAAI,CAACyC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACpC;;IAEA;IACA,IAAIC,SAAS;IACb,IAAIC,MAAM;;IAEV;IACA;IACA,IAAIC,cAAc,GAAGV,MAAM,YAAYnC,IAAI;IAC3C,IAAI6C,cAAc,EAAE;MAAE;MAClBF,SAAS,GAAG1C,KAAK,CAACwC,IAAI,CAAC,IAAI,CAAC,CAAC;MAC7BE,SAAS,CAACG,EAAE,GAAGX,MAAM,CAACW,EAAE;MACxBF,MAAM,GAAGL,GAAG;MACZ,OAAO,IAAI,CAACC,GAAG,CAAC,QAAQ,EAAEG,SAAS,EAAEC,MAAM,CAAC;IAChD;;IAEA;IACA;IACA;IACA,IAAIG,eAAe,GAAG,CAAC7C,aAAa,CAACiC,MAAM,CAAC;IAC5C,IAAIY,eAAe,EAAE;MAAE;MACnBJ,SAAS,GAAG1C,KAAK,CAACwC,IAAI,CAAC,IAAI,CAAC,CAAC;MAC7BE,SAAS,CAACf,CAAC,GAAGO,MAAM,CAACP,CAAC;MACtBe,SAAS,CAACd,CAAC,GAAGM,MAAM,CAACN,CAAC;MACtBe,MAAM,GAAGL,GAAG;MACZ,OAAO,IAAI,CAACC,GAAG,CAAC,QAAQ,EAAEG,SAAS,EAAEC,MAAM,CAAC;IAChD;;IAEA;IACA;IACA;IACAD,SAAS,GAAGR,MAAM;IAClBS,MAAM,GAAGH,IAAI;IACb,OAAO,IAAI,CAACD,GAAG,CAAC,QAAQ,EAAEG,SAAS,EAAEC,MAAM,CAAC;EAChD,CAAC;EAEDR,MAAM,EAAE,SAAAA,CAASA,MAAM,EAAEK,IAAI,EAAEF,GAAG,EAAE;IAEhC;IACA,IAAIH,MAAM,KAAKzB,SAAS,EAAE;MACtB,OAAOV,KAAK,CAAC,IAAI,CAACyC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACpC;;IAEA;IACA,IAAIM,SAAS;IACb,IAAIJ,MAAM;;IAEV;IACA;IACA,IAAIC,cAAc,GAAGT,MAAM,YAAYpC,IAAI;IAC3C,IAAI6C,cAAc,EAAE;MAAE;MAClBG,SAAS,GAAG/C,KAAK,CAACwC,IAAI,CAAC,IAAI,CAAC,CAAC;MAC7BO,SAAS,CAACF,EAAE,GAAGV,MAAM,CAACU,EAAE;MACxBF,MAAM,GAAGL,GAAG;MACZ,OAAO,IAAI,CAACC,GAAG,CAAC,QAAQ,EAAEQ,SAAS,EAAEJ,MAAM,CAAC;IAChD;;IAEA;IACA;IACA;IACA,IAAIG,eAAe,GAAG,CAAC7C,aAAa,CAACkC,MAAM,CAAC;IAC5C,IAAIW,eAAe,EAAE;MAAE;MACnBC,SAAS,GAAG/C,KAAK,CAACwC,IAAI,CAAC,IAAI,CAAC,CAAC;MAC7BO,SAAS,CAACpB,CAAC,GAAGQ,MAAM,CAACR,CAAC;MACtBoB,SAAS,CAACnB,CAAC,GAAGO,MAAM,CAACP,CAAC;MACtBe,MAAM,GAAGL,GAAG;MACZ,OAAO,IAAI,CAACC,GAAG,CAAC,QAAQ,EAAEQ,SAAS,EAAEJ,MAAM,CAAC;IAChD;;IAEA;IACA;IACA;IACAI,SAAS,GAAGZ,MAAM;IAClBQ,MAAM,GAAGH,IAAI;IACb,OAAO,IAAI,CAACD,GAAG,CAAC,QAAQ,EAAEQ,SAAS,EAAEJ,MAAM,CAAC;EAChD,CAAC;EAEDK,MAAM,EAAE,SAAAA,CAASC,IAAI,EAAET,IAAI,EAAEF,GAAG,EAAE;IAE9B;IACA,IAAIW,IAAI,KAAKvC,SAAS,EAAE;MACpB,IAAIsC,MAAM,GAAG,IAAI,CAACP,GAAG,CAAC,QAAQ,CAAC;MAC/B,IAAI,CAACO,MAAM,EAAE;QACT,OAAO,IAAI;MACf;MACA,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE,OAAOhD,KAAK,CAACgD,MAAM,CAAC;MACpD,OAAOA,MAAM,CAAC,CAAC;IACnB;;IAEA;IACA,IAAIE,gBAAgB,GAAK,OAAOD,IAAI,KAAK,QAAQ,IAAM,OAAOA,IAAI,KAAK,UAAY;IACnF,IAAIE,WAAW,GAAGD,gBAAgB,GAAGD,IAAI,GAAG;MAAEA,IAAI,EAAEA,IAAI;MAAET,IAAI,EAAEA;IAAK,CAAC;IACtE,IAAIY,QAAQ,GAAGF,gBAAgB,GAAGV,IAAI,GAAGF,GAAG;IAE5C,OAAO,IAAI,CAACC,GAAG,CAAC,QAAQ,EAAEY,WAAW,EAAEC,QAAQ,CAAC;EACpD,CAAC;EAEDC,SAAS,EAAE,SAAAA,CAASJ,IAAI,EAAET,IAAI,EAAEF,GAAG,EAAE;IAEjC;IACA,IAAIW,IAAI,KAAKvC,SAAS,EAAE;MACpB,IAAI2C,SAAS,GAAG,IAAI,CAACZ,GAAG,CAAC,WAAW,CAAC;MACrC,IAAI,CAACY,SAAS,EAAE;QACZ,OAAO,IAAI;MACf;MACA,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE,OAAOrD,KAAK,CAACqD,SAAS,CAAC;MAC1D,OAAOA,SAAS,CAAC,CAAC;IACtB;;IAEA;IACA,IAAIC,mBAAmB,GAAK,OAAOL,IAAI,KAAK,QAAQ,IAAI,OAAOA,IAAI,KAAK,UAAY;IACpF,IAAIM,cAAc,GAAGD,mBAAmB,GAAGL,IAAI,GAAG;MAAEA,IAAI,EAAEA,IAAI;MAAET,IAAI,EAAEA;IAAK,CAAC;IAC5E,IAAIY,QAAQ,GAAGE,mBAAmB,GAAGd,IAAI,GAAGF,GAAG;IAE/C,OAAO,IAAI,CAACC,GAAG,CAAC,WAAW,EAAEgB,cAAc,EAAEH,QAAQ,CAAC;EAC1D,CAAC;EAED;;EAEA;EACAI,KAAK,EAAE,SAAAA,CAASC,GAAG,EAAED,KAAK,EAAElB,GAAG,EAAE;IAE7B,IAAIoB,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC,CAAC;IAE1BD,GAAG,GAAIE,QAAQ,CAACF,GAAG,CAAC,IAAIA,GAAG,KAAK,IAAI,GAAKA,GAAG,GAAG,CAAC,GAAI,CAAC;IACrD,IAAIA,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGC,MAAM,CAACE,MAAM,GAAGH,GAAG;;IAEtC;IACA,IAAII,SAAS,CAACD,MAAM,IAAI,CAAC,EAAE,OAAO,IAAI,CAACE,IAAI,CAAC,CAAC,QAAQ,EAAEL,GAAG,CAAC,CAAC;IAC5D;IACA,OAAO,IAAI,CAACK,IAAI,CAAC,CAAC,QAAQ,EAAEL,GAAG,CAAC,EAAED,KAAK,EAAElB,GAAG,CAAC;EACjD,CAAC;EAEDoB,MAAM,EAAE,SAAAA,CAASA,MAAM,EAAEpB,GAAG,EAAE;IAE1B;IACA,IAAIuB,SAAS,CAACD,MAAM,KAAK,CAAC,EAAE;MACxBF,MAAM,GAAG,IAAI,CAACjB,GAAG,CAAC,QAAQ,CAAC;MAC3B,IAAI,CAACsB,KAAK,CAACC,OAAO,CAACN,MAAM,CAAC,EAAE,OAAO,EAAE;MACrC,OAAOA,MAAM,CAACO,KAAK,CAAC,CAAC;IACzB;IACA;IACA,IAAI,CAACF,KAAK,CAACC,OAAO,CAACN,MAAM,CAAC,EAAEA,MAAM,GAAG,EAAE;IACvC,OAAO,IAAI,CAACnB,GAAG,CAAC,QAAQ,EAAEmB,MAAM,EAAEpB,GAAG,CAAC;EAC1C,CAAC;EAED4B,SAAS,EAAE,SAAAA,CAAA,EAAW;IAClB,MAAM;MAAER;IAAO,CAAC,GAAG,IAAI,CAACS,UAAU;IAClC,OAAOJ,KAAK,CAACC,OAAO,CAACN,MAAM,CAAC,IAAIA,MAAM,CAACE,MAAM,GAAG,CAAC;EACrD,CAAC;EAEDQ,WAAW,EAAE,SAAAA,CAASX,GAAG,EAAED,KAAK,EAAElB,GAAG,EAAE;IAEnC,IAAI,CAACkB,KAAK,EAAE,MAAM,IAAIa,KAAK,CAAC,6BAA6B,CAAC;IAE1D,IAAIX,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC,CAAC;IAC1B,IAAIY,CAAC,GAAGZ,MAAM,CAACE,MAAM;IACrBH,GAAG,GAAIE,QAAQ,CAACF,GAAG,CAAC,IAAIA,GAAG,KAAK,IAAI,GAAKA,GAAG,GAAG,CAAC,GAAIa,CAAC;IACrD,IAAIb,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGa,CAAC,GAAGb,GAAG,GAAG,CAAC;IAE9BC,MAAM,CAACa,MAAM,CAACd,GAAG,EAAE,CAAC,EAAED,KAAK,CAAC;IAC5B,OAAO,IAAI,CAACE,MAAM,CAACA,MAAM,EAAEpB,GAAG,CAAC;EACnC,CAAC;EAED;EACA;EACAkC,WAAW,EAAE,SAAAA,CAAShB,KAAK,EAAElB,GAAG,EAAE;IAE9B,OAAO,IAAI,CAAC8B,WAAW,CAAC,CAAC,CAAC,EAAEZ,KAAK,EAAElB,GAAG,CAAC;EAC3C,CAAC;EAEDmC,WAAW,EAAE,SAAAA,CAAShB,GAAG,EAAEnB,GAAG,EAAE;IAE5B,IAAIoB,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC,CAAC;IAC1BD,GAAG,GAAIE,QAAQ,CAACF,GAAG,CAAC,IAAIA,GAAG,KAAK,IAAI,GAAKA,GAAG,GAAG,CAAC,GAAI,CAAC,CAAC;IAEtDC,MAAM,CAACa,MAAM,CAACd,GAAG,EAAE,CAAC,CAAC;IACrB,OAAO,IAAI,CAACC,MAAM,CAACA,MAAM,EAAEpB,GAAG,CAAC;EACnC,CAAC;EAED;;EAEAoC,MAAM,EAAE,SAAAA,CAASjB,GAAG,EAAEiB,MAAM,EAAEpC,GAAG,EAAE;IAE/B,IAAIqC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC,CAAC;IAE9BlB,GAAG,GAAIE,QAAQ,CAACF,GAAG,CAAC,IAAIA,GAAG,KAAK,IAAI,GAAKA,GAAG,GAAG,CAAC,GAAI,CAAC;IACrD,IAAIA,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGkB,QAAQ,CAACf,MAAM,GAAGH,GAAG;;IAExC;IACA,IAAII,SAAS,CAACD,MAAM,IAAI,CAAC,EAAE,OAAO,IAAI,CAACE,IAAI,CAAC,CAAC,UAAU,EAAEL,GAAG,CAAC,CAAC;;IAE9D;IACA,IAAImB,SAAS,GAAG,IAAI,CAACC,gBAAgB,CAACH,MAAM,CAAC;IAC7C,OAAO,IAAI,CAACZ,IAAI,CAAC,CAAC,UAAU,EAAEL,GAAG,CAAC,EAAEmB,SAAS,EAAEtC,GAAG,CAAC;EACvD,CAAC;EAEDqC,QAAQ,EAAE,SAAAA,CAASA,QAAQ,EAAErC,GAAG,EAAE;IAE9B;IACA,IAAIuB,SAAS,CAACD,MAAM,KAAK,CAAC,EAAE;MACxBe,QAAQ,GAAG,IAAI,CAAClC,GAAG,CAAC,UAAU,CAAC;MAC/B,IAAI,CAACsB,KAAK,CAACC,OAAO,CAACW,QAAQ,CAAC,EAAE,OAAO,EAAE;MACvC,OAAOA,QAAQ,CAACV,KAAK,CAAC,CAAC;IAC3B;;IAEA;IACA,IAAI,CAACF,KAAK,CAACC,OAAO,CAACW,QAAQ,CAAC,EAAEA,QAAQ,GAAG,EAAE;IAC3C,IAAIG,WAAW,GAAG,EAAE;IACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,QAAQ,CAACf,MAAM,EAAEmB,CAAC,EAAE,EAAE;MACtC,IAAIL,MAAM,GAAGC,QAAQ,CAACI,CAAC,CAAC;MACxB,IAAIH,SAAS,GAAG,IAAI,CAACC,gBAAgB,CAACH,MAAM,CAAC;MAC7CI,WAAW,CAACE,IAAI,CAACJ,SAAS,CAAC;IAC/B;IACA,OAAO,IAAI,CAACrC,GAAG,CAAC,UAAU,EAAEuC,WAAW,EAAExC,GAAG,CAAC;EACjD,CAAC;EAED2C,YAAY,EAAE,SAAAA,CAASxB,GAAG,EAAEiB,MAAM,EAAEpC,GAAG,EAAE;IAErC,IAAI,CAACoC,MAAM,EAAE,MAAM,IAAIL,KAAK,CAAC,8BAA8B,CAAC;IAE5D,IAAIM,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC,CAAC;IAC9B,IAAIL,CAAC,GAAGK,QAAQ,CAACf,MAAM;IACvBH,GAAG,GAAIE,QAAQ,CAACF,GAAG,CAAC,IAAIA,GAAG,KAAK,IAAI,GAAKA,GAAG,GAAG,CAAC,GAAIa,CAAC;IACrD,IAAIb,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGa,CAAC,GAAGb,GAAG,GAAG,CAAC;IAE9B,IAAImB,SAAS,GAAG,IAAI,CAACC,gBAAgB,CAACH,MAAM,CAAC;IAC7CC,QAAQ,CAACJ,MAAM,CAACd,GAAG,EAAE,CAAC,EAAEmB,SAAS,CAAC;IAClC,OAAO,IAAI,CAACD,QAAQ,CAACA,QAAQ,EAAErC,GAAG,CAAC;EACvC,CAAC;EAED4C,YAAY,EAAE,SAAAA,CAASzB,GAAG,EAAEnB,GAAG,EAAE;IAE7B,IAAIqC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC,CAAC;IAC9BlB,GAAG,GAAIE,QAAQ,CAACF,GAAG,CAAC,IAAIA,GAAG,KAAK,IAAI,GAAKA,GAAG,GAAG,CAAC,GAAI,CAAC,CAAC;IAEtDkB,QAAQ,CAACJ,MAAM,CAACd,GAAG,EAAE,CAAC,CAAC;IACvB,OAAO,IAAI,CAACkB,QAAQ,CAACA,QAAQ,EAAErC,GAAG,CAAC;EACvC,CAAC;EAEDuC,gBAAgB,EAAE,SAAAA,CAASH,MAAM,EAAE;IAE/B;IACA;IACA,IAAI5B,eAAe,GAAG,CAAC7C,aAAa,CAACyE,MAAM,CAAC;IAC5C,IAAI5B,eAAe,EAAE,OAAO;MAAEnB,CAAC,EAAE+C,MAAM,CAAC/C,CAAC;MAAEC,CAAC,EAAE8C,MAAM,CAAC9C;IAAE,CAAC;;IAExD;IACA,OAAO8C,MAAM;EACjB,CAAC;EAED;;EAEAS,SAAS,EAAE,SAAAA,CAASC,EAAE,EAAEC,EAAE,EAAE/C,GAAG,EAAE;IAE7B;IACAA,GAAG,GAAGA,GAAG,IAAI,CAAC,CAAC;IACfA,GAAG,CAACgD,WAAW,GAAGhD,GAAG,CAACgD,WAAW,IAAI,IAAI,CAACzC,EAAE;IAC5CP,GAAG,CAAC8C,EAAE,GAAGA,EAAE;IACX9C,GAAG,CAAC+C,EAAE,GAAGA,EAAE;IAEX,OAAO,IAAI,CAACE,aAAa,CAAC,UAASC,CAAC,EAAE;MAClC,OAAO;QAAE7D,CAAC,EAAE,CAAC6D,CAAC,CAAC7D,CAAC,IAAI,CAAC,IAAIyD,EAAE;QAAExD,CAAC,EAAE,CAAC4D,CAAC,CAAC5D,CAAC,IAAI,CAAC,IAAIyD;MAAG,CAAC;IACrD,CAAC,EAAE/C,GAAG,CAAC;EACX,CAAC;EAEDmD,KAAK,EAAE,SAAAA,CAASC,EAAE,EAAEC,EAAE,EAAEC,MAAM,EAAEtD,GAAG,EAAE;IAEjC,OAAO,IAAI,CAACiD,aAAa,CAAC,UAASC,CAAC,EAAE;MAClC,OAAOnF,KAAK,CAACmF,CAAC,CAAC,CAACC,KAAK,CAACC,EAAE,EAAEC,EAAE,EAAEC,MAAM,CAAC,CAACC,MAAM,CAAC,CAAC;IAClD,CAAC,EAAEvD,GAAG,CAAC;EACX,CAAC;EAEDiD,aAAa,EAAE,SAAAA,CAASO,EAAE,EAAExD,GAAG,EAAE;IAE7B,IAAI,CAACpC,UAAU,CAAC4F,EAAE,CAAC,EAAE;MACjB,MAAM,IAAIC,SAAS,CAAC,uEAAuE,CAAC;IAChG;IAEA,IAAI/E,KAAK,GAAG,CAAC,CAAC;IAEd,IAAI;MAAEkB,MAAM;MAAEC;IAAO,CAAC,GAAG,IAAI,CAACgC,UAAU;IACxC,IAAI,CAACjC,MAAM,CAACW,EAAE,EAAE;MACZ7B,KAAK,CAACkB,MAAM,GAAG4D,EAAE,CAAC5D,MAAM,CAAC;IAC7B;IACA,IAAI,CAACC,MAAM,CAACU,EAAE,EAAE;MACZ7B,KAAK,CAACmB,MAAM,GAAG2D,EAAE,CAAC3D,MAAM,CAAC;IAC7B;IAEA,IAAIwC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC,CAAC;IAC9B,IAAIA,QAAQ,CAACf,MAAM,GAAG,CAAC,EAAE;MACrB5C,KAAK,CAAC2D,QAAQ,GAAGA,QAAQ,CAACqB,GAAG,CAACF,EAAE,CAAC;IACrC;IAEA,OAAO,IAAI,CAACvD,GAAG,CAACvB,KAAK,EAAEsB,GAAG,CAAC;EAC/B,CAAC;EAED2D,cAAc,EAAE,SAAAA,CAAA,EAAW;IACvB,IAAIC,UAAU,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;IACrC,IAAI,CAACD,UAAU,EAAE,OAAO,IAAI7F,KAAK,CAAC,IAAI,CAAC6B,MAAM,CAAC,CAAC,CAAC;IAChD,OAAOgE,UAAU,CAACE,yBAAyB,CAAC,IAAI,EAAE,QAAQ,CAAC;EAC/D,CAAC;EAEDC,cAAc,EAAE,SAAAA,CAAA,EAAW;IACvB,IAAIC,UAAU,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;IACrC,IAAI,CAACD,UAAU,EAAE,OAAO,IAAIjG,KAAK,CAAC,IAAI,CAAC8B,MAAM,CAAC,CAAC,CAAC;IAChD,OAAOmE,UAAU,CAACF,yBAAyB,CAAC,IAAI,EAAE,QAAQ,CAAC;EAC/D,CAAC;EAEDA,yBAAyB,EAAE,SAASA;EAAA,GAAqB;IACrD,OAAO,IAAI,CAACI,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,CAAC;EAC1C,CAAC;EAEDD,WAAW,EAAE,SAAAA,CAAA,EAAW;IACpB,MAAME,MAAM,GAAG,CACX,IAAI,CAACT,cAAc,CAAC,CAAC,EACrB,GAAG,IAAI,CAACtB,QAAQ,CAAC,CAAC,CAACqB,GAAG,CAAC3F,KAAK,CAAC,EAC7B,IAAI,CAACgG,cAAc,CAAC,CAAC,CACxB;IACD,OAAO,IAAI/F,QAAQ,CAACoG,MAAM,CAAC;EAC/B,CAAC;EAEDC,OAAO,EAAE,SAAAA,CAAA,EAAW;IAChB,OAAO,IAAI,CAACH,WAAW,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC;EACpC,CAAC;EAEDC,QAAQ,EAAE,SAAAA,CAASvE,GAAG,EAAE;IAEpB,IAAIwE,SAAS;IAEb,IAAI,IAAI,CAACC,KAAK,EAAE;MAEZ,IAAI7E,MAAM,GAAG,IAAI,CAAC8E,gBAAgB,CAAC,CAAC;MACpC,IAAI7E,MAAM,GAAG,IAAI,CAAC8E,gBAAgB,CAAC,CAAC;MACpC,IAAIC,UAAU,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;MAErC,IAAIjF,MAAM,IAAIC,MAAM,EAAE;QAClB,IAAID,MAAM,KAAKC,MAAM,IAAID,MAAM,CAACkF,YAAY,CAACjF,MAAM,CAAC,EAAE;UAClD2E,SAAS,GAAG3E,MAAM;QACtB,CAAC,MAAM,IAAIA,MAAM,CAACiF,YAAY,CAAClF,MAAM,CAAC,EAAE;UACpC4E,SAAS,GAAG5E,MAAM;QACtB,CAAC,MAAM;UACH4E,SAAS,GAAG,IAAI,CAACC,KAAK,CAACM,iBAAiB,CAACnF,MAAM,EAAEC,MAAM,CAAC;QAC5D;MACJ;MAEA,IAAI+E,UAAU,KAAK,CAACJ,SAAS,IAAIA,SAAS,CAACjE,EAAE,KAAKqE,UAAU,CAACrE,EAAE,CAAC,EAAE;QAC9D;QACA;QACAqE,UAAU,CAACI,OAAO,CAAC,IAAI,EAAEhF,GAAG,CAAC;MACjC;MAEA,IAAIwE,SAAS,EAAE;QACXA,SAAS,CAACS,KAAK,CAAC,IAAI,EAAEjF,GAAG,CAAC;MAC9B;IACJ;IAEA,OAAOwE,SAAS;EACpB,CAAC;EAEDU,OAAO,EAAE,SAAAA,CAASlF,GAAG,EAAE;IAEnBA,GAAG,GAAGA,GAAG,IAAI,CAAC,CAAC;IAEf,IAAI;MAAEJ,MAAM;MAAEC;IAAO,CAAC,GAAG,IAAI,CAACgC,UAAU;IACxC,IAAIsD,QAAQ,GAAGvF,MAAM,CAACW,EAAE;IACxB,IAAI6E,QAAQ,GAAGvF,MAAM,CAACU,EAAE;IAExB,IAAI,CAAC4E,QAAQ,IAAI,CAACC,QAAQ,EAAE;MACxB;MACA,OAAO,KAAK;IAChB;IAEA,IAAIC,IAAI,GAAGF,QAAQ,KAAKC,QAAQ;;IAEhC;IACA;IACA;IACA,IAAI,CAACC,IAAI,IAAIrF,GAAG,CAACsF,IAAI,IAAI,IAAI,CAACb,KAAK,EAAE;MAEjC,IAAIc,aAAa,GAAG,IAAI,CAAC1B,aAAa,CAAC,CAAC;MACxC,IAAI2B,aAAa,GAAG,IAAI,CAACvB,aAAa,CAAC,CAAC;MAExCoB,IAAI,GAAGE,aAAa,CAACT,YAAY,CAACU,aAAa,CAAC,IAAIA,aAAa,CAACV,YAAY,CAACS,aAAa,CAAC;IACjG;IAEA,OAAOF,IAAI;EACf,CAAC;EAED;EACAxB,aAAa,EAAE,SAAAA,CAAA,EAAW;IAEtB,MAAM;MAAEY,KAAK;MAAE5C;IAAW,CAAC,GAAG,IAAI;IAClC,IAAIjC,MAAM,GAAGiC,UAAU,CAACjC,MAAM;IAC9B,OAAQA,MAAM,IAAIA,MAAM,CAACW,EAAE,IAAIkE,KAAK,IAAIA,KAAK,CAACgB,OAAO,CAAC7F,MAAM,CAACW,EAAE,CAAC,IAAK,IAAI;EAC7E,CAAC;EAEDmE,gBAAgB,EAAE,SAAAA,CAAA,EAAW;IACzB,IAAIgB,IAAI,GAAG,IAAI;IACf,IAAIC,OAAO,GAAG,CAAC,CAAC;IAChB,GAAG;MACC,IAAIA,OAAO,CAACD,IAAI,CAACnF,EAAE,CAAC,EAAE,OAAO,IAAI;MACjCoF,OAAO,CAACD,IAAI,CAACnF,EAAE,CAAC,GAAG,IAAI;MACvBmF,IAAI,GAAGA,IAAI,CAAC7B,aAAa,CAAC,CAAC;IAC/B,CAAC,QAAQ6B,IAAI,IAAIA,IAAI,CAAC5F,MAAM,CAAC,CAAC;IAC9B,OAAO4F,IAAI;EACf,CAAC;EAED;EACAzB,aAAa,EAAE,SAAAA,CAAA,EAAW;IAEtB,MAAM;MAAEQ,KAAK;MAAE5C;IAAW,CAAC,GAAG,IAAI;IAClC,IAAIhC,MAAM,GAAGgC,UAAU,CAAChC,MAAM;IAC9B,OAAQA,MAAM,IAAIA,MAAM,CAACU,EAAE,IAAIkE,KAAK,IAAIA,KAAK,CAACgB,OAAO,CAAC5F,MAAM,CAACU,EAAE,CAAC,IAAK,IAAI;EAC7E,CAAC;EAEDoE,gBAAgB,EAAE,SAAAA,CAAA,EAAW;IACzB,IAAIe,IAAI,GAAG,IAAI;IACf,IAAIC,OAAO,GAAG,CAAC,CAAC;IAChB,GAAG;MACC,IAAIA,OAAO,CAACD,IAAI,CAACnF,EAAE,CAAC,EAAE,OAAO,IAAI;MACjCoF,OAAO,CAACD,IAAI,CAACnF,EAAE,CAAC,GAAG,IAAI;MACvBmF,IAAI,GAAGA,IAAI,CAACzB,aAAa,CAAC,CAAC;IAC/B,CAAC,QAAQyB,IAAI,IAAIA,IAAI,CAAC5F,MAAM,CAAC,CAAC;IAC9B,OAAO4F,IAAI;EACf,CAAC;EAED;EACA;EACAE,uBAAuB,EAAE,SAAAA,CAAA,EAAW;IAEhC,IAAIC,kBAAkB;IAEtB,IAAI,IAAI,CAACpB,KAAK,EAAE;MAEZ,IAAIqB,KAAK,GAAG,CACR,IAAI,EACJ,IAAI,CAACpB,gBAAgB,CAAC,CAAC;MAAE;MACzB,IAAI,CAACC,gBAAgB,CAAC,CAAC,CAAC;MAAA,CAC3B,CAACoB,MAAM,CAAC,UAASC,IAAI,EAAE;QACpB,OAAO,CAAC,CAACA,IAAI;MACjB,CAAC,CAAC;MAEFH,kBAAkB,GAAG,IAAI,CAACpB,KAAK,CAACM,iBAAiB,CAACkB,KAAK,CAAC,IAAI,CAACxB,KAAK,EAAEqB,KAAK,CAAC;IAC9E;IAEA,OAAOD,kBAAkB,IAAI,IAAI;EACrC,CAAC;EAED;EACAK,wBAAwB,EAAE,SAAAA,CAASR,IAAI,EAAE;IAErC,IAAIS,MAAM,GAAItI,QAAQ,CAAC6H,IAAI,CAAC,IAAI5H,QAAQ,CAAC4H,IAAI,CAAC,GAAIA,IAAI,GAAGA,IAAI,CAACnF,EAAE;IAChE,IAAI6F,QAAQ,GAAG,IAAI,CAACR,uBAAuB,CAAC,CAAC;IAE7C,OAAO,CAAC,CAACQ,QAAQ,KAAKA,QAAQ,CAAC7F,EAAE,KAAK4F,MAAM,IAAIC,QAAQ,CAACtB,YAAY,CAACqB,MAAM,CAAC,CAAC;EAClF,CAAC;EAED;EACAE,gBAAgB,EAAE,SAAAA,CAAA,EAAW;IAEzB,IAAIlI,YAAY,GAAG,IAAI,CAACgC,GAAG,CAAC,cAAc,CAAC,IAAI,IAAI,CAAChC,YAAY,IAAI,CAAC,CAAC;IAEtE,IAAI+C,KAAK,GAAG,CAAC,CAAC;IACdA,KAAK,CAAC3C,MAAM,GAAGJ,YAAY,CAACI,MAAM,IAAI,IAAI,CAAC4B,GAAG,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC9B,WAAW;IACjF6C,KAAK,CAACzB,QAAQ,GAAGtB,YAAY,CAACsB,QAAQ;IACtCyB,KAAK,CAACxC,KAAK,GAAGP,YAAY,CAACO,KAAK;IAChCwC,KAAK,CAACoF,IAAI,GAAGnI,YAAY,CAACmI,IAAI;IAE9B,OAAOpF,KAAK;EAChB;AACJ,CAAC,EAAE;EAECqF,SAAS,EAAE,SAAAA,CAASC,CAAC,EAAEC,CAAC,EAAE;IAEtB,IAAIC,UAAU,GAAGF,CAAC,CAACG,IAAI,KAAKF,CAAC,CAACE,IAAI,IAAI,CAACH,CAAC,CAACG,IAAI,IAAI,CAACF,CAAC,CAACE,IAAI;IACxD,OAAOH,CAAC,CAACjG,EAAE,KAAKkG,CAAC,CAAClG,EAAE,IAAImG,UAAU;EACtC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}