{"ast":null,"code":"import { Rect } from '../g/index.mjs';\nimport { HighlighterView } from '../dia/HighlighterView.mjs';\nimport { normalizeSides, isEqual } from '../util/index.mjs';\nimport { Positions, getRectPoint } from '../util/getRectPoint.mjs';\nconst Directions = {\n  ROW: 'row',\n  COLUMN: 'column'\n};\nexport const list = HighlighterView.extend({\n  tagName: 'g',\n  MOUNTABLE: true,\n  UPDATE_ATTRIBUTES: function () {\n    return [this.options.attribute];\n  },\n  _prevItems: null,\n  highlight(elementView, node) {\n    const element = elementView.model;\n    const {\n      attribute,\n      size = 20,\n      gap = 5,\n      direction = Directions.ROW\n    } = this.options;\n    if (!attribute) throw new Error('List: attribute is required');\n    const normalizedSize = typeof size === 'number' ? {\n      width: size,\n      height: size\n    } : size;\n    const isRowDirection = direction === Directions.ROW;\n    const itemWidth = isRowDirection ? normalizedSize.width : normalizedSize.height;\n    let items = element.get(attribute);\n    if (!Array.isArray(items)) items = [];\n    const prevItems = this._prevItems || [];\n    const comparison = items.map((item, index) => isEqual(prevItems[index], items[index]));\n    if (prevItems.length !== items.length || comparison.some(unchanged => !unchanged)) {\n      const prevEls = this.vel.children();\n      const itemsEls = items.map((item, index) => {\n        const prevEl = index in prevEls ? prevEls[index].node : null;\n        if (comparison[index]) return prevEl;\n        const itemEl = this.createListItem(item, normalizedSize, prevEl);\n        if (!itemEl) return null;\n        if (!(itemEl instanceof SVGElement)) throw new Error('List: item must be an SVGElement');\n        itemEl.dataset.index = index;\n        itemEl.dataset.attribute = attribute;\n        const offset = index * (itemWidth + gap);\n        itemEl.setAttribute('transform', isRowDirection ? `translate(${offset}, 0)` : `translate(0, ${offset})`);\n        return itemEl;\n      });\n      this.vel.empty().append(itemsEls);\n      this._prevItems = items;\n    }\n    const itemsCount = items.length;\n    const length = itemsCount === 0 ? 0 : itemsCount * itemWidth + (itemsCount - 1) * gap;\n    const listSize = isRowDirection ? {\n      width: length,\n      height: normalizedSize.height\n    } : {\n      width: normalizedSize.width,\n      height: length\n    };\n    this.position(element, listSize);\n  },\n  position(element, listSize) {\n    const {\n      vel,\n      options\n    } = this;\n    const {\n      margin = 5,\n      position = 'top-left'\n    } = options;\n    const {\n      width,\n      height\n    } = element.size();\n    const {\n      left,\n      right,\n      top,\n      bottom\n    } = normalizeSides(margin);\n    const bbox = new Rect(left, top, width - (left + right), height - (top + bottom));\n    let {\n      x,\n      y\n    } = getRectPoint(bbox, position);\n    // x\n    switch (position) {\n      case Positions.CENTER:\n      case Positions.TOP:\n      case Positions.BOTTOM:\n        {\n          x -= listSize.width / 2;\n          break;\n        }\n      case Positions.RIGHT:\n      case Positions.BOTTOM_RIGHT:\n      case Positions.TOP_RIGHT:\n        {\n          x -= listSize.width;\n          break;\n        }\n    }\n    // y\n    switch (position) {\n      case Positions.CENTER:\n      case Positions.RIGHT:\n      case Positions.LEFT:\n        {\n          y -= listSize.height / 2;\n          break;\n        }\n      case Positions.BOTTOM:\n      case Positions.BOTTOM_RIGHT:\n      case Positions.BOTTOM_LEFT:\n        {\n          y -= listSize.height;\n          break;\n        }\n    }\n    vel.attr('transform', `translate(${x}, ${y})`);\n  }\n}, {\n  Directions,\n  Positions\n});","map":{"version":3,"names":["Rect","HighlighterView","normalizeSides","isEqual","Positions","getRectPoint","Directions","ROW","COLUMN","list","extend","tagName","MOUNTABLE","UPDATE_ATTRIBUTES","options","attribute","_prevItems","highlight","elementView","node","element","model","size","gap","direction","Error","normalizedSize","width","height","isRowDirection","itemWidth","items","get","Array","isArray","prevItems","comparison","map","item","index","length","some","unchanged","prevEls","vel","children","itemsEls","prevEl","itemEl","createListItem","SVGElement","dataset","offset","setAttribute","empty","append","itemsCount","listSize","position","margin","left","right","top","bottom","bbox","x","y","CENTER","TOP","BOTTOM","RIGHT","BOTTOM_RIGHT","TOP_RIGHT","LEFT","BOTTOM_LEFT","attr"],"sources":["/Users/guankaiyuan/ReactTs/node_modules/.pnpm/@joint+core@4.0.1/node_modules/@joint/core/src/highlighters/list.mjs"],"sourcesContent":["import { Rect } from '../g/index.mjs';\nimport { HighlighterView } from '../dia/HighlighterView.mjs';\nimport {\n    normalizeSides,\n    isEqual,\n} from '../util/index.mjs';\nimport {\n    Positions,\n    getRectPoint,\n} from '../util/getRectPoint.mjs';\n\nconst Directions = {\n    ROW: 'row',\n    COLUMN: 'column'\n};\n\nexport const list = HighlighterView.extend({\n\n    tagName: 'g',\n    MOUNTABLE: true,\n    UPDATE_ATTRIBUTES: function() {\n        return [this.options.attribute];\n    },\n\n    _prevItems: null,\n\n    highlight(elementView, node) {\n        const element = elementView.model;\n        const { attribute, size = 20, gap = 5, direction = Directions.ROW } = this.options;\n        if (!attribute) throw new Error('List: attribute is required');\n        const normalizedSize = (typeof size === 'number') ? { width: size, height: size } : size;\n        const isRowDirection = (direction === Directions.ROW);\n        const itemWidth = isRowDirection ? normalizedSize.width : normalizedSize.height;\n        let items = element.get(attribute);\n        if (!Array.isArray(items)) items = [];\n        const prevItems = this._prevItems || [];\n        const comparison = items.map((item, index) => isEqual(prevItems[index], items[index]));\n        if (prevItems.length !== items.length || comparison.some(unchanged => !unchanged)) {\n            const prevEls = this.vel.children();\n            const itemsEls = items.map((item, index) => {\n                const prevEl = (index in prevEls) ? prevEls[index].node : null;\n                if (comparison[index]) return prevEl;\n                const itemEl = this.createListItem(item, normalizedSize, prevEl);\n                if (!itemEl) return null;\n                if (!(itemEl instanceof SVGElement)) throw new Error('List: item must be an SVGElement');\n                itemEl.dataset.index = index;\n                itemEl.dataset.attribute = attribute;\n                const offset = index * (itemWidth + gap);\n                itemEl.setAttribute('transform', (isRowDirection)\n                    ? `translate(${offset}, 0)`\n                    : `translate(0, ${offset})`\n                );\n                return itemEl;\n            });\n            this.vel.empty().append(itemsEls);\n            this._prevItems = items;\n        }\n        const itemsCount = items.length;\n        const length = (itemsCount === 0)\n            ? 0\n            : (itemsCount * itemWidth + (itemsCount - 1) * gap);\n        const listSize = (isRowDirection)\n            ? { width: length, height: normalizedSize.height }\n            : { width: normalizedSize.width, height: length };\n\n        this.position(element, listSize);\n    },\n\n    position(element, listSize) {\n        const { vel, options } = this;\n        const { margin = 5, position = 'top-left' } = options;\n        const { width, height } = element.size();\n        const { left, right, top, bottom } = normalizeSides(margin);\n        const bbox = new Rect(left, top, width - (left + right), height - (top + bottom));\n        let { x, y } = getRectPoint(bbox, position);\n        // x\n        switch (position) {\n            case Positions.CENTER:\n            case Positions.TOP:\n            case Positions.BOTTOM: {\n                x -= listSize.width / 2;\n                break;\n            }\n            case Positions.RIGHT:\n            case Positions.BOTTOM_RIGHT:\n            case Positions.TOP_RIGHT: {\n                x -= listSize.width;\n                break;\n            }\n        }\n        // y\n        switch (position) {\n            case Positions.CENTER:\n            case Positions.RIGHT:\n            case Positions.LEFT: {\n                y -= listSize.height / 2;\n                break;\n            }\n            case Positions.BOTTOM:\n            case Positions.BOTTOM_RIGHT:\n            case Positions.BOTTOM_LEFT: {\n                y -= listSize.height;\n                break;\n            }\n        }\n        vel.attr('transform', `translate(${x}, ${y})`);\n    }\n}, {\n    Directions,\n    Positions\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}