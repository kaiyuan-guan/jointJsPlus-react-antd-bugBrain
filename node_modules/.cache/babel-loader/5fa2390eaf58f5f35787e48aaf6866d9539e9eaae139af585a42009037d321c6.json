{"ast":null,"code":"import { Point } from './point.mjs';\nimport { Polyline } from './polyline.mjs';\nimport { extend } from './extend.mjs';\nimport { types } from './types.mjs';\nimport { clonePoints, parsePoints, convexHull } from './points.mjs';\nexport const Polygon = function (points) {\n  if (!(this instanceof Polygon)) {\n    return new Polygon(points);\n  }\n  if (typeof points === 'string') {\n    return new Polygon.parse(points);\n  }\n  this.points = Array.isArray(points) ? points.map(Point) : [];\n};\nPolygon.parse = function (svgString) {\n  return new Polygon(parsePoints(svgString));\n};\nPolygon.fromRect = function (rect) {\n  return new Polygon([rect.topLeft(), rect.topRight(), rect.bottomRight(), rect.bottomLeft()]);\n};\nPolygon.prototype = extend(Polyline.prototype, {\n  type: types.Polygon,\n  clone: function () {\n    return new Polygon(clonePoints(this.points));\n  },\n  convexHull: function () {\n    return new Polygon(convexHull(this.points));\n  },\n  lengthPoints: function () {\n    const {\n      start,\n      end,\n      points\n    } = this;\n    if (points.length <= 1 || start.equals(end)) return points;\n    return [...points, start.clone()];\n  }\n});","map":{"version":3,"names":["Point","Polyline","extend","types","clonePoints","parsePoints","convexHull","Polygon","points","parse","Array","isArray","map","svgString","fromRect","rect","topLeft","topRight","bottomRight","bottomLeft","prototype","type","clone","lengthPoints","start","end","length","equals"],"sources":["/Users/guankaiyuan/ReactTs/node_modules/.pnpm/@joint+core@4.0.1/node_modules/@joint/core/src/g/polygon.mjs"],"sourcesContent":["import { Point } from './point.mjs';\nimport { Polyline } from './polyline.mjs';\nimport { extend } from './extend.mjs';\nimport { types } from './types.mjs';\nimport { clonePoints, parsePoints, convexHull } from './points.mjs';\n\nexport const Polygon = function(points) {\n\n    if (!(this instanceof Polygon)) {\n        return new Polygon(points);\n    }\n\n    if (typeof points === 'string') {\n        return new Polygon.parse(points);\n    }\n\n    this.points = (Array.isArray(points) ? points.map(Point) : []);\n};\n\nPolygon.parse = function(svgString) {\n    return new Polygon(parsePoints(svgString));\n};\n\nPolygon.fromRect = function(rect) {\n    return new Polygon([\n        rect.topLeft(),\n        rect.topRight(),\n        rect.bottomRight(),\n        rect.bottomLeft()\n    ]);\n};\n\nPolygon.prototype = extend(Polyline.prototype, {\n\n    type: types.Polygon,\n\n    clone: function() {\n        return new Polygon(clonePoints(this.points));\n    },\n\n    convexHull: function() {\n        return new Polygon(convexHull(this.points));\n    },\n\n    lengthPoints: function() {\n        const { start, end, points } = this;\n        if (points.length <= 1 || start.equals(end)) return points;\n        return [...points, start.clone()];\n    }\n\n});\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,aAAa;AACnC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,WAAW,EAAEC,WAAW,EAAEC,UAAU,QAAQ,cAAc;AAEnE,OAAO,MAAMC,OAAO,GAAG,SAAAA,CAASC,MAAM,EAAE;EAEpC,IAAI,EAAE,IAAI,YAAYD,OAAO,CAAC,EAAE;IAC5B,OAAO,IAAIA,OAAO,CAACC,MAAM,CAAC;EAC9B;EAEA,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAC5B,OAAO,IAAID,OAAO,CAACE,KAAK,CAACD,MAAM,CAAC;EACpC;EAEA,IAAI,CAACA,MAAM,GAAIE,KAAK,CAACC,OAAO,CAACH,MAAM,CAAC,GAAGA,MAAM,CAACI,GAAG,CAACZ,KAAK,CAAC,GAAG,EAAG;AAClE,CAAC;AAEDO,OAAO,CAACE,KAAK,GAAG,UAASI,SAAS,EAAE;EAChC,OAAO,IAAIN,OAAO,CAACF,WAAW,CAACQ,SAAS,CAAC,CAAC;AAC9C,CAAC;AAEDN,OAAO,CAACO,QAAQ,GAAG,UAASC,IAAI,EAAE;EAC9B,OAAO,IAAIR,OAAO,CAAC,CACfQ,IAAI,CAACC,OAAO,CAAC,CAAC,EACdD,IAAI,CAACE,QAAQ,CAAC,CAAC,EACfF,IAAI,CAACG,WAAW,CAAC,CAAC,EAClBH,IAAI,CAACI,UAAU,CAAC,CAAC,CACpB,CAAC;AACN,CAAC;AAEDZ,OAAO,CAACa,SAAS,GAAGlB,MAAM,CAACD,QAAQ,CAACmB,SAAS,EAAE;EAE3CC,IAAI,EAAElB,KAAK,CAACI,OAAO;EAEnBe,KAAK,EAAE,SAAAA,CAAA,EAAW;IACd,OAAO,IAAIf,OAAO,CAACH,WAAW,CAAC,IAAI,CAACI,MAAM,CAAC,CAAC;EAChD,CAAC;EAEDF,UAAU,EAAE,SAAAA,CAAA,EAAW;IACnB,OAAO,IAAIC,OAAO,CAACD,UAAU,CAAC,IAAI,CAACE,MAAM,CAAC,CAAC;EAC/C,CAAC;EAEDe,YAAY,EAAE,SAAAA,CAAA,EAAW;IACrB,MAAM;MAAEC,KAAK;MAAEC,GAAG;MAAEjB;IAAO,CAAC,GAAG,IAAI;IACnC,IAAIA,MAAM,CAACkB,MAAM,IAAI,CAAC,IAAIF,KAAK,CAACG,MAAM,CAACF,GAAG,CAAC,EAAE,OAAOjB,MAAM;IAC1D,OAAO,CAAC,GAAGA,MAAM,EAAEgB,KAAK,CAACF,KAAK,CAAC,CAAC,CAAC;EACrC;AAEJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}