{"ast":null,"code":"var _jsxFileName = \"/Users/guankaiyuan/ReactTs/src/components/Chatbot/Inspector/LabelInspector.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useBaseInspector } from './useBaseInspector';\nimport Input from '../Input/Input';\nconst cellProps = {\n  label: ['attrs', 'label', 'text']\n};\nconst LabelInspector = props => {\n  _s();\n  const {\n    cell\n  } = props;\n  const [label, setLabel] = useState('');\n  const assignFormFields = useCallback(() => {\n    setLabel(cell.prop(cellProps.label));\n  }, [cell]);\n  const changeCellProp = useBaseInspector({\n    cell,\n    assignFormFields\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Component\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Label\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"label\",\n    type: \"text\",\n    placeholder: \"Enter label\",\n    value: label,\n    onChange: e => changeCellProp(cellProps.label, e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }));\n};\n_s(LabelInspector, \"ufq2YTxoJN+rCrVCVj+rTOheegU=\", false, function () {\n  return [useBaseInspector];\n});\n_c = LabelInspector;\nexport default LabelInspector;\nvar _c;\n$RefreshReg$(_c, \"LabelInspector\");","map":{"version":3,"names":["React","useCallback","useState","useBaseInspector","Input","cellProps","label","LabelInspector","props","_s","cell","setLabel","assignFormFields","prop","changeCellProp","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/guankaiyuan/ReactTs/src/components/Chatbot/Inspector/LabelInspector.tsx"],"sourcesContent":["import React, { ChangeEvent, ReactElement, useCallback, useState } from 'react';\nimport { dia } from '@joint/plus';\n\nimport { useBaseInspector } from './useBaseInspector';\nimport Input from '../Input/Input';\n\ninterface Props {\n    cell: dia.Cell;\n}\n\nconst cellProps = {\n    label: ['attrs', 'label', 'text']\n};\n\nconst LabelInspector = (props: Props): ReactElement => {\n\n    const { cell } = props;\n\n    const [label, setLabel] = useState<string>('');\n\n    const assignFormFields = useCallback((): void => {\n        setLabel(cell.prop(cellProps.label));\n    }, [cell]);\n\n    const changeCellProp = useBaseInspector({ cell, assignFormFields });\n\n    return (\n        <>\n            <h1>Component</h1>\n\n            <label htmlFor=\"label\">Label</label>\n            <Input id=\"label\"\n                   type=\"text\"\n                   placeholder=\"Enter label\"\n                   value={label}\n                   onChange={(e: ChangeEvent<HTMLInputElement>) => changeCellProp(cellProps.label, e.target.value)}\n            />\n        </>\n    );\n};\n\nexport default LabelInspector;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAA+BC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAG/E,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,OAAOC,KAAK,MAAM,gBAAgB;AAMlC,MAAMC,SAAS,GAAG;EACdC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM;AACpC,CAAC;AAED,MAAMC,cAAc,GAAIC,KAAY,IAAmB;EAAAC,EAAA;EAEnD,MAAM;IAAEC;EAAK,CAAC,GAAGF,KAAK;EAEtB,MAAM,CAACF,KAAK,EAAEK,QAAQ,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAE9C,MAAMU,gBAAgB,GAAGX,WAAW,CAAC,MAAY;IAC7CU,QAAQ,CAACD,IAAI,CAACG,IAAI,CAACR,SAAS,CAACC,KAAK,CAAC,CAAC;EACxC,CAAC,EAAE,CAACI,IAAI,CAAC,CAAC;EAEV,MAAMI,cAAc,GAAGX,gBAAgB,CAAC;IAAEO,IAAI;IAAEE;EAAiB,CAAC,CAAC;EAEnE,oBACIZ,KAAA,CAAAe,aAAA,CAAAf,KAAA,CAAAgB,QAAA,qBACIhB,KAAA,CAAAe,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,WAAa,CAAC,eAElBtB,KAAA,CAAAe,aAAA;IAAOQ,OAAO,EAAC,OAAO;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAAY,CAAC,eACpCtB,KAAA,CAAAe,aAAA,CAACX,KAAK;IAACoB,EAAE,EAAC,OAAO;IACVC,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,aAAa;IACzBC,KAAK,EAAErB,KAAM;IACbsB,QAAQ,EAAGC,CAAgC,IAAKf,cAAc,CAACT,SAAS,CAACC,KAAK,EAAEuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACtG,CACH,CAAC;AAEX,CAAC;AAACb,EAAA,CAzBIF,cAAc;EAAA,QAUOJ,gBAAgB;AAAA;AAAA4B,EAAA,GAVrCxB,cAAc;AA2BpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}