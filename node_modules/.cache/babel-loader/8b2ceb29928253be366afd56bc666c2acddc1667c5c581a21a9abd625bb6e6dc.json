{"ast":null,"code":"import * as g from '../g/index.mjs';\nimport * as util from '../util/index.mjs';\nimport { ToolView } from '../dia/ToolView.mjs';\nimport { getAnchor, snapAnchor } from './helpers.mjs';\nconst Anchor = ToolView.extend({\n  tagName: 'g',\n  type: null,\n  children: [{\n    tagName: 'circle',\n    selector: 'anchor',\n    attributes: {\n      'cursor': 'pointer'\n    }\n  }, {\n    tagName: 'rect',\n    selector: 'area',\n    attributes: {\n      'pointer-events': 'none',\n      'fill': 'none',\n      'stroke': '#33334F',\n      'stroke-dasharray': '2,4',\n      'rx': 5,\n      'ry': 5\n    }\n  }],\n  events: {\n    mousedown: 'onPointerDown',\n    touchstart: 'onPointerDown',\n    dblclick: 'onPointerDblClick',\n    dbltap: 'onPointerDblClick'\n  },\n  documentEvents: {\n    mousemove: 'onPointerMove',\n    touchmove: 'onPointerMove',\n    mouseup: 'onPointerUp',\n    touchend: 'onPointerUp',\n    touchcancel: 'onPointerUp'\n  },\n  options: {\n    snap: snapAnchor,\n    anchor: getAnchor,\n    scale: null,\n    resetAnchor: true,\n    customAnchorAttributes: {\n      'stroke-width': 4,\n      'stroke': '#33334F',\n      'fill': '#FFFFFF',\n      'r': 5\n    },\n    defaultAnchorAttributes: {\n      'stroke-width': 2,\n      'stroke': '#FFFFFF',\n      'fill': '#33334F',\n      'r': 6\n    },\n    areaPadding: 6,\n    snapRadius: 10,\n    restrictArea: true,\n    redundancyRemoval: true\n  },\n  onRender: function () {\n    this.renderChildren();\n    this.toggleArea(false);\n    this.update();\n  },\n  update: function () {\n    var type = this.type;\n    var relatedView = this.relatedView;\n    var view = relatedView.getEndView(type);\n    if (view) {\n      this.updateAnchor();\n      this.updateArea();\n      this.el.style.display = '';\n    } else {\n      this.el.style.display = 'none';\n    }\n    return this;\n  },\n  updateAnchor: function () {\n    var childNodes = this.childNodes;\n    if (!childNodes) return;\n    var anchorNode = childNodes.anchor;\n    if (!anchorNode) return;\n    var relatedView = this.relatedView;\n    var type = this.type;\n    var position = relatedView.getEndAnchor(type);\n    var options = this.options;\n    var customAnchor = relatedView.model.prop([type, 'anchor']);\n    let transformString = `translate(${position.x},${position.y})`;\n    if (options.scale) {\n      transformString += ` scale(${options.scale})`;\n    }\n    anchorNode.setAttribute('transform', transformString);\n    var anchorAttributes = customAnchor ? options.customAnchorAttributes : options.defaultAnchorAttributes;\n    for (var attrName in anchorAttributes) {\n      anchorNode.setAttribute(attrName, anchorAttributes[attrName]);\n    }\n  },\n  updateArea: function () {\n    var childNodes = this.childNodes;\n    if (!childNodes) return;\n    var areaNode = childNodes.area;\n    if (!areaNode) return;\n    var relatedView = this.relatedView;\n    var type = this.type;\n    var view = relatedView.getEndView(type);\n    var model = view.model;\n    var magnet = relatedView.getEndMagnet(type);\n    var padding = this.options.areaPadding;\n    if (!isFinite(padding)) padding = 0;\n    var bbox, angle, center;\n    if (view.isNodeConnection(magnet)) {\n      bbox = view.getNodeBBox(magnet);\n      angle = 0;\n      center = bbox.center();\n    } else {\n      bbox = view.getNodeUnrotatedBBox(magnet);\n      angle = model.angle();\n      center = bbox.center();\n      if (angle) center.rotate(model.getBBox().center(), -angle);\n      // TODO: get the link's magnet rotation into account\n    }\n    bbox.inflate(padding);\n    areaNode.setAttribute('x', -bbox.width / 2);\n    areaNode.setAttribute('y', -bbox.height / 2);\n    areaNode.setAttribute('width', bbox.width);\n    areaNode.setAttribute('height', bbox.height);\n    areaNode.setAttribute('transform', 'translate(' + center.x + ',' + center.y + ') rotate(' + angle + ')');\n  },\n  toggleArea: function (visible) {\n    var childNodes = this.childNodes;\n    if (!childNodes) return;\n    var areaNode = childNodes.area;\n    if (!areaNode) return;\n    areaNode.style.display = visible ? '' : 'none';\n  },\n  onPointerDown: function (evt) {\n    if (this.guard(evt)) return;\n    evt.stopPropagation();\n    evt.preventDefault();\n    this.paper.undelegateEvents();\n    this.delegateDocumentEvents();\n    this.focus();\n    this.toggleArea(this.options.restrictArea);\n    this.relatedView.model.startBatch('anchor-move', {\n      ui: true,\n      tool: this.cid\n    });\n  },\n  resetAnchor: function (anchor) {\n    var type = this.type;\n    var relatedModel = this.relatedView.model;\n    if (anchor) {\n      relatedModel.prop([type, 'anchor'], anchor, {\n        rewrite: true,\n        ui: true,\n        tool: this.cid\n      });\n    } else {\n      relatedModel.removeProp([type, 'anchor'], {\n        ui: true,\n        tool: this.cid\n      });\n    }\n  },\n  onPointerMove: function (evt) {\n    var relatedView = this.relatedView;\n    var type = this.type;\n    var view = relatedView.getEndView(type);\n    var model = view.model;\n    var magnet = relatedView.getEndMagnet(type);\n    var normalizedEvent = util.normalizeEvent(evt);\n    var coords = this.paper.clientToLocalPoint(normalizedEvent.clientX, normalizedEvent.clientY);\n    var snapFn = this.options.snap;\n    if (typeof snapFn === 'function') {\n      coords = snapFn.call(relatedView, coords, view, magnet, type, relatedView, this);\n      coords = new g.Point(coords);\n    }\n    if (this.options.restrictArea) {\n      if (view.isNodeConnection(magnet)) {\n        // snap coords to the link's connection\n        var pointAtConnection = view.getClosestPoint(coords);\n        if (pointAtConnection) coords = pointAtConnection;\n      } else {\n        // snap coords within node bbox\n        var bbox = view.getNodeUnrotatedBBox(magnet);\n        var angle = model.angle();\n        var origin = model.getBBox().center();\n        var rotatedCoords = coords.clone().rotate(origin, angle);\n        if (!bbox.containsPoint(rotatedCoords)) {\n          coords = bbox.pointNearestToPoint(rotatedCoords).rotate(origin, -angle);\n        }\n      }\n    }\n    var anchor;\n    var anchorFn = this.options.anchor;\n    if (typeof anchorFn === 'function') {\n      anchor = anchorFn.call(relatedView, coords, view, magnet, type, relatedView);\n    }\n    this.resetAnchor(anchor);\n    this.update();\n  },\n  onPointerUp: function (evt) {\n    const normalizedEvent = util.normalizeEvent(evt);\n    this.paper.delegateEvents();\n    this.undelegateDocumentEvents();\n    this.blur();\n    this.toggleArea(false);\n    var linkView = this.relatedView;\n    if (this.options.redundancyRemoval) linkView.removeRedundantLinearVertices({\n      ui: true,\n      tool: this.cid\n    });\n    linkView.checkMouseleave(normalizedEvent);\n    linkView.model.stopBatch('anchor-move', {\n      ui: true,\n      tool: this.cid\n    });\n  },\n  onPointerDblClick: function () {\n    var anchor = this.options.resetAnchor;\n    if (anchor === false) return; // reset anchor disabled\n    if (anchor === true) anchor = null; // remove the current anchor\n    this.resetAnchor(util.cloneDeep(anchor));\n    this.update();\n  }\n});\nexport const SourceAnchor = Anchor.extend({\n  name: 'source-anchor',\n  type: 'source'\n});\nexport const TargetAnchor = Anchor.extend({\n  name: 'target-anchor',\n  type: 'target'\n});","map":{"version":3,"names":["g","util","ToolView","getAnchor","snapAnchor","Anchor","extend","tagName","type","children","selector","attributes","events","mousedown","touchstart","dblclick","dbltap","documentEvents","mousemove","touchmove","mouseup","touchend","touchcancel","options","snap","anchor","scale","resetAnchor","customAnchorAttributes","defaultAnchorAttributes","areaPadding","snapRadius","restrictArea","redundancyRemoval","onRender","renderChildren","toggleArea","update","relatedView","view","getEndView","updateAnchor","updateArea","el","style","display","childNodes","anchorNode","position","getEndAnchor","customAnchor","model","prop","transformString","x","y","setAttribute","anchorAttributes","attrName","areaNode","area","magnet","getEndMagnet","padding","isFinite","bbox","angle","center","isNodeConnection","getNodeBBox","getNodeUnrotatedBBox","rotate","getBBox","inflate","width","height","visible","onPointerDown","evt","guard","stopPropagation","preventDefault","paper","undelegateEvents","delegateDocumentEvents","focus","startBatch","ui","tool","cid","relatedModel","rewrite","removeProp","onPointerMove","normalizedEvent","normalizeEvent","coords","clientToLocalPoint","clientX","clientY","snapFn","call","Point","pointAtConnection","getClosestPoint","origin","rotatedCoords","clone","containsPoint","pointNearestToPoint","anchorFn","onPointerUp","delegateEvents","undelegateDocumentEvents","blur","linkView","removeRedundantLinearVertices","checkMouseleave","stopBatch","onPointerDblClick","cloneDeep","SourceAnchor","name","TargetAnchor"],"sources":["/Users/guankaiyuan/ReactTs/node_modules/.pnpm/@joint+core@4.0.1/node_modules/@joint/core/src/linkTools/Anchor.mjs"],"sourcesContent":["import * as g from '../g/index.mjs';\nimport * as util from '../util/index.mjs';\nimport { ToolView } from '../dia/ToolView.mjs';\nimport { getAnchor, snapAnchor } from './helpers.mjs';\n\nconst Anchor = ToolView.extend({\n    tagName: 'g',\n    type: null,\n    children: [{\n        tagName: 'circle',\n        selector: 'anchor',\n        attributes: {\n            'cursor': 'pointer'\n        }\n    }, {\n        tagName: 'rect',\n        selector: 'area',\n        attributes: {\n            'pointer-events': 'none',\n            'fill': 'none',\n            'stroke': '#33334F',\n            'stroke-dasharray': '2,4',\n            'rx': 5,\n            'ry': 5\n        }\n    }],\n    events: {\n        mousedown: 'onPointerDown',\n        touchstart: 'onPointerDown',\n        dblclick: 'onPointerDblClick',\n        dbltap: 'onPointerDblClick'\n    },\n    documentEvents: {\n        mousemove: 'onPointerMove',\n        touchmove: 'onPointerMove',\n        mouseup: 'onPointerUp',\n        touchend: 'onPointerUp',\n        touchcancel: 'onPointerUp'\n    },\n    options: {\n        snap: snapAnchor,\n        anchor: getAnchor,\n        scale: null,\n        resetAnchor: true,\n        customAnchorAttributes: {\n            'stroke-width': 4,\n            'stroke': '#33334F',\n            'fill': '#FFFFFF',\n            'r': 5\n        },\n        defaultAnchorAttributes: {\n            'stroke-width': 2,\n            'stroke': '#FFFFFF',\n            'fill': '#33334F',\n            'r': 6\n        },\n        areaPadding: 6,\n        snapRadius: 10,\n        restrictArea: true,\n        redundancyRemoval: true\n    },\n    onRender: function() {\n        this.renderChildren();\n        this.toggleArea(false);\n        this.update();\n    },\n    update: function() {\n        var type = this.type;\n        var relatedView = this.relatedView;\n        var view = relatedView.getEndView(type);\n        if (view) {\n            this.updateAnchor();\n            this.updateArea();\n            this.el.style.display = '';\n        } else {\n            this.el.style.display = 'none';\n        }\n        return this;\n    },\n    updateAnchor: function() {\n        var childNodes = this.childNodes;\n        if (!childNodes) return;\n        var anchorNode = childNodes.anchor;\n        if (!anchorNode) return;\n        var relatedView = this.relatedView;\n        var type = this.type;\n        var position = relatedView.getEndAnchor(type);\n        var options = this.options;\n        var customAnchor = relatedView.model.prop([type, 'anchor']);\n        let transformString =  `translate(${position.x},${position.y})`;\n        if (options.scale) {\n            transformString += ` scale(${options.scale})`;\n        }\n        anchorNode.setAttribute('transform', transformString);\n        var anchorAttributes = (customAnchor) ? options.customAnchorAttributes : options.defaultAnchorAttributes;\n        for (var attrName in anchorAttributes) {\n            anchorNode.setAttribute(attrName, anchorAttributes[attrName]);\n        }\n    },\n    updateArea: function() {\n        var childNodes = this.childNodes;\n        if (!childNodes) return;\n        var areaNode = childNodes.area;\n        if (!areaNode) return;\n        var relatedView = this.relatedView;\n        var type = this.type;\n        var view = relatedView.getEndView(type);\n        var model = view.model;\n        var magnet = relatedView.getEndMagnet(type);\n        var padding = this.options.areaPadding;\n        if (!isFinite(padding)) padding = 0;\n        var bbox, angle, center;\n        if (view.isNodeConnection(magnet)) {\n            bbox = view.getNodeBBox(magnet);\n            angle = 0;\n            center = bbox.center();\n        } else {\n            bbox = view.getNodeUnrotatedBBox(magnet);\n            angle = model.angle();\n            center = bbox.center();\n            if (angle) center.rotate(model.getBBox().center(), -angle);\n            // TODO: get the link's magnet rotation into account\n        }\n        bbox.inflate(padding);\n        areaNode.setAttribute('x', -bbox.width / 2);\n        areaNode.setAttribute('y', -bbox.height / 2);\n        areaNode.setAttribute('width', bbox.width);\n        areaNode.setAttribute('height', bbox.height);\n        areaNode.setAttribute('transform', 'translate(' + center.x + ',' + center.y + ') rotate(' + angle + ')');\n    },\n    toggleArea: function(visible) {\n        var childNodes = this.childNodes;\n        if (!childNodes) return;\n        var areaNode = childNodes.area;\n        if (!areaNode) return;\n        areaNode.style.display = (visible) ? '' : 'none';\n    },\n    onPointerDown: function(evt) {\n        if (this.guard(evt)) return;\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.paper.undelegateEvents();\n        this.delegateDocumentEvents();\n        this.focus();\n        this.toggleArea(this.options.restrictArea);\n        this.relatedView.model.startBatch('anchor-move', { ui: true, tool: this.cid });\n    },\n    resetAnchor: function(anchor) {\n        var type = this.type;\n        var relatedModel = this.relatedView.model;\n        if (anchor) {\n            relatedModel.prop([type, 'anchor'], anchor, {\n                rewrite: true,\n                ui: true,\n                tool: this.cid\n            });\n        } else {\n            relatedModel.removeProp([type, 'anchor'], {\n                ui: true,\n                tool: this.cid\n            });\n        }\n    },\n    onPointerMove: function(evt) {\n\n        var relatedView = this.relatedView;\n        var type = this.type;\n        var view = relatedView.getEndView(type);\n        var model = view.model;\n        var magnet = relatedView.getEndMagnet(type);\n        var normalizedEvent = util.normalizeEvent(evt);\n        var coords = this.paper.clientToLocalPoint(normalizedEvent.clientX, normalizedEvent.clientY);\n        var snapFn = this.options.snap;\n        if (typeof snapFn === 'function') {\n            coords = snapFn.call(relatedView, coords, view, magnet, type, relatedView, this);\n            coords = new g.Point(coords);\n        }\n\n        if (this.options.restrictArea) {\n            if (view.isNodeConnection(magnet)) {\n                // snap coords to the link's connection\n                var pointAtConnection = view.getClosestPoint(coords);\n                if (pointAtConnection) coords = pointAtConnection;\n            } else {\n                // snap coords within node bbox\n                var bbox = view.getNodeUnrotatedBBox(magnet);\n                var angle = model.angle();\n                var origin = model.getBBox().center();\n                var rotatedCoords = coords.clone().rotate(origin, angle);\n                if (!bbox.containsPoint(rotatedCoords)) {\n                    coords = bbox.pointNearestToPoint(rotatedCoords).rotate(origin, -angle);\n                }\n            }\n        }\n\n        var anchor;\n        var anchorFn = this.options.anchor;\n        if (typeof anchorFn === 'function') {\n            anchor = anchorFn.call(relatedView, coords, view, magnet, type, relatedView);\n        }\n\n        this.resetAnchor(anchor);\n        this.update();\n    },\n\n    onPointerUp: function(evt) {\n        const normalizedEvent = util.normalizeEvent(evt);\n        this.paper.delegateEvents();\n        this.undelegateDocumentEvents();\n        this.blur();\n        this.toggleArea(false);\n        var linkView = this.relatedView;\n        if (this.options.redundancyRemoval) linkView.removeRedundantLinearVertices({ ui: true, tool: this.cid });\n        linkView.checkMouseleave(normalizedEvent);\n        linkView.model.stopBatch('anchor-move', { ui: true, tool: this.cid });\n    },\n\n    onPointerDblClick: function() {\n        var anchor = this.options.resetAnchor;\n        if (anchor === false) return; // reset anchor disabled\n        if (anchor === true) anchor = null; // remove the current anchor\n        this.resetAnchor(util.cloneDeep(anchor));\n        this.update();\n    }\n});\n\nexport const SourceAnchor = Anchor.extend({\n    name: 'source-anchor',\n    type: 'source'\n});\n\nexport const TargetAnchor = Anchor.extend({\n    name: 'target-anchor',\n    type: 'target'\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}