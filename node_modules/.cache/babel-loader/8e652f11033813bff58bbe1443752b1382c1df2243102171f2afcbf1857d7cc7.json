{"ast":null,"code":"var _jsxFileName = \"/Users/guankaiyuan/ReactTs/src/components/Chatbot/Inspector/Inspector.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Subscription } from 'rxjs';\nimport NodeInspector from './NodeInspector';\nimport './Inspector.scss';\nimport LinkInspector from './LinkInspector';\nimport LabelInspector from './LabelInspector';\nimport eventBusServiceContext from '../../../services/event-bus-service.context';\nimport { SharedEvents } from '../../../joint-plus/controller';\nimport { ShapeTypesEnum } from '../../../joint-plus/shapes/app.shapes';\nconst Inspector = () => {\n  _s();\n  const [cell, setCell] = useState(null);\n  const [subscriptions] = useState(new Subscription());\n  const eventBusService = useContext(eventBusServiceContext);\n  const setSelection = selection => {\n    const [selectedCell = null] = selection;\n    setCell(selectedCell);\n  };\n  useEffect(() => {\n    subscriptions.add(eventBusService.subscribe(SharedEvents.SELECTION_CHANGED, selection => setSelection(selection)));\n    return () => {\n      subscriptions.unsubscribe();\n    };\n  }, [eventBusService, subscriptions]);\n  const chooseInspector = () => {\n    switch (cell.get('type')) {\n      case ShapeTypesEnum.NODE:\n        return /*#__PURE__*/React.createElement(NodeInspector, {\n          cell: cell,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 24\n          }\n        });\n      case ShapeTypesEnum.LINK:\n        return /*#__PURE__*/React.createElement(LinkInspector, {\n          cell: cell,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 24\n          }\n        });\n      case ShapeTypesEnum.FLOWCHART_START:\n        return /*#__PURE__*/React.createElement(LabelInspector, {\n          cell: cell,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 24\n          }\n        });\n      case ShapeTypesEnum.FLOWCHART_END:\n        return /*#__PURE__*/React.createElement(LabelInspector, {\n          cell: cell,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 24\n          }\n        });\n      default:\n        return;\n    }\n  };\n  const emptyInspector = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"Component\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, \"Label\"), /*#__PURE__*/React.createElement(\"input\", {\n      disabled: true,\n      id: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'chatbot-inspector ' + (!cell ? 'disabled-chatbot-inspector' : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, cell ? chooseInspector() : emptyInspector());\n};\n_s(Inspector, \"4GbnlVgwfx7NDMyyRRqJe6itVuI=\");\n_c = Inspector;\nexport default Inspector;\nvar _c;\n$RefreshReg$(_c, \"Inspector\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Subscription","NodeInspector","LinkInspector","LabelInspector","eventBusServiceContext","SharedEvents","ShapeTypesEnum","Inspector","_s","cell","setCell","subscriptions","eventBusService","setSelection","selection","selectedCell","add","subscribe","SELECTION_CHANGED","unsubscribe","chooseInspector","get","NODE","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","LINK","FLOWCHART_START","FLOWCHART_END","emptyInspector","Fragment","htmlFor","disabled","id","className","_c","$RefreshReg$"],"sources":["/Users/guankaiyuan/ReactTs/src/components/Chatbot/Inspector/Inspector.tsx"],"sourcesContent":["import React, { ReactElement, useContext, useEffect, useState } from 'react';\nimport { dia, shapes } from '@joint/plus';\nimport { Subscription } from 'rxjs';\n\nimport NodeInspector from './NodeInspector';\nimport './Inspector.scss';\nimport LinkInspector from './LinkInspector';\nimport LabelInspector from './LabelInspector';\nimport eventBusServiceContext from '../../../services/event-bus-service.context';\nimport { SharedEvents } from '../../../joint-plus/controller';\nimport { ShapeTypesEnum } from '../../../joint-plus/shapes/app.shapes';\n\nconst Inspector = (): ReactElement => {\n    const [cell, setCell] = useState<dia.Cell>(null);\n    const [subscriptions] = useState(new Subscription());\n    const eventBusService = useContext(eventBusServiceContext);\n\n    const setSelection = (selection: dia.Cell[]): void => {\n        const [selectedCell = null] = selection;\n        setCell(selectedCell);\n    };\n\n    useEffect(() => {\n        subscriptions.add(\n            eventBusService.subscribe(SharedEvents.SELECTION_CHANGED, (selection: dia.Cell[]) => setSelection(selection))\n        );\n        return () => {\n            subscriptions.unsubscribe();\n        };\n    }, [eventBusService, subscriptions]);\n\n    const chooseInspector = (): ReactElement => {\n        switch (cell.get('type')) {\n            case ShapeTypesEnum.NODE:\n                return <NodeInspector cell={cell as shapes.app.Node} />\n            case ShapeTypesEnum.LINK:\n                return <LinkInspector cell={cell as dia.Link} />;\n            case ShapeTypesEnum.FLOWCHART_START:\n                return <LabelInspector cell={cell} />;\n            case ShapeTypesEnum.FLOWCHART_END:\n                return <LabelInspector cell={cell} />;\n            default:\n                return;\n        }\n    };\n\n    const emptyInspector = (): ReactElement => {\n        return (\n            <>\n                <h1>Component</h1>\n                <label htmlFor=\"label\">Label</label>\n                <input disabled id=\"label\" />\n            </>\n        );\n    };\n\n    return (\n        <div className={'chatbot-inspector ' + (!cell ? 'disabled-chatbot-inspector' : '')}>\n            {\n                cell ? chooseInspector() : emptyInspector()\n            }\n        </div>\n    );\n};\n\nexport default Inspector;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}