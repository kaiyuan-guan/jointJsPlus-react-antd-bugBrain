{"ast":null,"code":"import { assign, forIn, has, isFunction, isObject, isString } from '../util/util.mjs';\nimport { matches } from '../util/utilHelpers.mjs';\n\n// Helpers\n// -------\n\n// Helper function to correctly set up the prototype chain for subclasses.\n// Similar to `goog.inherits`, but uses a hash of prototype properties and\n// class properties to be extended.\nexport var extend = function (protoProps, staticProps) {\n  var parent = this;\n  var child;\n\n  // The constructor function for the new subclass is either defined by you\n  // (the \"constructor\" property in your `extend` definition), or defaulted\n  // by us to simply call the parent constructor.\n  if (protoProps && has(protoProps, 'constructor')) {\n    child = protoProps.constructor;\n  } else {\n    child = function () {\n      return parent.apply(this, arguments);\n    };\n  }\n\n  // Add static properties to the constructor function, if supplied.\n  assign(child, parent, staticProps);\n\n  // Set the prototype chain to inherit from `parent`, without calling\n  // `parent`'s constructor function and add the prototype properties.\n  child.prototype = Object.assign(Object.create(parent.prototype), protoProps);\n  child.prototype.constructor = child;\n\n  // Set a convenience property in case the parent's prototype is needed\n  // later.\n  child.__super__ = parent.prototype;\n  return child;\n};\n\n// Proxy class methods to functions, wrapping the model's\n// `attributes` object or collection's `models` array behind the scenes.\n//\n// `Function#apply` can be slow so we use the method's arg count, if we know it.\nvar addMethod = function (base, length, method, attribute) {\n  switch (length) {\n    case 1:\n      return function () {\n        return base[method](this[attribute]);\n      };\n    case 2:\n      return function (value) {\n        return base[method](this[attribute], value);\n      };\n    case 3:\n      return function (iteratee, context) {\n        return base[method](this[attribute], cb(iteratee, this), context);\n      };\n    case 4:\n      return function (iteratee, defaultVal, context) {\n        return base[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n    default:\n      return function () {\n        var args = Array.prototype.slice.call(arguments);\n        args.unshift(this[attribute]);\n        return base[method].apply(base, args);\n      };\n  }\n};\nexport var addMethodsUtil = function (Class, base, methods, attribute) {\n  forIn(methods, function (length, method) {\n    if (base[method]) Class.prototype[method] = addMethod(base, length, method, attribute);\n  });\n};\n\n// Support `collection.sortBy('attr')`.\nvar cb = function (iteratee, instance) {\n  if (isFunction(iteratee)) return iteratee;\n  if (isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n  if (isString(iteratee)) return function (model) {\n    return model.get(iteratee);\n  };\n  return iteratee;\n};\nvar modelMatcher = function (attrs) {\n  var matcher = matches(attrs);\n  return function (model) {\n    return matcher(model.attributes);\n  };\n};","map":{"version":3,"names":["assign","forIn","has","isFunction","isObject","isString","matches","extend","protoProps","staticProps","parent","child","constructor","apply","arguments","prototype","Object","create","__super__","addMethod","base","length","method","attribute","value","iteratee","context","cb","defaultVal","args","Array","slice","call","unshift","addMethodsUtil","Class","methods","instance","_isModel","modelMatcher","model","get","attrs","matcher","attributes"],"sources":["/Users/guankaiyuan/ReactTs/node_modules/.pnpm/@joint+core@4.0.1/node_modules/@joint/core/src/mvc/mvcUtils.mjs"],"sourcesContent":["import {\n    assign,\n    forIn,\n    has,\n    isFunction,\n    isObject,\n    isString\n} from '../util/util.mjs';\nimport { matches } from '../util/utilHelpers.mjs';\n\n// Helpers\n// -------\n\n// Helper function to correctly set up the prototype chain for subclasses.\n// Similar to `goog.inherits`, but uses a hash of prototype properties and\n// class properties to be extended.\nexport var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && has(protoProps, 'constructor')) {\n        child = protoProps.constructor;\n    } else {\n        child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    assign(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function and add the prototype properties.\n    child.prototype = Object.assign(Object.create(parent.prototype), protoProps);\n    child.prototype.constructor = child;\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n};\n\n// Proxy class methods to functions, wrapping the model's\n// `attributes` object or collection's `models` array behind the scenes.\n//\n// `Function#apply` can be slow so we use the method's arg count, if we know it.\nvar addMethod = function(base, length, method, attribute) {\n    switch (length) {\n        case 1: return function() {\n            return base[method](this[attribute]);\n        };\n        case 2: return function(value) {\n            return base[method](this[attribute], value);\n        };\n        case 3: return function(iteratee, context) {\n            return base[method](this[attribute], cb(iteratee, this), context);\n        };\n        case 4: return function(iteratee, defaultVal, context) {\n            return base[method](this[attribute], cb(iteratee, this), defaultVal, context);\n        };\n        default: return function() {\n            var args = Array.prototype.slice.call(arguments);\n            args.unshift(this[attribute]);\n            return base[method].apply(base, args);\n        };\n    }\n};\n\nexport var addMethodsUtil = function(Class, base, methods, attribute) {\n    forIn(methods, function(length, method) {\n        if (base[method]) Class.prototype[method] = addMethod(base, length, method, attribute);\n    });\n};\n\n// Support `collection.sortBy('attr')`.\nvar cb = function(iteratee, instance) {\n    if (isFunction(iteratee)) return iteratee;\n    if (isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n};\n\nvar modelMatcher = function(attrs) {\n    var matcher = matches(attrs);\n    return function(model) {\n        return matcher(model.attributes);\n    };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}