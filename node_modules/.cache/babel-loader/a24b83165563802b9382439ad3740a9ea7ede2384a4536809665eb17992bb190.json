{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport var defaultThrottleConfig = {\n  leading: true,\n  trailing: false\n};\nexport function throttle(durationSelector, config) {\n  if (config === void 0) {\n    config = defaultThrottleConfig;\n  }\n  return function (source) {\n    return source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n  };\n}\nvar ThrottleOperator = /*@__PURE__*/function () {\n  function ThrottleOperator(durationSelector, leading, trailing) {\n    this.durationSelector = durationSelector;\n    this.leading = leading;\n    this.trailing = trailing;\n  }\n  ThrottleOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n  };\n  return ThrottleOperator;\n}();\nvar ThrottleSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ThrottleSubscriber, _super);\n  function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {\n    var _this = _super.call(this, destination) || this;\n    _this.destination = destination;\n    _this.durationSelector = durationSelector;\n    _this._leading = _leading;\n    _this._trailing = _trailing;\n    _this._hasValue = false;\n    return _this;\n  }\n  ThrottleSubscriber.prototype._next = function (value) {\n    this._hasValue = true;\n    this._sendValue = value;\n    if (!this._throttled) {\n      if (this._leading) {\n        this.send();\n      } else {\n        this.throttle(value);\n      }\n    }\n  };\n  ThrottleSubscriber.prototype.send = function () {\n    var _a = this,\n      _hasValue = _a._hasValue,\n      _sendValue = _a._sendValue;\n    if (_hasValue) {\n      this.destination.next(_sendValue);\n      this.throttle(_sendValue);\n    }\n    this._hasValue = false;\n    this._sendValue = null;\n  };\n  ThrottleSubscriber.prototype.throttle = function (value) {\n    var duration = this.tryDurationSelector(value);\n    if (!!duration) {\n      this.add(this._throttled = subscribeToResult(this, duration));\n    }\n  };\n  ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  };\n  ThrottleSubscriber.prototype.throttlingDone = function () {\n    var _a = this,\n      _throttled = _a._throttled,\n      _trailing = _a._trailing;\n    if (_throttled) {\n      _throttled.unsubscribe();\n    }\n    this._throttled = null;\n    if (_trailing) {\n      this.send();\n    }\n  };\n  ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.throttlingDone();\n  };\n  ThrottleSubscriber.prototype.notifyComplete = function () {\n    this.throttlingDone();\n  };\n  return ThrottleSubscriber;\n}(OuterSubscriber);","map":{"version":3,"names":["tslib_1","OuterSubscriber","subscribeToResult","defaultThrottleConfig","leading","trailing","throttle","durationSelector","config","source","lift","ThrottleOperator","prototype","call","subscriber","subscribe","ThrottleSubscriber","_super","__extends","destination","_leading","_trailing","_this","_hasValue","_next","value","_throttled","send","_a","_sendValue","next","duration","tryDurationSelector","add","err","error","throttlingDone","unsubscribe","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyComplete"],"sources":["/Users/guankaiyuan/ReactTs/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/src/internal/operators/throttle.ts"],"sourcesContent":["import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\n\nexport interface ThrottleConfig {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport const defaultThrottleConfig: ThrottleConfig = {\n  leading: true,\n  trailing: false\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](throttle.png)\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * ## Example\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { throttle } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttle(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(durationSelector: (value: T) => SubscribableOrPromise<any>,\n                            config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\n\nclass ThrottleOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private _throttled: Subscription;\n  private _sendValue: T;\n  private _hasValue = false;\n\n  constructor(protected destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private _leading: boolean,\n              private _trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this._hasValue = true;\n    this._sendValue = value;\n\n    if (!this._throttled) {\n      if (this._leading) {\n        this.send();\n      } else {\n        this.throttle(value);\n      }\n    }\n  }\n\n  private send() {\n    const { _hasValue, _sendValue } = this;\n    if (_hasValue) {\n      this.destination.next(_sendValue);\n      this.throttle(_sendValue);\n    }\n    this._hasValue = false;\n    this._sendValue = null;\n  }\n\n  private throttle(value: T): void {\n    const duration = this.tryDurationSelector(value);\n    if (!!duration) {\n      this.add(this._throttled = subscribeToResult(this, duration));\n    }\n  }\n\n  private tryDurationSelector(value: T): SubscribableOrPromise<any> {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  }\n\n  private throttlingDone() {\n    const { _throttled, _trailing } = this;\n    if (_throttled) {\n      _throttled.unsubscribe();\n    }\n    this._throttled = null;\n\n    if (_trailing) {\n      this.send();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.throttlingDone();\n  }\n\n  notifyComplete(): void {\n    this.throttlingDone();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}