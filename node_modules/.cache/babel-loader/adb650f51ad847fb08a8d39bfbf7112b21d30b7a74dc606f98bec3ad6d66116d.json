{"ast":null,"code":"/*! JointJS+ v4.0.0 - HTML5 Diagramming Framework - TRIAL VERSION\n   版权声明和版本信息 */\n\nimport { ui, shapes, format } from '@joint/plus';\n// 引入所需的模块和库\n\n// 导入 JointPlusService 服务，用于操作 JointJS+ 的功能\n\nimport { SharedEvents } from './controller';\n// 导入控制器中定义的共享事件\n\nimport { addCellTools } from './tools';\n// 导入添加单元格工具的函数\n\nimport { ZOOM_MAX, ZOOM_MIN, ZOOM_STEP } from '../theme';\n// 导入缩放相关的常量\n\nimport { stencilConfig } from './config/stencil.config';\n// 导入 stencil 配置文件，用于加载 stencil 形状\n\nimport { ShapeTypesEnum } from './shapes/app.shapes';\n// 导入图形类型的枚举\n\nimport { PADDING_L } from '../theme';\n// 导入页面边距常量\n\n// Selection\n\n/**\n * 设置选择项\n * @param service JointPlusService 实例\n * @param selection 选择的单元格数组\n */\nexport function setSelection(service, selection) {\n  const {\n    paper,\n    selection: previousSelection,\n    eventBusService\n  } = service;\n  // 从服务中获取所需属性\n  paper.removeTools();\n  // 移除所有工具\n  previousSelection.forEach(cell => {\n    const cellView = cell.findView(paper);\n    if (cellView) {\n      cellView.vel.removeClass('selected');\n    }\n  });\n  // 遍历之前的选择，移除选中状态\n  service.selection = selection;\n  // 更新当前选择\n  selection.forEach(cell => {\n    const cellView = cell.findView(paper);\n    if (cellView) {\n      cellView.vel.addClass('selected');\n      addCellTools(cellView);\n    }\n  });\n  // 遍历新的选择，添加选中状态并添加工具\n  eventBusService.emit(SharedEvents.SELECTION_CHANGED, selection);\n  // 发送选择变化的事件\n}\n\n/**\n * 移除选择项\n * @param service JointPlusService 实例\n */\nexport function removeSelection(service) {\n  const {\n    selection,\n    graph\n  } = service;\n  if (selection.length === 0) return;\n  graph.removeCells(selection);\n  // 如果有选择项，则从图中移除\n}\n\n// Zooming\n\n/**\n * 缩放以适应视图\n * @param service JointPlusService 实例\n */\nexport function zoomToFit(service) {\n  const {\n    scroller\n  } = service;\n  scroller.zoomToFit({\n    minScale: ZOOM_MIN,\n    maxScale: ZOOM_MAX,\n    scaleGrid: ZOOM_STEP,\n    useModelGeometry: true,\n    padding: PADDING_L\n  });\n  // 缩放以适应整个图的大小\n}\n\n/**\n * 放大\n * @param service JointPlusService 实例\n */\nexport function zoomIn(service) {\n  const {\n    scroller\n  } = service;\n  scroller.zoom(ZOOM_STEP, {\n    min: ZOOM_MIN,\n    max: ZOOM_MAX\n  });\n  // 放大\n}\n\n/**\n * 缩小\n * @param service JointPlusService 实例\n */\nexport function zoomOut(service) {\n  const {\n    scroller\n  } = service;\n  scroller.zoom(-ZOOM_STEP, {\n    min: ZOOM_MIN,\n    max: ZOOM_MAX\n  });\n  // 缩小\n}\n\n// Import / Export\n\n/**\n * 导出为 PNG 格式\n * @param service JointPlusService 实例\n */\nexport function exportToPNG(service) {\n  const {\n    paper\n  } = service;\n  paper.hideTools();\n  // 隐藏所有工具\n  paper.dumpViews();\n  // 清理视图，仅保留可见部分\n  format.toPNG(paper, dataURL => {\n    paper.showTools();\n    // 显示工具\n    openImageDownloadDialog(service, dataURL);\n  }, {\n    padding: 10,\n    useComputedStyles: false\n  });\n  // 将画布导出为 PNG 图像\n}\n\n/**\n * 打开图片下载对话框\n * @param service JointPlusService 实例\n * @param dataURL 图片的数据 URL\n * @param fileName 图片文件名，默认为 'Joint'\n */\nexport function openImageDownloadDialog(service, dataURL, fileName = 'Joint') {\n  const {\n    keyboard,\n    controllers\n  } = service;\n  const {\n    keyboard: keyboardCtrl\n  } = controllers;\n  keyboardCtrl.stopListening();\n  // 暂停键盘事件监听\n  const lightbox = new ui.Lightbox({\n    image: dataURL,\n    downloadable: true,\n    fileName\n  });\n  // 创建图片展示的轻箱\n  lightbox.on('action:close', () => {\n    keyboardCtrl.startListening();\n  });\n  // 监听关闭动作，恢复键盘事件监听\n  lightbox.listenTo(keyboard, 'escape', () => {\n    keyboardCtrl.startListening();\n    lightbox.close();\n  });\n  // 监听键盘事件，按下 ESC 键关闭轻箱\n  lightbox.open();\n  // 打开轻箱\n}\n\n/**\n * 从 JSON 数据导入图形\n * @param service JointPlusService 实例\n * @param json JSON 数据\n */\nexport function importGraphFromJSON(service, json) {\n  setSelection(service, []);\n  // 清除当前选择\n  const {\n    graph,\n    history\n  } = service;\n  console.log();\n  const shapeTypes = Object.values(ShapeTypesEnum);\n  history.reset();\n  try {\n    if (json.cells.some(cell => !shapeTypes.includes(cell.type))) {\n      throw new Error('Invalid JSON: Unknown Cell Type');\n    }\n    // 如果 JSON 中存在未知类型的单元格，则抛出异常\n    graph.fromJSON(json);\n  } catch (e) {\n    // 捕获异常，处理无效的 JSON 格式\n  }\n}\n\n// Stencil\n\n/**\n * 加载 stencil 形状\n * @param service JointPlusService 实例\n */\nexport function loadStencilShapes(service) {\n  const {\n    stencil\n  } = service;\n  // 获取 stencil 对象\n  // @ts-ignore\n  const stencilShapes = stencilConfig.shapes.map(shape => new shapes.stencil[shape.name](shape));\n  // 从配置中创建 stencil 形状\n  stencil.load(stencilShapes);\n  // 加载 stencil 形状\n}\n\n// Paper\n\n/**\n * 更新连接线的路由\n * @param service JointPlusService 实例\n */\nexport function updateLinksRouting(service) {\n  const {\n    paper,\n    graph\n  } = service;\n  graph.getLinks().forEach(link => {\n    const linkView = link.findView(paper);\n    if (linkView) {\n      linkView.requestConnectionUpdate();\n    }\n  });\n  // 更新所有连接线的路由\n}\n\n// History\n\n/**\n * 撤销操作\n * @param service JointPlusService 实例\n */\nexport function undoAction(service) {\n  const {\n    history\n  } = service;\n  history.undo();\n  // 执行撤销操作\n}\n\n/**\n * 重做操作\n * @param service JointPlusService 实例\n */\nexport function redoAction(service) {\n  const {\n    history\n  } = service;\n  history.redo();\n  // 执行重做操作\n}","map":{"version":3,"names":["ui","shapes","format","SharedEvents","addCellTools","ZOOM_MAX","ZOOM_MIN","ZOOM_STEP","stencilConfig","ShapeTypesEnum","PADDING_L","setSelection","service","selection","paper","previousSelection","eventBusService","removeTools","forEach","cell","cellView","findView","vel","removeClass","addClass","emit","SELECTION_CHANGED","removeSelection","graph","length","removeCells","zoomToFit","scroller","minScale","maxScale","scaleGrid","useModelGeometry","padding","zoomIn","zoom","min","max","zoomOut","exportToPNG","hideTools","dumpViews","toPNG","dataURL","showTools","openImageDownloadDialog","useComputedStyles","fileName","keyboard","controllers","keyboardCtrl","stopListening","lightbox","Lightbox","image","downloadable","on","startListening","listenTo","close","open","importGraphFromJSON","json","history","console","log","shapeTypes","Object","values","reset","cells","some","includes","type","Error","fromJSON","e","loadStencilShapes","stencil","stencilShapes","map","shape","name","load","updateLinksRouting","getLinks","link","linkView","requestConnectionUpdate","undoAction","undo","redoAction","redo"],"sources":["/Users/guankaiyuan/ReactTs/src/joint-plus/actions.ts"],"sourcesContent":["/*! JointJS+ v4.0.0 - HTML5 Diagramming Framework - TRIAL VERSION\n   版权声明和版本信息 */\n\nimport { dia, ui, shapes, format } from '@joint/plus';\n// 引入所需的模块和库\n\nimport JointPlusService from '../services/joint-plus.service';\n// 导入 JointPlusService 服务，用于操作 JointJS+ 的功能\n\nimport { SharedEvents } from './controller';\n// 导入控制器中定义的共享事件\n\nimport { addCellTools } from './tools';\n// 导入添加单元格工具的函数\n\nimport { ZOOM_MAX, ZOOM_MIN, ZOOM_STEP } from '../theme';\n// 导入缩放相关的常量\n\nimport { stencilConfig } from './config/stencil.config';\n// 导入 stencil 配置文件，用于加载 stencil 形状\n\nimport { ShapeTypesEnum } from './shapes/app.shapes';\n// 导入图形类型的枚举\n\nimport { PADDING_L } from '../theme';\n// 导入页面边距常量\n\n// Selection\n\n/**\n * 设置选择项\n * @param service JointPlusService 实例\n * @param selection 选择的单元格数组\n */\nexport function setSelection(service: JointPlusService, selection: dia.Cell[]): void {\n    const { paper, selection: previousSelection, eventBusService } = service;\n    // 从服务中获取所需属性\n    paper.removeTools();\n    // 移除所有工具\n    previousSelection.forEach(cell => {\n        const cellView = cell.findView(paper);\n        if (cellView) {\n            cellView.vel.removeClass('selected');\n        }\n    });\n    // 遍历之前的选择，移除选中状态\n    service.selection = selection;\n    // 更新当前选择\n    selection.forEach(cell => {\n        const cellView = cell.findView(paper);\n        if (cellView) {\n            cellView.vel.addClass('selected');\n            addCellTools(cellView);\n        }\n    });\n    // 遍历新的选择，添加选中状态并添加工具\n    eventBusService.emit(SharedEvents.SELECTION_CHANGED, selection);\n    // 发送选择变化的事件\n}\n\n/**\n * 移除选择项\n * @param service JointPlusService 实例\n */\nexport function removeSelection(service: JointPlusService) {\n    const { selection, graph } = service;\n    if (selection.length === 0) return;\n    graph.removeCells(selection);\n    // 如果有选择项，则从图中移除\n}\n\n// Zooming\n\n/**\n * 缩放以适应视图\n * @param service JointPlusService 实例\n */\nexport function zoomToFit(service: JointPlusService) {\n    const { scroller } = service;\n    scroller.zoomToFit({\n        minScale: ZOOM_MIN,\n        maxScale: ZOOM_MAX,\n        scaleGrid: ZOOM_STEP,\n        useModelGeometry: true,\n        padding: PADDING_L\n    });\n    // 缩放以适应整个图的大小\n}\n\n/**\n * 放大\n * @param service JointPlusService 实例\n */\nexport function zoomIn(service: JointPlusService) {\n    const { scroller } = service;\n    scroller.zoom(ZOOM_STEP, {\n        min: ZOOM_MIN,\n        max: ZOOM_MAX,\n    });\n    // 放大\n}\n\n/**\n * 缩小\n * @param service JointPlusService 实例\n */\nexport function zoomOut(service: JointPlusService) {\n    const { scroller } = service;\n    scroller.zoom(-ZOOM_STEP, {\n        min: ZOOM_MIN,\n        max: ZOOM_MAX,\n    });\n    // 缩小\n}\n\n// Import / Export\n\n/**\n * 导出为 PNG 格式\n * @param service JointPlusService 实例\n */\nexport function exportToPNG(service: JointPlusService): void {\n    const { paper } = service;\n    paper.hideTools();\n    // 隐藏所有工具\n    paper.dumpViews();\n    // 清理视图，仅保留可见部分\n    format.toPNG(paper, (dataURL: string): void => {\n        paper.showTools();\n        // 显示工具\n        openImageDownloadDialog(service, dataURL);\n    }, {\n        padding: 10,\n        useComputedStyles: false\n    });\n    // 将画布导出为 PNG 图像\n}\n\n/**\n * 打开图片下载对话框\n * @param service JointPlusService 实例\n * @param dataURL 图片的数据 URL\n * @param fileName 图片文件名，默认为 'Joint'\n */\nexport function openImageDownloadDialog(service: JointPlusService, dataURL: string, fileName: string = 'Joint'): void {\n    const { keyboard, controllers } = service;\n    const { keyboard: keyboardCtrl } = controllers;\n    keyboardCtrl.stopListening();\n    // 暂停键盘事件监听\n    const lightbox = new ui.Lightbox({\n        image: dataURL,\n        downloadable: true,\n        fileName\n    });\n    // 创建图片展示的轻箱\n    lightbox.on('action:close', () => {\n        keyboardCtrl.startListening();\n    });\n    // 监听关闭动作，恢复键盘事件监听\n    lightbox.listenTo(keyboard, 'escape', () => {\n        keyboardCtrl.startListening();\n        lightbox.close();\n    });\n    // 监听键盘事件，按下 ESC 键关闭轻箱\n    lightbox.open();\n    // 打开轻箱\n}\n\n/**\n * 从 JSON 数据导入图形\n * @param service JointPlusService 实例\n * @param json JSON 数据\n */\nexport function importGraphFromJSON(service: JointPlusService, json: any): void {\n    setSelection(service, []);\n    // 清除当前选择\n    const { graph, history } = service;\n    console.log()\n    const shapeTypes = Object.values(ShapeTypesEnum);\n    history.reset();\n    try {\n        if (json.cells.some((cell: any) => !shapeTypes.includes(cell.type))) {\n            throw new Error('Invalid JSON: Unknown Cell Type');\n        }\n        // 如果 JSON 中存在未知类型的单元格，则抛出异常\n        graph.fromJSON(json);\n    } catch (e) {\n        // 捕获异常，处理无效的 JSON 格式\n    }\n}\n\n// Stencil\n\n/**\n * 加载 stencil 形状\n * @param service JointPlusService 实例\n */\nexport function loadStencilShapes(service: JointPlusService): void {\n    const { stencil } = service;\n    // 获取 stencil 对象\n    // @ts-ignore\n    const stencilShapes = stencilConfig.shapes.map(shape => new shapes.stencil[shape.name](shape));\n    // 从配置中创建 stencil 形状\n    stencil.load(stencilShapes);\n    // 加载 stencil 形状\n}\n\n// Paper\n\n/**\n * 更新连接线的路由\n * @param service JointPlusService 实例\n */\nexport function updateLinksRouting(service: JointPlusService): void {\n    const { paper, graph } = service;\n    graph.getLinks().forEach(link => {\n        const linkView = link.findView(paper) as dia.LinkView;\n        if (linkView) {\n            linkView.requestConnectionUpdate();\n        }\n    });\n    // 更新所有连接线的路由\n}\n\n// History\n\n/**\n * 撤销操作\n * @param service JointPlusService 实例\n */\nexport function undoAction(service: JointPlusService) {\n    const { history } = service;\n    history.undo();\n    // 执行撤销操作\n}\n\n/**\n * 重做操作\n * @param service JointPlusService 实例\n */\nexport function redoAction(service: JointPlusService) {\n    const { history } = service;\n    history.redo();\n    // 执行重做操作\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}