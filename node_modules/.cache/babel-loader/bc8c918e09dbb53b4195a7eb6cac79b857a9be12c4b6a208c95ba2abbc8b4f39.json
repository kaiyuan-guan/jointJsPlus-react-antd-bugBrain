{"ast":null,"code":"/*! JointJS+ v4.0.0 - HTML5 Diagramming Framework - TRIAL VERSION\n\nCopyright (c) 2024 client IO\n\n 2024-02-18 \n\n\nThis Source Code Form is subject to the terms of the JointJS+ Trial License\n, v. 2.0. If a copy of the JointJS+ License was not distributed with this\nfile, You can obtain one at https://www.jointjs.com/license\n or from the JointJS+ archive as was distributed by client IO. See the LICENSE file.*/\n\nimport { ui, shapes, format } from '@joint/plus';\nimport { SharedEvents } from './controller';\nimport { addCellTools } from './tools';\nimport { ZOOM_MAX, ZOOM_MIN, ZOOM_STEP } from '../theme';\nimport { stencilConfig } from './config/stencil.config';\nimport { ShapeTypesEnum } from './shapes/app.shapes';\nimport { PADDING_L } from '../theme';\n\n// Selection\n\nexport function setSelection(service, selection) {\n  const {\n    paper,\n    selection: previousSelection,\n    eventBusService\n  } = service;\n  paper.removeTools();\n  previousSelection.forEach(cell => {\n    const cellView = cell.findView(paper);\n    if (cellView) {\n      cellView.vel.removeClass('selected');\n    }\n  });\n  service.selection = selection;\n  selection.forEach(cell => {\n    const cellView = cell.findView(paper);\n    if (cellView) {\n      cellView.vel.addClass('selected');\n      addCellTools(cellView);\n    }\n  });\n  eventBusService.emit(SharedEvents.SELECTION_CHANGED, selection);\n}\nexport function removeSelection(service) {\n  const {\n    selection,\n    graph\n  } = service;\n  if (selection.length === 0) return;\n  graph.removeCells(selection);\n}\n\n// Zooming\n\nexport function zoomToFit(service) {\n  const {\n    scroller\n  } = service;\n  scroller.zoomToFit({\n    minScale: ZOOM_MIN,\n    maxScale: ZOOM_MAX,\n    scaleGrid: ZOOM_STEP,\n    useModelGeometry: true,\n    padding: PADDING_L\n  });\n}\nexport function zoomIn(service) {\n  const {\n    scroller\n  } = service;\n  scroller.zoom(ZOOM_STEP, {\n    min: ZOOM_MIN,\n    max: ZOOM_MAX\n  });\n}\nexport function zoomOut(service) {\n  const {\n    scroller\n  } = service;\n  scroller.zoom(-ZOOM_STEP, {\n    min: ZOOM_MIN,\n    max: ZOOM_MAX\n  });\n}\n\n// Import / Export\n\nexport function exportToPNG(service) {\n  const {\n    paper\n  } = service;\n  paper.hideTools();\n  // Dump all views that are not in the viewport\n  paper.dumpViews();\n  format.toPNG(paper, dataURL => {\n    paper.showTools();\n    openImageDownloadDialog(service, dataURL);\n  }, {\n    padding: 10,\n    useComputedStyles: false\n  });\n}\nexport function openImageDownloadDialog(service, dataURL, fileName = 'Joint') {\n  const {\n    keyboard,\n    controllers\n  } = service;\n  const {\n    keyboard: keyboardCtrl\n  } = controllers;\n  keyboardCtrl.stopListening();\n  const lightbox = new ui.Lightbox({\n    image: dataURL,\n    downloadable: true,\n    fileName\n  });\n  lightbox.on('action:close', () => {\n    keyboardCtrl.startListening();\n  });\n  lightbox.listenTo(keyboard, 'escape', () => {\n    keyboardCtrl.startListening();\n    lightbox.close();\n  });\n  lightbox.open();\n}\nexport function importGraphFromJSON(service, json) {\n  setSelection(service, []);\n  const {\n    graph,\n    history\n  } = service;\n  const shapeTypes = Object.values(ShapeTypesEnum);\n  history.reset();\n  try {\n    if (json.cells.some(cell => !shapeTypes.includes(cell.type))) {\n      throw new Error('Invalid JSON: Unknown Cell Type');\n    }\n    graph.fromJSON(json);\n  } catch (e) {\n    // Invalid JSON format\n  }\n}\n\n// Stencil\n\nexport function loadStencilShapes(service) {\n  const {\n    stencil\n  } = service;\n  // @ts-ignore\n  const stencilShapes = stencilConfig.shapes.map(shape => new shapes.stencil[shape.name](shape));\n  stencil.load(stencilShapes);\n}\n\n// Paper\n\nexport function updateLinksRouting(service) {\n  const {\n    paper,\n    graph\n  } = service;\n  graph.getLinks().forEach(link => {\n    const linkView = link.findView(paper);\n    if (linkView) {\n      linkView.requestConnectionUpdate();\n    }\n  });\n}\n\n// History\n\nexport function undoAction(service) {\n  const {\n    history\n  } = service;\n  history.undo();\n}\nexport function redoAction(service) {\n  const {\n    history\n  } = service;\n  history.redo();\n}","map":{"version":3,"names":["ui","shapes","format","SharedEvents","addCellTools","ZOOM_MAX","ZOOM_MIN","ZOOM_STEP","stencilConfig","ShapeTypesEnum","PADDING_L","setSelection","service","selection","paper","previousSelection","eventBusService","removeTools","forEach","cell","cellView","findView","vel","removeClass","addClass","emit","SELECTION_CHANGED","removeSelection","graph","length","removeCells","zoomToFit","scroller","minScale","maxScale","scaleGrid","useModelGeometry","padding","zoomIn","zoom","min","max","zoomOut","exportToPNG","hideTools","dumpViews","toPNG","dataURL","showTools","openImageDownloadDialog","useComputedStyles","fileName","keyboard","controllers","keyboardCtrl","stopListening","lightbox","Lightbox","image","downloadable","on","startListening","listenTo","close","open","importGraphFromJSON","json","history","shapeTypes","Object","values","reset","cells","some","includes","type","Error","fromJSON","e","loadStencilShapes","stencil","stencilShapes","map","shape","name","load","updateLinksRouting","getLinks","link","linkView","requestConnectionUpdate","undoAction","undo","redoAction","redo"],"sources":["/Users/guankaiyuan/ReactTs/src/joint-plus/actions.ts"],"sourcesContent":["/*! JointJS+ v4.0.0 - HTML5 Diagramming Framework - TRIAL VERSION\n\nCopyright (c) 2024 client IO\n\n 2024-02-18 \n\n\nThis Source Code Form is subject to the terms of the JointJS+ Trial License\n, v. 2.0. If a copy of the JointJS+ License was not distributed with this\nfile, You can obtain one at https://www.jointjs.com/license\n or from the JointJS+ archive as was distributed by client IO. See the LICENSE file.*/\n\n\nimport { dia, ui, shapes, format } from '@joint/plus';\n\nimport JointPlusService from '../services/joint-plus.service';\nimport { SharedEvents } from './controller';\nimport { addCellTools } from './tools';\nimport { ZOOM_MAX, ZOOM_MIN, ZOOM_STEP } from '../theme';\nimport { stencilConfig } from './config/stencil.config';\nimport { ShapeTypesEnum } from './shapes/app.shapes';\nimport { PADDING_L } from '../theme';\n\n// Selection\n\nexport function setSelection(service: JointPlusService, selection: dia.Cell[]): void {\n    const { paper, selection: previousSelection, eventBusService } = service;\n    paper.removeTools();\n    previousSelection.forEach(cell => {\n        const cellView = cell.findView(paper);\n        if (cellView) {\n            cellView.vel.removeClass('selected');\n        }\n    });\n    service.selection = selection;\n    selection.forEach(cell => {\n        const cellView = cell.findView(paper);\n        if (cellView) {\n            cellView.vel.addClass('selected');\n            addCellTools(cellView);\n        }\n    });\n    eventBusService.emit(SharedEvents.SELECTION_CHANGED, selection);\n}\n\nexport function removeSelection(service: JointPlusService) {\n    const { selection, graph } = service;\n    if (selection.length === 0) return;\n    graph.removeCells(selection);\n}\n\n// Zooming\n\nexport function zoomToFit(service: JointPlusService) {\n    const { scroller } = service;\n    scroller.zoomToFit({\n        minScale: ZOOM_MIN,\n        maxScale: ZOOM_MAX,\n        scaleGrid: ZOOM_STEP,\n        useModelGeometry: true,\n        padding: PADDING_L\n    });\n}\n\nexport function zoomIn(service: JointPlusService) {\n    const { scroller } = service;\n    scroller.zoom(ZOOM_STEP, {\n        min: ZOOM_MIN,\n        max: ZOOM_MAX,\n    });\n}\n\nexport function zoomOut(service: JointPlusService) {\n    const { scroller } = service;\n    scroller.zoom(-ZOOM_STEP, {\n        min: ZOOM_MIN,\n        max: ZOOM_MAX,\n    });\n}\n\n// Import / Export\n\nexport function exportToPNG(service: JointPlusService): void {\n    const { paper } = service;\n    paper.hideTools();\n    // Dump all views that are not in the viewport\n    paper.dumpViews();\n    format.toPNG(paper, (dataURL: string): void => {\n        paper.showTools();\n        openImageDownloadDialog(service, dataURL);\n    }, {\n        padding: 10,\n        useComputedStyles: false\n    });\n}\n\nexport function openImageDownloadDialog(service: JointPlusService, dataURL: string, fileName: string = 'Joint'): void {\n    const { keyboard, controllers } = service;\n    const { keyboard: keyboardCtrl } = controllers;\n    keyboardCtrl.stopListening();\n    const lightbox = new ui.Lightbox({\n        image: dataURL,\n        downloadable: true,\n        fileName\n    });\n    lightbox.on('action:close', () => {\n        keyboardCtrl.startListening();\n    });\n    lightbox.listenTo(keyboard, 'escape', () => {\n        keyboardCtrl.startListening();\n        lightbox.close();\n    });\n    lightbox.open();\n}\n\nexport function importGraphFromJSON(service: JointPlusService, json: any): void {\n    setSelection(service, []);\n    const { graph, history } = service;\n    const shapeTypes = Object.values(ShapeTypesEnum);\n    history.reset();\n    try {\n        if (json.cells.some((cell: any) => !shapeTypes.includes(cell.type))) {\n            throw new Error('Invalid JSON: Unknown Cell Type');\n        }\n        graph.fromJSON(json);\n    } catch (e) {\n        // Invalid JSON format\n    }\n}\n\n// Stencil\n\nexport function loadStencilShapes(service: JointPlusService): void {\n    const { stencil } = service;\n    // @ts-ignore\n    const stencilShapes = stencilConfig.shapes.map(shape => new shapes.stencil[shape.name](shape));\n    stencil.load(stencilShapes);\n}\n\n// Paper\n\nexport function updateLinksRouting(service: JointPlusService): void {\n    const { paper, graph } = service;\n    graph.getLinks().forEach(link => {\n        const linkView = link.findView(paper) as dia.LinkView;\n        if (linkView) {\n            linkView.requestConnectionUpdate();\n        }\n    });\n}\n\n// History\n\nexport function undoAction(service: JointPlusService) {\n    const { history } = service;\n    history.undo();\n}\n\nexport function redoAction(service: JointPlusService) {\n    const { history } = service;\n    history.redo();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}