{"ast":null,"code":"import $ from './Dom/index.mjs';\nimport * as util from '../util/index.mjs';\nimport V from '../V/index.mjs';\nimport { ViewBase } from './ViewBase.mjs';\nimport { config } from '../config/index.mjs';\nexport const views = {};\nexport const View = ViewBase.extend({\n  options: {},\n  theme: null,\n  themeClassNamePrefix: util.addClassNamePrefix('theme-'),\n  requireSetThemeOverride: false,\n  defaultTheme: config.defaultTheme,\n  children: null,\n  childNodes: null,\n  DETACHABLE: true,\n  UPDATE_PRIORITY: 2,\n  FLAG_INSERT: 1 << 30,\n  FLAG_REMOVE: 1 << 29,\n  FLAG_INIT: 1 << 28,\n  constructor: function (options) {\n    this.requireSetThemeOverride = options && !!options.theme;\n    this.options = util.assign({}, this.options, options);\n    ViewBase.call(this, options);\n  },\n  initialize: function () {\n    views[this.cid] = this;\n    this.setTheme(this.options.theme || this.defaultTheme);\n    this.init();\n  },\n  unmount: function () {\n    if (this.svgElement) {\n      this.vel.remove();\n    } else {\n      this.$el.remove();\n    }\n  },\n  isMounted: function () {\n    return this.el.parentNode !== null;\n  },\n  renderChildren: function (children) {\n    children || (children = util.result(this, 'children'));\n    if (children) {\n      var isSVG = this.svgElement;\n      var namespace = V.namespace[isSVG ? 'svg' : 'xhtml'];\n      var doc = util.parseDOMJSON(children, namespace);\n      (isSVG ? this.vel : this.$el).empty().append(doc.fragment);\n      this.childNodes = doc.selectors;\n    }\n    return this;\n  },\n  findAttribute: function (attributeName, node) {\n    var currentNode = node;\n    while (currentNode && currentNode.nodeType === 1) {\n      var attributeValue = currentNode.getAttribute(attributeName);\n      // attribute found\n      if (attributeValue) return attributeValue;\n      // do not climb up the DOM\n      if (currentNode === this.el) return null;\n      // try parent node\n      currentNode = currentNode.parentNode;\n    }\n    return null;\n  },\n  // Override the mvc ViewBase `_ensureElement()` method in order to create an\n  // svg element (e.g., `<g>`) node that wraps all the nodes of the Cell view.\n  // Expose class name setter as a separate method.\n  _ensureElement: function () {\n    if (!this.el) {\n      var tagName = util.result(this, 'tagName');\n      var attrs = util.assign({}, util.result(this, 'attributes'));\n      var style = util.assign({}, util.result(this, 'style'));\n      if (this.id) attrs.id = util.result(this, 'id');\n      this.setElement(this._createElement(tagName));\n      this._setAttributes(attrs);\n      this._setStyle(style);\n    } else {\n      this.setElement(util.result(this, 'el'));\n    }\n    this._ensureElClassName();\n  },\n  _setAttributes: function (attrs) {\n    if (this.svgElement) {\n      this.vel.attr(attrs);\n    } else {\n      this.$el.attr(attrs);\n    }\n  },\n  _setStyle: function (style) {\n    this.$el.css(style);\n  },\n  _createElement: function (tagName) {\n    if (this.svgElement) {\n      return document.createElementNS(V.namespace.svg, tagName);\n    } else {\n      return document.createElement(tagName);\n    }\n  },\n  // Utilize an alternative DOM manipulation API by\n  // adding an element reference wrapped in Vectorizer.\n  _setElement: function (el) {\n    this.$el = el instanceof $ ? el : $(el);\n    this.el = this.$el[0];\n    if (this.svgElement) this.vel = V(this.el);\n  },\n  _ensureElClassName: function () {\n    var className = util.result(this, 'className');\n    if (!className) return;\n    var prefixedClassName = util.addClassNamePrefix(className);\n    // Note: className removal here kept for backwards compatibility only\n    if (this.svgElement) {\n      this.vel.removeClass(className).addClass(prefixedClassName);\n    } else {\n      this.$el.removeClass(className).addClass(prefixedClassName);\n    }\n  },\n  init: function () {\n    // Intentionally empty.\n    // This method is meant to be overridden.\n  },\n  onRender: function () {\n    // Intentionally empty.\n    // This method is meant to be overridden.\n  },\n  confirmUpdate: function () {\n    // Intentionally empty.\n    // This method is meant to be overridden.\n    return 0;\n  },\n  setTheme: function (theme, opt) {\n    opt = opt || {};\n\n    // Theme is already set, override is required, and override has not been set.\n    // Don't set the theme.\n    if (this.theme && this.requireSetThemeOverride && !opt.override) {\n      return this;\n    }\n    this.removeThemeClassName();\n    this.addThemeClassName(theme);\n    this.onSetTheme(this.theme /* oldTheme */, theme /* newTheme */);\n    this.theme = theme;\n    return this;\n  },\n  addThemeClassName: function (theme) {\n    theme = theme || this.theme;\n    if (!theme) return this;\n    var className = this.themeClassNamePrefix + theme;\n    if (this.svgElement) {\n      this.vel.addClass(className);\n    } else {\n      this.$el.addClass(className);\n    }\n    return this;\n  },\n  removeThemeClassName: function (theme) {\n    theme = theme || this.theme;\n    var className = this.themeClassNamePrefix + theme;\n    if (this.svgElement) {\n      this.vel.removeClass(className);\n    } else {\n      this.$el.removeClass(className);\n    }\n    return this;\n  },\n  onSetTheme: function (oldTheme, newTheme) {\n    // Intentionally empty.\n    // This method is meant to be overridden.\n  },\n  remove: function () {\n    this.onRemove();\n    this.undelegateDocumentEvents();\n    views[this.cid] = null;\n    ViewBase.prototype.remove.apply(this, arguments);\n    return this;\n  },\n  onRemove: function () {\n    // Intentionally empty.\n    // This method is meant to be overridden.\n  },\n  getEventNamespace: function () {\n    // Returns a per-session unique namespace\n    return '.joint-event-ns-' + this.cid;\n  },\n  delegateElementEvents: function (element, events, data) {\n    if (!events) return this;\n    data || (data = {});\n    var eventNS = this.getEventNamespace();\n    for (var eventName in events) {\n      var method = events[eventName];\n      if (typeof method !== 'function') method = this[method];\n      if (!method) continue;\n      $(element).on(eventName + eventNS, data, method.bind(this));\n    }\n    return this;\n  },\n  undelegateElementEvents: function (element) {\n    $(element).off(this.getEventNamespace());\n    return this;\n  },\n  delegateDocumentEvents: function (events, data) {\n    events || (events = util.result(this, 'documentEvents'));\n    return this.delegateElementEvents(document, events, data);\n  },\n  undelegateDocumentEvents: function () {\n    return this.undelegateElementEvents(document);\n  },\n  eventData: function (evt, data) {\n    if (!evt) throw new Error('eventData(): event object required.');\n    var currentData = evt.data;\n    var key = '__' + this.cid + '__';\n    if (data === undefined) {\n      if (!currentData) return {};\n      return currentData[key] || {};\n    }\n    currentData || (currentData = evt.data = {});\n    currentData[key] || (currentData[key] = {});\n    util.assign(currentData[key], data);\n    return this;\n  },\n  stopPropagation: function (evt) {\n    this.eventData(evt, {\n      propagationStopped: true\n    });\n    return this;\n  },\n  isPropagationStopped: function (evt) {\n    return !!this.eventData(evt).propagationStopped;\n  }\n}, {\n  extend: function () {\n    var args = Array.from(arguments);\n\n    // Deep clone the prototype and static properties objects.\n    // This prevents unexpected behavior where some properties are overwritten outside of this function.\n    var protoProps = args[0] && util.assign({}, args[0]) || {};\n    var staticProps = args[1] && util.assign({}, args[1]) || {};\n\n    // Need the real render method so that we can wrap it and call it later.\n    var renderFn = protoProps.render || this.prototype && this.prototype.render || null;\n\n    /*\n        Wrap the real render method so that:\n            .. `onRender` is always called.\n            .. `this` is always returned.\n    */\n    protoProps.render = function () {\n      if (typeof renderFn === 'function') {\n        // Call the original render method.\n        renderFn.apply(this, arguments);\n      }\n      if (this.render.__render__ === renderFn) {\n        // Should always call onRender() method.\n        // Should call it only once when renderFn is actual prototype method i.e. not the wrapper\n        this.onRender();\n      }\n\n      // Should always return itself.\n      return this;\n    };\n    protoProps.render.__render__ = renderFn;\n    return ViewBase.extend.call(this, protoProps, staticProps);\n  }\n});","map":{"version":3,"names":["$","util","V","ViewBase","config","views","View","extend","options","theme","themeClassNamePrefix","addClassNamePrefix","requireSetThemeOverride","defaultTheme","children","childNodes","DETACHABLE","UPDATE_PRIORITY","FLAG_INSERT","FLAG_REMOVE","FLAG_INIT","constructor","assign","call","initialize","cid","setTheme","init","unmount","svgElement","vel","remove","$el","isMounted","el","parentNode","renderChildren","result","isSVG","namespace","doc","parseDOMJSON","empty","append","fragment","selectors","findAttribute","attributeName","node","currentNode","nodeType","attributeValue","getAttribute","_ensureElement","tagName","attrs","style","id","setElement","_createElement","_setAttributes","_setStyle","_ensureElClassName","attr","css","document","createElementNS","svg","createElement","_setElement","className","prefixedClassName","removeClass","addClass","onRender","confirmUpdate","opt","override","removeThemeClassName","addThemeClassName","onSetTheme","oldTheme","newTheme","onRemove","undelegateDocumentEvents","prototype","apply","arguments","getEventNamespace","delegateElementEvents","element","events","data","eventNS","eventName","method","on","bind","undelegateElementEvents","off","delegateDocumentEvents","eventData","evt","Error","currentData","key","undefined","stopPropagation","propagationStopped","isPropagationStopped","args","Array","from","protoProps","staticProps","renderFn","render","__render__"],"sources":["/Users/guankaiyuan/ReactTs/node_modules/.pnpm/@joint+core@4.0.1/node_modules/@joint/core/src/mvc/View.mjs"],"sourcesContent":["import $ from './Dom/index.mjs';\n\nimport * as util from '../util/index.mjs';\nimport V from '../V/index.mjs';\nimport { ViewBase } from './ViewBase.mjs';\nimport { config } from '../config/index.mjs';\n\nexport const views = {};\n\nexport const View = ViewBase.extend({\n\n    options: {},\n    theme: null,\n    themeClassNamePrefix: util.addClassNamePrefix('theme-'),\n    requireSetThemeOverride: false,\n    defaultTheme: config.defaultTheme,\n    children: null,\n    childNodes: null,\n\n    DETACHABLE: true,\n    UPDATE_PRIORITY: 2,\n    FLAG_INSERT: 1<<30,\n    FLAG_REMOVE: 1<<29,\n    FLAG_INIT: 1<<28,\n\n    constructor: function(options) {\n\n        this.requireSetThemeOverride = options && !!options.theme;\n        this.options = util.assign({}, this.options, options);\n\n        ViewBase.call(this, options);\n    },\n\n    initialize: function() {\n\n        views[this.cid] = this;\n\n        this.setTheme(this.options.theme || this.defaultTheme);\n        this.init();\n    },\n\n    unmount: function() {\n        if (this.svgElement) {\n            this.vel.remove();\n        } else {\n            this.$el.remove();\n        }\n    },\n\n    isMounted: function() {\n        return this.el.parentNode !== null;\n    },\n\n    renderChildren: function(children) {\n        children || (children = util.result(this, 'children'));\n        if (children) {\n            var isSVG = this.svgElement;\n            var namespace = V.namespace[isSVG ? 'svg' : 'xhtml'];\n            var doc = util.parseDOMJSON(children, namespace);\n            (isSVG ? this.vel : this.$el).empty().append(doc.fragment);\n            this.childNodes = doc.selectors;\n        }\n        return this;\n    },\n\n    findAttribute: function(attributeName, node) {\n\n        var currentNode = node;\n\n        while (currentNode && currentNode.nodeType === 1) {\n            var attributeValue = currentNode.getAttribute(attributeName);\n            // attribute found\n            if (attributeValue) return attributeValue;\n            // do not climb up the DOM\n            if (currentNode === this.el) return null;\n            // try parent node\n            currentNode = currentNode.parentNode;\n        }\n\n        return null;\n    },\n\n    // Override the mvc ViewBase `_ensureElement()` method in order to create an\n    // svg element (e.g., `<g>`) node that wraps all the nodes of the Cell view.\n    // Expose class name setter as a separate method.\n    _ensureElement: function() {\n        if (!this.el) {\n            var tagName = util.result(this, 'tagName');\n            var attrs = util.assign({}, util.result(this, 'attributes'));\n            var style = util.assign({}, util.result(this, 'style'));\n            if (this.id) attrs.id = util.result(this, 'id');\n            this.setElement(this._createElement(tagName));\n            this._setAttributes(attrs);\n            this._setStyle(style);\n        } else {\n            this.setElement(util.result(this, 'el'));\n        }\n        this._ensureElClassName();\n    },\n\n    _setAttributes: function(attrs) {\n        if (this.svgElement) {\n            this.vel.attr(attrs);\n        } else {\n            this.$el.attr(attrs);\n        }\n    },\n\n    _setStyle: function(style) {\n        this.$el.css(style);\n    },\n\n    _createElement: function(tagName) {\n        if (this.svgElement) {\n            return document.createElementNS(V.namespace.svg, tagName);\n        } else {\n            return document.createElement(tagName);\n        }\n    },\n\n    // Utilize an alternative DOM manipulation API by\n    // adding an element reference wrapped in Vectorizer.\n    _setElement: function(el) {\n        this.$el = el instanceof $ ? el : $(el);\n        this.el = this.$el[0];\n        if (this.svgElement) this.vel = V(this.el);\n    },\n\n    _ensureElClassName: function() {\n        var className = util.result(this, 'className');\n        if (!className) return;\n        var prefixedClassName = util.addClassNamePrefix(className);\n        // Note: className removal here kept for backwards compatibility only\n        if (this.svgElement) {\n            this.vel.removeClass(className).addClass(prefixedClassName);\n        } else {\n            this.$el.removeClass(className).addClass(prefixedClassName);\n        }\n    },\n\n    init: function() {\n        // Intentionally empty.\n        // This method is meant to be overridden.\n    },\n\n    onRender: function() {\n        // Intentionally empty.\n        // This method is meant to be overridden.\n    },\n\n    confirmUpdate: function() {\n        // Intentionally empty.\n        // This method is meant to be overridden.\n        return 0;\n    },\n\n    setTheme: function(theme, opt) {\n\n        opt = opt || {};\n\n        // Theme is already set, override is required, and override has not been set.\n        // Don't set the theme.\n        if (this.theme && this.requireSetThemeOverride && !opt.override) {\n            return this;\n        }\n\n        this.removeThemeClassName();\n        this.addThemeClassName(theme);\n        this.onSetTheme(this.theme/* oldTheme */, theme/* newTheme */);\n        this.theme = theme;\n\n        return this;\n    },\n\n    addThemeClassName: function(theme) {\n\n        theme = theme || this.theme;\n        if (!theme) return this;\n\n        var className = this.themeClassNamePrefix + theme;\n\n        if (this.svgElement) {\n            this.vel.addClass(className);\n        } else {\n            this.$el.addClass(className);\n        }\n\n        return this;\n    },\n\n    removeThemeClassName: function(theme) {\n\n        theme = theme || this.theme;\n\n        var className = this.themeClassNamePrefix + theme;\n\n        if (this.svgElement) {\n            this.vel.removeClass(className);\n        } else {\n            this.$el.removeClass(className);\n        }\n\n        return this;\n    },\n\n    onSetTheme: function(oldTheme, newTheme) {\n        // Intentionally empty.\n        // This method is meant to be overridden.\n    },\n\n    remove: function() {\n\n        this.onRemove();\n        this.undelegateDocumentEvents();\n\n        views[this.cid] = null;\n\n        ViewBase.prototype.remove.apply(this, arguments);\n\n        return this;\n    },\n\n    onRemove: function() {\n        // Intentionally empty.\n        // This method is meant to be overridden.\n    },\n\n    getEventNamespace: function() {\n        // Returns a per-session unique namespace\n        return '.joint-event-ns-' + this.cid;\n    },\n\n    delegateElementEvents: function(element, events, data) {\n        if (!events) return this;\n        data || (data = {});\n        var eventNS = this.getEventNamespace();\n        for (var eventName in events) {\n            var method = events[eventName];\n            if (typeof method !== 'function') method = this[method];\n            if (!method) continue;\n            $(element).on(eventName + eventNS, data, method.bind(this));\n        }\n        return this;\n    },\n\n    undelegateElementEvents: function(element) {\n        $(element).off(this.getEventNamespace());\n        return this;\n    },\n\n    delegateDocumentEvents: function(events, data) {\n        events || (events = util.result(this, 'documentEvents'));\n        return this.delegateElementEvents(document, events, data);\n    },\n\n    undelegateDocumentEvents: function() {\n        return this.undelegateElementEvents(document);\n    },\n\n    eventData: function(evt, data) {\n        if (!evt) throw new Error('eventData(): event object required.');\n        var currentData = evt.data;\n        var key = '__' + this.cid + '__';\n        if (data === undefined) {\n            if (!currentData) return {};\n            return currentData[key] || {};\n        }\n        currentData || (currentData = evt.data = {});\n        currentData[key] || (currentData[key] = {});\n        util.assign(currentData[key], data);\n        return this;\n    },\n\n    stopPropagation: function(evt) {\n        this.eventData(evt, { propagationStopped: true });\n        return this;\n    },\n\n    isPropagationStopped: function(evt) {\n        return !!this.eventData(evt).propagationStopped;\n    }\n\n}, {\n\n    extend: function() {\n\n        var args = Array.from(arguments);\n\n        // Deep clone the prototype and static properties objects.\n        // This prevents unexpected behavior where some properties are overwritten outside of this function.\n        var protoProps = args[0] && util.assign({}, args[0]) || {};\n        var staticProps = args[1] && util.assign({}, args[1]) || {};\n\n        // Need the real render method so that we can wrap it and call it later.\n        var renderFn = protoProps.render || (this.prototype && this.prototype.render) || null;\n\n        /*\n            Wrap the real render method so that:\n                .. `onRender` is always called.\n                .. `this` is always returned.\n        */\n        protoProps.render = function() {\n\n            if (typeof renderFn === 'function') {\n                // Call the original render method.\n                renderFn.apply(this, arguments);\n            }\n\n            if (this.render.__render__ === renderFn) {\n                // Should always call onRender() method.\n                // Should call it only once when renderFn is actual prototype method i.e. not the wrapper\n                this.onRender();\n            }\n\n            // Should always return itself.\n            return this;\n        };\n\n        protoProps.render.__render__ = renderFn;\n\n        return ViewBase.extend.call(this, protoProps, staticProps);\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}