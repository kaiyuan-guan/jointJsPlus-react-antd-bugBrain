{"ast":null,"code":"/*! JointJS+ v4.0.0 - HTML5 Diagramming Framework - TRIAL VERSION\n\nCopyright (c) 2024 client IO\n\n 2024-02-18 \n\n\nThis Source Code Form is subject to the terms of the JointJS+ Trial License\n, v. 2.0. If a copy of the JointJS+ License was not distributed with this\nfile, You can obtain one at https://www.jointjs.com/license\n or from the JointJS+ archive as was distributed by client IO. See the LICENSE file.*/\n\nexport function enableVirtualRendering(scroller, options = {}) {\n  const {\n    paper\n  } = scroller.options;\n  const {\n    threshold = 0\n  } = options;\n  let viewportArea;\n  function updateViewportArea() {\n    viewportArea = scroller.getVisibleArea().inflate(threshold);\n  }\n\n  // Setup listeners\n  updateViewportArea();\n  scroller.on('scroll', updateViewportArea);\n  paper.on('scale', updateViewportArea);\n\n  // Paper `viewport` option\n  // https://resources.jointjs.com/docs/jointjs/#dia.Paper.prototype.options.viewport\n  paper.options.viewport = view => {\n    const {\n      model\n    } = view;\n    // Hide elements and links which are not in the viewport.\n    const bbox = model.getBBox();\n    if (model.isLink()) {\n      // Vertical/horizontal links have zero width/height.\n      bbox.inflate(1);\n    }\n    return viewportArea.intersect(bbox) !== null;\n  };\n}","map":{"version":3,"names":["enableVirtualRendering","scroller","options","paper","threshold","viewportArea","updateViewportArea","getVisibleArea","inflate","on","viewport","view","model","bbox","getBBox","isLink","intersect"],"sources":["/Users/guankaiyuan/ReactTs/src/joint-plus/features/virtual-rendering.ts"],"sourcesContent":["/*! JointJS+ v4.0.0 - HTML5 Diagramming Framework - TRIAL VERSION\n\nCopyright (c) 2024 client IO\n\n 2024-02-18 \n\n\nThis Source Code Form is subject to the terms of the JointJS+ Trial License\n, v. 2.0. If a copy of the JointJS+ License was not distributed with this\nfile, You can obtain one at https://www.jointjs.com/license\n or from the JointJS+ archive as was distributed by client IO. See the LICENSE file.*/\n\n\nimport { g, mvc, ui } from '@joint/plus';\n\ninterface VirtualRenderingOptions {\n    threshold?: number;\n}\n\nexport function enableVirtualRendering(scroller: ui.PaperScroller, options: VirtualRenderingOptions = {}) {\n    const { paper } = scroller.options;\n    const { threshold = 0 } = options;\n\n    let viewportArea: g.Rect;\n    function updateViewportArea() {\n        viewportArea = scroller.getVisibleArea().inflate(threshold);\n    }\n\n    // Setup listeners\n    updateViewportArea();\n    scroller.on('scroll', updateViewportArea);\n    paper.on('scale', updateViewportArea);\n\n    // Paper `viewport` option\n    // https://resources.jointjs.com/docs/jointjs/#dia.Paper.prototype.options.viewport\n    paper.options.viewport = (view: mvc.View<any>) => {\n        const { model } = view;\n        // Hide elements and links which are not in the viewport.\n        const bbox = model.getBBox();\n        if (model.isLink()) {\n            // Vertical/horizontal links have zero width/height.\n            bbox.inflate(1);\n        }\n        return viewportArea.intersect(bbox) !== null;\n    };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA,OAAO,SAASA,sBAAsBA,CAACC,QAA0B,EAAEC,OAAgC,GAAG,CAAC,CAAC,EAAE;EACtG,MAAM;IAAEC;EAAM,CAAC,GAAGF,QAAQ,CAACC,OAAO;EAClC,MAAM;IAAEE,SAAS,GAAG;EAAE,CAAC,GAAGF,OAAO;EAEjC,IAAIG,YAAoB;EACxB,SAASC,kBAAkBA,CAAA,EAAG;IAC1BD,YAAY,GAAGJ,QAAQ,CAACM,cAAc,CAAC,CAAC,CAACC,OAAO,CAACJ,SAAS,CAAC;EAC/D;;EAEA;EACAE,kBAAkB,CAAC,CAAC;EACpBL,QAAQ,CAACQ,EAAE,CAAC,QAAQ,EAAEH,kBAAkB,CAAC;EACzCH,KAAK,CAACM,EAAE,CAAC,OAAO,EAAEH,kBAAkB,CAAC;;EAErC;EACA;EACAH,KAAK,CAACD,OAAO,CAACQ,QAAQ,GAAIC,IAAmB,IAAK;IAC9C,MAAM;MAAEC;IAAM,CAAC,GAAGD,IAAI;IACtB;IACA,MAAME,IAAI,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC;IAC5B,IAAIF,KAAK,CAACG,MAAM,CAAC,CAAC,EAAE;MAChB;MACAF,IAAI,CAACL,OAAO,CAAC,CAAC,CAAC;IACnB;IACA,OAAOH,YAAY,CAACW,SAAS,CAACH,IAAI,CAAC,KAAK,IAAI;EAChD,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}