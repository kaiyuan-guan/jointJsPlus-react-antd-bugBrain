{"ast":null,"code":"import { Connect } from '../linkTools/Connect.mjs';\nimport V from '../V/index.mjs';\nimport $ from '../mvc/Dom/index.mjs';\nimport * as util from '../util/index.mjs';\nimport * as g from '../g/index.mjs';\nexport const HoverConnect = Connect.extend({\n  name: 'hover-connect',\n  defaultMarkup: [{\n    tagName: 'circle',\n    attributes: {\n      'r': 7,\n      'fill': '#333333',\n      'cursor': 'pointer'\n    }\n  }, {\n    tagName: 'path',\n    attributes: {\n      'd': 'M -4 -1 L 0 -1 L 0 -4 L 4 0 L 0 4 0 1 -4 1 z',\n      'fill': '#FFFFFF',\n      'stroke': 'none',\n      'stroke-width': 2\n    }\n  }],\n  children() {\n    const {\n      options,\n      defaultMarkup\n    } = this;\n    return [{\n      tagName: 'path',\n      selector: 'track',\n      attributes: {\n        'fill': 'none',\n        'stroke': 'transparent',\n        'stroke-width': options.trackWidth || 15,\n        'cursor': 'pointer'\n      }\n    }, {\n      tagName: 'g',\n      selector: 'button',\n      attributes: {\n        'pointer-events': 'none',\n        'display': 'none'\n      },\n      children: options.markup || defaultMarkup\n    }];\n  },\n  events: Object.assign({\n    mousemove: 'onMousemove',\n    mouseenter: 'onMouseenter',\n    mouseleave: 'onMouseleave'\n  }, Connect.prototype.events),\n  onRender: function () {\n    this.renderChildren();\n    this.update();\n  },\n  trackPath: null,\n  update() {\n    const {\n      childNodes\n    } = this;\n    this.trackPath = this.getTrackPath();\n    Connect.prototype.update.apply(this, arguments);\n    childNodes.track.setAttribute('d', this.trackPath.serialize());\n  },\n  position() {\n    const {\n      el,\n      childNodes\n    } = this;\n    childNodes.button.setAttribute('transform', V.matrixToTransformString(this.getButtonMatrix()));\n    el.setAttribute('transform', V.matrixToTransformString(this.getTrackMatrix()));\n  },\n  getButtonMatrix() {\n    const {\n      options,\n      trackPath\n    } = this;\n    const {\n      offset = 0,\n      distance = 0,\n      rotate,\n      scale\n    } = options;\n    let tangent, position, angle;\n    if (util.isPercentage(distance)) {\n      tangent = trackPath.tangentAtRatio(parseFloat(distance) / 100);\n    } else {\n      tangent = trackPath.tangentAtLength(distance);\n    }\n    if (tangent) {\n      position = tangent.start;\n      angle = tangent.vector().vectorAngle(new g.Point(1, 0)) || 0;\n    } else {\n      position = trackPath.start;\n      angle = 0;\n    }\n    let matrix = V.createSVGMatrix().translate(position.x, position.y).rotate(angle).translate(0, offset);\n    if (!rotate) matrix = matrix.rotate(-angle);\n    if (scale) matrix = matrix.scale(scale);\n    return matrix;\n  },\n  getTrackPath() {\n    return this.relatedView.getConnection();\n  },\n  getTrackMatrix() {\n    return V.createSVGMatrix();\n  },\n  getTrackRatioFromEvent(evt) {\n    const {\n      relatedView,\n      trackPath\n    } = this;\n    const localPoint = relatedView.paper.clientToLocalPoint(evt.clientX, evt.clientY);\n    const trackPoint = V.transformPoint(localPoint, this.getTrackMatrix().inverse());\n    return trackPath.closestPointLength(trackPoint);\n  },\n  canShowButton() {\n    // Has been the paper events undelegated? If so, we can't show the button.\n    // TODO: add a method to the paper to check if the events are delegated.\n    return $.event.has(this.paper.el);\n  },\n  showButton() {\n    this.childNodes.button.style.display = 'block';\n  },\n  hideButton() {\n    this.childNodes.button.style.display = '';\n  },\n  onMousemove(evt) {\n    const {\n      trackPath\n    } = this;\n    if (!trackPath) return;\n    const {\n      options\n    } = this;\n    options.distance = this.getTrackRatioFromEvent(evt);\n    this.position();\n  },\n  onMouseenter() {\n    if (!this.canShowButton()) return;\n    this.showButton();\n  },\n  onMouseleave() {\n    this.hideButton();\n  }\n});","map":{"version":3,"names":["Connect","V","$","util","g","HoverConnect","extend","name","defaultMarkup","tagName","attributes","children","options","selector","trackWidth","markup","events","Object","assign","mousemove","mouseenter","mouseleave","prototype","onRender","renderChildren","update","trackPath","childNodes","getTrackPath","apply","arguments","track","setAttribute","serialize","position","el","button","matrixToTransformString","getButtonMatrix","getTrackMatrix","offset","distance","rotate","scale","tangent","angle","isPercentage","tangentAtRatio","parseFloat","tangentAtLength","start","vector","vectorAngle","Point","matrix","createSVGMatrix","translate","x","y","relatedView","getConnection","getTrackRatioFromEvent","evt","localPoint","paper","clientToLocalPoint","clientX","clientY","trackPoint","transformPoint","inverse","closestPointLength","canShowButton","event","has","showButton","style","display","hideButton","onMousemove","onMouseenter","onMouseleave"],"sources":["/Users/guankaiyuan/ReactTs/node_modules/.pnpm/@joint+core@4.0.1/node_modules/@joint/core/src/linkTools/HoverConnect.mjs"],"sourcesContent":["import { Connect } from '../linkTools/Connect.mjs';\nimport V from '../V/index.mjs';\nimport $ from '../mvc/Dom/index.mjs';\nimport * as util from '../util/index.mjs';\nimport * as g from '../g/index.mjs';\n\nexport const HoverConnect = Connect.extend({\n\n    name: 'hover-connect',\n\n    defaultMarkup: [\n        {\n            tagName: 'circle',\n            attributes: {\n                'r': 7,\n                'fill': '#333333',\n                'cursor': 'pointer'\n            }\n        },\n        {\n            tagName: 'path',\n            attributes: {\n                'd': 'M -4 -1 L 0 -1 L 0 -4 L 4 0 L 0 4 0 1 -4 1 z',\n                'fill': '#FFFFFF',\n                'stroke': 'none',\n                'stroke-width': 2\n            }\n        }\n    ],\n\n    children() {\n        const { options, defaultMarkup } = this;\n        return [\n            {\n                tagName: 'path',\n                selector: 'track',\n                attributes: {\n                    'fill': 'none',\n                    'stroke': 'transparent',\n                    'stroke-width': options.trackWidth || 15,\n                    'cursor': 'pointer'\n                }\n            },\n            {\n                tagName: 'g',\n                selector: 'button',\n                attributes: {\n                    'pointer-events': 'none',\n                    'display': 'none'\n                },\n                children: options.markup || defaultMarkup\n            }\n        ];\n    },\n\n    events: Object.assign({\n        mousemove: 'onMousemove',\n        mouseenter: 'onMouseenter',\n        mouseleave: 'onMouseleave'\n    }, Connect.prototype.events),\n\n    onRender: function() {\n        this.renderChildren();\n        this.update();\n    },\n\n    trackPath: null,\n\n    update() {\n        const { childNodes } = this;\n        this.trackPath = this.getTrackPath();\n        Connect.prototype.update.apply(this, arguments);\n        childNodes.track.setAttribute(\n            'd',\n            this.trackPath.serialize()\n        );\n    },\n\n    position() {\n        const { el, childNodes } = this;\n        childNodes.button.setAttribute(\n            'transform',\n            V.matrixToTransformString(this.getButtonMatrix())\n        );\n        el.setAttribute(\n            'transform',\n            V.matrixToTransformString(this.getTrackMatrix())\n        );\n    },\n\n    getButtonMatrix() {\n        const { options, trackPath } = this;\n        const { offset = 0, distance = 0, rotate, scale } = options;\n        let tangent, position, angle;\n        if (util.isPercentage(distance)) {\n            tangent = trackPath.tangentAtRatio(parseFloat(distance) / 100);\n        } else {\n            tangent = trackPath.tangentAtLength(distance);\n        }\n        if (tangent) {\n            position = tangent.start;\n            angle = tangent.vector().vectorAngle(new g.Point(1, 0)) || 0;\n        } else {\n            position = trackPath.start;\n            angle = 0;\n        }\n        let matrix = V.createSVGMatrix()\n            .translate(position.x, position.y)\n            .rotate(angle)\n            .translate(0, offset);\n        if (!rotate) matrix = matrix.rotate(-angle);\n        if (scale) matrix = matrix.scale(scale);\n        return matrix;\n    },\n\n    getTrackPath() {\n        return this.relatedView.getConnection();\n    },\n\n    getTrackMatrix() {\n        return V.createSVGMatrix();\n    },\n\n    getTrackRatioFromEvent(evt) {\n        const { relatedView, trackPath } = this;\n        const localPoint = relatedView.paper.clientToLocalPoint(evt.clientX, evt.clientY);\n        const trackPoint = V.transformPoint(localPoint, this.getTrackMatrix().inverse());\n        return trackPath.closestPointLength(trackPoint);\n    },\n\n    canShowButton() {\n        // Has been the paper events undelegated? If so, we can't show the button.\n        // TODO: add a method to the paper to check if the events are delegated.\n        return $.event.has(this.paper.el);\n    },\n\n    showButton() {\n        this.childNodes.button.style.display = 'block';\n    },\n\n    hideButton() {\n        this.childNodes.button.style.display = '';\n    },\n\n    onMousemove(evt) {\n        const { trackPath } = this;\n        if (!trackPath) return;\n        const { options } = this;\n        options.distance = this.getTrackRatioFromEvent(evt);\n        this.position();\n    },\n\n    onMouseenter() {\n        if (!this.canShowButton()) return;\n        this.showButton();\n    },\n\n    onMouseleave() {\n        this.hideButton();\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}