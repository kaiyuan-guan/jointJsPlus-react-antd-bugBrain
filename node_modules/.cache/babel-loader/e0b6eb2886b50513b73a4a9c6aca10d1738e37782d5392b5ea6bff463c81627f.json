{"ast":null,"code":"import { ToolView } from '../dia/ToolView.mjs';\nimport * as util from '../util/index.mjs';\nexport const Control = ToolView.extend({\n  tagName: 'g',\n  children: [{\n    tagName: 'circle',\n    selector: 'handle',\n    attributes: {\n      'cursor': 'pointer',\n      'stroke-width': 2,\n      'stroke': '#FFFFFF',\n      'fill': '#33334F',\n      'r': 6\n    }\n  }, {\n    tagName: 'rect',\n    selector: 'extras',\n    attributes: {\n      'pointer-events': 'none',\n      'fill': 'none',\n      'stroke': '#33334F',\n      'stroke-dasharray': '2,4',\n      'rx': 5,\n      'ry': 5\n    }\n  }],\n  events: {\n    mousedown: 'onPointerDown',\n    touchstart: 'onPointerDown',\n    dblclick: 'onPointerDblClick',\n    dbltap: 'onPointerDblClick'\n  },\n  documentEvents: {\n    mousemove: 'onPointerMove',\n    touchmove: 'onPointerMove',\n    mouseup: 'onPointerUp',\n    touchend: 'onPointerUp',\n    touchcancel: 'onPointerUp'\n  },\n  options: {\n    handleAttributes: null,\n    selector: 'root',\n    padding: 6,\n    scale: null\n  },\n  getPosition: function () {\n    // To be overridden\n  },\n  setPosition: function () {\n    // To be overridden\n  },\n  resetPosition: function () {\n    // To be overridden\n  },\n  onRender: function () {\n    this.renderChildren();\n    this.toggleExtras(false);\n    this.update();\n  },\n  update: function () {\n    const {\n      handle,\n      extras\n    } = this.childNodes;\n    if (handle) {\n      this.updateHandle(handle);\n    } else {\n      throw new Error('Control: markup selector `handle` is required');\n    }\n    if (extras) {\n      this.updateExtras(extras);\n    }\n    return this;\n  },\n  updateHandle: function (handleNode) {\n    const {\n      relatedView,\n      options\n    } = this;\n    const {\n      model\n    } = relatedView;\n    const relativePos = this.getPosition(relatedView, this);\n    const absolutePos = model.getAbsolutePointFromRelative(relativePos);\n    const {\n      handleAttributes,\n      scale\n    } = options;\n    let transformString = `translate(${absolutePos.x},${absolutePos.y})`;\n    if (scale) {\n      transformString += ` scale(${scale})`;\n    }\n    handleNode.setAttribute('transform', transformString);\n    if (handleAttributes) {\n      for (let attrName in handleAttributes) {\n        handleNode.setAttribute(attrName, handleAttributes[attrName]);\n      }\n    }\n  },\n  updateExtras: function (extrasNode) {\n    const {\n      relatedView,\n      options\n    } = this;\n    const {\n      selector\n    } = this.options;\n    if (!selector) {\n      this.toggleExtras(false);\n      return;\n    }\n    const magnet = relatedView.findNode(selector);\n    if (!magnet) throw new Error('Control: invalid selector.');\n    let padding = options.padding;\n    if (!isFinite(padding)) padding = 0;\n    const bbox = relatedView.getNodeUnrotatedBBox(magnet);\n    const model = relatedView.model;\n    const angle = model.angle();\n    const center = bbox.center();\n    if (angle) center.rotate(model.getBBox().center(), -angle);\n    bbox.inflate(padding);\n    extrasNode.setAttribute('x', -bbox.width / 2);\n    extrasNode.setAttribute('y', -bbox.height / 2);\n    extrasNode.setAttribute('width', bbox.width);\n    extrasNode.setAttribute('height', bbox.height);\n    extrasNode.setAttribute('transform', `translate(${center.x},${center.y}) rotate(${angle})`);\n  },\n  toggleExtras: function (visible) {\n    const {\n      extras\n    } = this.childNodes;\n    if (!extras) return;\n    extras.style.display = visible ? '' : 'none';\n  },\n  onPointerDown: function (evt) {\n    const {\n      relatedView,\n      paper\n    } = this;\n    if (this.guard(evt)) return;\n    evt.stopPropagation();\n    evt.preventDefault();\n    paper.undelegateEvents();\n    this.delegateDocumentEvents();\n    this.focus();\n    this.toggleExtras(true);\n    relatedView.model.startBatch('control-move', {\n      ui: true,\n      tool: this.cid\n    });\n  },\n  onPointerMove: function (evt) {\n    const {\n      relatedView,\n      paper\n    } = this;\n    const {\n      model\n    } = relatedView;\n    const {\n      clientX,\n      clientY\n    } = util.normalizeEvent(evt);\n    const coords = paper.clientToLocalPoint(clientX, clientY);\n    const relativeCoords = model.getRelativePointFromAbsolute(coords);\n    this.setPosition(relatedView, relativeCoords, this);\n    this.update();\n  },\n  onPointerUp: function (_evt) {\n    const {\n      relatedView,\n      paper\n    } = this;\n    paper.delegateEvents();\n    this.undelegateDocumentEvents();\n    this.blur();\n    this.toggleExtras(false);\n    relatedView.model.stopBatch('control-move', {\n      ui: true,\n      tool: this.cid\n    });\n  },\n  onPointerDblClick: function () {\n    const {\n      relatedView\n    } = this;\n    this.resetPosition(relatedView, this);\n    this.update();\n  }\n});","map":{"version":3,"names":["ToolView","util","Control","extend","tagName","children","selector","attributes","events","mousedown","touchstart","dblclick","dbltap","documentEvents","mousemove","touchmove","mouseup","touchend","touchcancel","options","handleAttributes","padding","scale","getPosition","setPosition","resetPosition","onRender","renderChildren","toggleExtras","update","handle","extras","childNodes","updateHandle","Error","updateExtras","handleNode","relatedView","model","relativePos","absolutePos","getAbsolutePointFromRelative","transformString","x","y","setAttribute","attrName","extrasNode","magnet","findNode","isFinite","bbox","getNodeUnrotatedBBox","angle","center","rotate","getBBox","inflate","width","height","visible","style","display","onPointerDown","evt","paper","guard","stopPropagation","preventDefault","undelegateEvents","delegateDocumentEvents","focus","startBatch","ui","tool","cid","onPointerMove","clientX","clientY","normalizeEvent","coords","clientToLocalPoint","relativeCoords","getRelativePointFromAbsolute","onPointerUp","_evt","delegateEvents","undelegateDocumentEvents","blur","stopBatch","onPointerDblClick"],"sources":["/Users/guankaiyuan/ReactTs/node_modules/.pnpm/@joint+core@4.0.1/node_modules/@joint/core/src/elementTools/Control.mjs"],"sourcesContent":["import { ToolView } from '../dia/ToolView.mjs';\nimport * as util from '../util/index.mjs';\n\nexport const Control = ToolView.extend({\n    tagName: 'g',\n    children: [{\n        tagName: 'circle',\n        selector: 'handle',\n        attributes: {\n            'cursor': 'pointer',\n            'stroke-width': 2,\n            'stroke': '#FFFFFF',\n            'fill': '#33334F',\n            'r': 6\n        }\n    }, {\n        tagName: 'rect',\n        selector: 'extras',\n        attributes: {\n            'pointer-events': 'none',\n            'fill': 'none',\n            'stroke': '#33334F',\n            'stroke-dasharray': '2,4',\n            'rx': 5,\n            'ry': 5\n        }\n    }],\n    events: {\n        mousedown: 'onPointerDown',\n        touchstart: 'onPointerDown',\n        dblclick: 'onPointerDblClick',\n        dbltap: 'onPointerDblClick'\n    },\n    documentEvents: {\n        mousemove: 'onPointerMove',\n        touchmove: 'onPointerMove',\n        mouseup: 'onPointerUp',\n        touchend: 'onPointerUp',\n        touchcancel: 'onPointerUp'\n    },\n    options: {\n        handleAttributes: null,\n        selector: 'root',\n        padding: 6,\n        scale: null\n    },\n\n    getPosition: function() {\n        // To be overridden\n    },\n    setPosition: function() {\n        // To be overridden\n    },\n    resetPosition: function() {\n        // To be overridden\n    },\n    onRender: function() {\n        this.renderChildren();\n        this.toggleExtras(false);\n        this.update();\n    },\n    update: function() {\n        const { handle, extras } = this.childNodes;\n        if (handle) {\n            this.updateHandle(handle);\n        } else {\n            throw new Error('Control: markup selector `handle` is required');\n        }\n        if (extras) {\n            this.updateExtras(extras);\n        }\n        return this;\n    },\n    updateHandle: function(handleNode) {\n        const { relatedView, options } = this;\n        const { model } = relatedView;\n        const relativePos = this.getPosition(relatedView, this);\n        const absolutePos = model.getAbsolutePointFromRelative(relativePos);\n        const { handleAttributes, scale } = options;\n        let transformString =  `translate(${absolutePos.x},${absolutePos.y})`;\n        if (scale) {\n            transformString += ` scale(${scale})`;\n        }\n        handleNode.setAttribute('transform', transformString);\n        if (handleAttributes) {\n            for (let attrName in handleAttributes) {\n                handleNode.setAttribute(attrName, handleAttributes[attrName]);\n            }\n        }\n    },\n    updateExtras: function(extrasNode) {\n        const { relatedView, options } = this;\n        const { selector } = this.options;\n        if (!selector) {\n            this.toggleExtras(false);\n            return;\n        }\n        const magnet = relatedView.findNode(selector);\n        if (!magnet) throw new Error('Control: invalid selector.');\n        let padding = options.padding;\n        if (!isFinite(padding)) padding = 0;\n        const bbox = relatedView.getNodeUnrotatedBBox(magnet);\n        const model = relatedView.model;\n        const angle = model.angle();\n        const center = bbox.center();\n        if (angle) center.rotate(model.getBBox().center(), -angle);\n        bbox.inflate(padding);\n        extrasNode.setAttribute('x', -bbox.width / 2);\n        extrasNode.setAttribute('y', -bbox.height / 2);\n        extrasNode.setAttribute('width', bbox.width);\n        extrasNode.setAttribute('height', bbox.height);\n        extrasNode.setAttribute('transform', `translate(${center.x},${center.y}) rotate(${angle})`);\n    },\n    toggleExtras: function(visible) {\n        const { extras } = this.childNodes;\n        if (!extras) return;\n        extras.style.display = (visible) ? '' : 'none';\n    },\n    onPointerDown: function(evt) {\n        const { relatedView, paper } = this;\n        if (this.guard(evt)) return;\n        evt.stopPropagation();\n        evt.preventDefault();\n        paper.undelegateEvents();\n        this.delegateDocumentEvents();\n        this.focus();\n        this.toggleExtras(true);\n        relatedView.model.startBatch('control-move', { ui: true, tool: this.cid });\n    },\n    onPointerMove: function(evt) {\n        const { relatedView, paper } = this;\n        const { model } = relatedView;\n        const { clientX, clientY } = util.normalizeEvent(evt);\n        const coords = paper.clientToLocalPoint(clientX, clientY);\n        const relativeCoords = model.getRelativePointFromAbsolute(coords);\n        this.setPosition(relatedView, relativeCoords, this);\n        this.update();\n    },\n    onPointerUp: function(_evt) {\n        const { relatedView, paper } = this;\n        paper.delegateEvents();\n        this.undelegateDocumentEvents();\n        this.blur();\n        this.toggleExtras(false);\n        relatedView.model.stopBatch('control-move', { ui: true, tool: this.cid });\n    },\n    onPointerDblClick: function() {\n        const { relatedView } = this;\n        this.resetPosition(relatedView, this);\n        this.update();\n    }\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}