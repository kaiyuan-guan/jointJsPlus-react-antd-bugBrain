{"ast":null,"code":"import { evalCalcAttribute, isCalcAttribute } from '../dia/attributes/calc.mjs';\nimport { ToolView } from '../dia/ToolView.mjs';\nimport { getViewBBox } from './helpers.mjs';\nimport * as util from '../util/index.mjs';\nimport * as g from '../g/index.mjs';\nimport V from '../V/index.mjs';\nexport const Button = ToolView.extend({\n  name: 'button',\n  events: {\n    'mousedown': 'onPointerDown',\n    'touchstart': 'onPointerDown'\n  },\n  options: {\n    distance: 0,\n    offset: 0,\n    scale: null,\n    rotate: false\n  },\n  onRender: function () {\n    this.renderChildren(this.options.markup);\n    this.update();\n  },\n  update: function () {\n    this.position();\n    return this;\n  },\n  position: function () {\n    const {\n      vel\n    } = this;\n    vel.transform(this.getCellMatrix(), {\n      absolute: true\n    });\n  },\n  getCellMatrix() {\n    return this.relatedView.model.isLink() ? this.getLinkMatrix() : this.getElementMatrix();\n  },\n  getElementMatrix() {\n    const {\n      relatedView: view,\n      options\n    } = this;\n    let {\n      x = 0,\n      y = 0,\n      offset = {},\n      useModelGeometry,\n      rotate,\n      scale\n    } = options;\n    let bbox = getViewBBox(view, useModelGeometry);\n    const angle = view.model.angle();\n    if (!rotate) bbox = bbox.bbox(angle);\n    const {\n      x: offsetX = 0,\n      y: offsetY = 0\n    } = offset;\n    if (util.isPercentage(x)) {\n      x = parseFloat(x) / 100 * bbox.width;\n    } else if (isCalcAttribute(x)) {\n      x = Number(evalCalcAttribute(x, bbox));\n    }\n    if (util.isPercentage(y)) {\n      y = parseFloat(y) / 100 * bbox.height;\n    } else if (isCalcAttribute(y)) {\n      y = Number(evalCalcAttribute(y, bbox));\n    }\n    let matrix = V.createSVGMatrix().translate(bbox.x + bbox.width / 2, bbox.y + bbox.height / 2);\n    if (rotate) matrix = matrix.rotate(angle);\n    matrix = matrix.translate(x + offsetX - bbox.width / 2, y + offsetY - bbox.height / 2);\n    if (scale) matrix = matrix.scale(scale);\n    return matrix;\n  },\n  getLinkMatrix() {\n    const {\n      relatedView: view,\n      options\n    } = this;\n    const {\n      offset = 0,\n      distance = 0,\n      rotate,\n      scale\n    } = options;\n    let tangent, position, angle;\n    if (util.isPercentage(distance)) {\n      tangent = view.getTangentAtRatio(parseFloat(distance) / 100);\n    } else {\n      tangent = view.getTangentAtLength(distance);\n    }\n    if (tangent) {\n      position = tangent.start;\n      angle = tangent.vector().vectorAngle(new g.Point(1, 0)) || 0;\n    } else {\n      position = view.getConnection().start;\n      angle = 0;\n    }\n    let matrix = V.createSVGMatrix().translate(position.x, position.y).rotate(angle).translate(0, offset);\n    if (!rotate) matrix = matrix.rotate(-angle);\n    if (scale) matrix = matrix.scale(scale);\n    return matrix;\n  },\n  onPointerDown: function (evt) {\n    if (this.guard(evt)) return;\n    evt.stopPropagation();\n    evt.preventDefault();\n    var actionFn = this.options.action;\n    if (typeof actionFn === 'function') {\n      actionFn.call(this.relatedView, evt, this.relatedView, this);\n    }\n  }\n});\nexport const Remove = Button.extend({\n  name: 'remove',\n  children: [{\n    tagName: 'circle',\n    selector: 'button',\n    attributes: {\n      'r': 7,\n      'fill': '#FF1D00',\n      'cursor': 'pointer'\n    }\n  }, {\n    tagName: 'path',\n    selector: 'icon',\n    attributes: {\n      'd': 'M -3 -3 3 3 M -3 3 3 -3',\n      'fill': 'none',\n      'stroke': '#FFFFFF',\n      'stroke-width': 2,\n      'pointer-events': 'none'\n    }\n  }],\n  options: {\n    distance: 60,\n    offset: 0,\n    action: function (evt, view, tool) {\n      view.model.remove({\n        ui: true,\n        tool: tool.cid\n      });\n    }\n  }\n});","map":{"version":3,"names":["evalCalcAttribute","isCalcAttribute","ToolView","getViewBBox","util","g","V","Button","extend","name","events","options","distance","offset","scale","rotate","onRender","renderChildren","markup","update","position","vel","transform","getCellMatrix","absolute","relatedView","model","isLink","getLinkMatrix","getElementMatrix","view","x","y","useModelGeometry","bbox","angle","offsetX","offsetY","isPercentage","parseFloat","width","Number","height","matrix","createSVGMatrix","translate","tangent","getTangentAtRatio","getTangentAtLength","start","vector","vectorAngle","Point","getConnection","onPointerDown","evt","guard","stopPropagation","preventDefault","actionFn","action","call","Remove","children","tagName","selector","attributes","tool","remove","ui","cid"],"sources":["/Users/guankaiyuan/ReactTs/node_modules/.pnpm/@joint+core@4.0.1/node_modules/@joint/core/src/linkTools/Button.mjs"],"sourcesContent":["import { evalCalcAttribute, isCalcAttribute } from '../dia/attributes/calc.mjs';\nimport { ToolView } from '../dia/ToolView.mjs';\nimport { getViewBBox } from './helpers.mjs';\nimport * as util from '../util/index.mjs';\nimport * as g from '../g/index.mjs';\nimport V from '../V/index.mjs';\n\nexport const Button = ToolView.extend({\n    name: 'button',\n    events: {\n        'mousedown': 'onPointerDown',\n        'touchstart': 'onPointerDown'\n    },\n    options: {\n        distance: 0,\n        offset: 0,\n        scale: null,\n        rotate: false\n    },\n    onRender: function() {\n        this.renderChildren(this.options.markup);\n        this.update();\n    },\n    update: function() {\n        this.position();\n        return this;\n    },\n    position: function() {\n        const { vel } = this;\n        vel.transform(this.getCellMatrix(), { absolute: true });\n    },\n    getCellMatrix() {\n        return this.relatedView.model.isLink() ? this.getLinkMatrix() : this.getElementMatrix();\n    },\n    getElementMatrix() {\n        const { relatedView: view, options } = this;\n        let { x = 0, y = 0, offset = {}, useModelGeometry, rotate, scale } = options;\n        let bbox = getViewBBox(view, useModelGeometry);\n        const angle = view.model.angle();\n        if (!rotate) bbox = bbox.bbox(angle);\n        const { x: offsetX = 0, y: offsetY = 0 } = offset;\n        if (util.isPercentage(x)) {\n            x = parseFloat(x) / 100 * bbox.width;\n        } else if (isCalcAttribute(x)) {\n            x = Number(evalCalcAttribute(x, bbox));\n        }\n        if (util.isPercentage(y)) {\n            y = parseFloat(y) / 100 * bbox.height;\n        } else if (isCalcAttribute(y)) {\n            y = Number(evalCalcAttribute(y, bbox));\n        }\n        let matrix = V.createSVGMatrix().translate(bbox.x + bbox.width / 2, bbox.y + bbox.height / 2);\n        if (rotate) matrix = matrix.rotate(angle);\n        matrix = matrix.translate(x + offsetX - bbox.width / 2, y + offsetY - bbox.height / 2);\n        if (scale) matrix = matrix.scale(scale);\n        return matrix;\n    },\n    getLinkMatrix() {\n        const { relatedView: view, options } = this;\n        const { offset = 0, distance = 0, rotate, scale } = options;\n        let tangent, position, angle;\n        if (util.isPercentage(distance)) {\n            tangent = view.getTangentAtRatio(parseFloat(distance) / 100);\n        } else {\n            tangent = view.getTangentAtLength(distance);\n        }\n        if (tangent) {\n            position = tangent.start;\n            angle = tangent.vector().vectorAngle(new g.Point(1, 0)) || 0;\n        } else {\n            position = view.getConnection().start;\n            angle = 0;\n        }\n        let matrix = V.createSVGMatrix()\n            .translate(position.x, position.y)\n            .rotate(angle)\n            .translate(0, offset);\n        if (!rotate) matrix = matrix.rotate(-angle);\n        if (scale) matrix = matrix.scale(scale);\n        return matrix;\n    },\n    onPointerDown: function(evt) {\n        if (this.guard(evt)) return;\n        evt.stopPropagation();\n        evt.preventDefault();\n        var actionFn = this.options.action;\n        if (typeof actionFn === 'function') {\n            actionFn.call(this.relatedView, evt, this.relatedView, this);\n        }\n    }\n});\n\nexport const Remove = Button.extend({\n    name: 'remove',\n    children: [{\n        tagName: 'circle',\n        selector: 'button',\n        attributes: {\n            'r': 7,\n            'fill': '#FF1D00',\n            'cursor': 'pointer'\n        }\n    }, {\n        tagName: 'path',\n        selector: 'icon',\n        attributes: {\n            'd': 'M -3 -3 3 3 M -3 3 3 -3',\n            'fill': 'none',\n            'stroke': '#FFFFFF',\n            'stroke-width': 2,\n            'pointer-events': 'none'\n        }\n    }],\n    options: {\n        distance: 60,\n        offset: 0,\n        action: function(evt, view, tool) {\n            view.model.remove({ ui: true, tool: tool.cid });\n        }\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}